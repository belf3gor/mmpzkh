
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовСЗВ_6_3;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСтруктуруПроверяемыхДанных();	
КонецФункции	

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();	
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции	

#Область ПроцедурыПолученияДанныхДляЗаполненияИПроведенияДокумента

Функция ДанныеФизическихЛиц(Организация, ОтчетныйПериод, СписокФизЛиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	МассивДанныхФизЛиц = Новый Массив;
	МассивДанныхФизЛиц.Добавить("Фамилия");
	МассивДанныхФизЛиц.Добавить("Имя");
	МассивДанныхФизЛиц.Добавить("Отчество");
	МассивДанныхФизЛиц.Добавить("СтраховойНомерПФР");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, СписокФизЛиц, МассивДанныхФизЛиц, ДатаНачалаОтчетногоПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК Сотрудник,
	|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фамилия
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции	

Функция СведенияОЗаработке(Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц) Экспорт
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВТСведенияОДоходах(Организация, ДатаНачалаОтчетногоПериода, Запрос.МенеджерВременныхТаблиц, КатегорияЗастрахованныхЛиц, ТипДоговора, СписокФизЛиц);	
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ДанныеОДоходах.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОДоходах.Месяц,
	|	ДанныеОДоходах.Заработок,
	|	ДанныеОДоходах.ОблагаетсяВзносами
	|ИЗ
	|	ВТДанныеОДоходах КАК ДанныеОДоходах";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции	

Процедура СформироватьВТСведенияОДоходах(Организация, ОтчетныйПериод, МенеджерВременныхТаблиц, КатегорияЗастрахованныхЛиц = Неопределено, ТипДоговора = Неопределено, МассивФизлиц = Неопределено)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ГоловнаяОрганизация = Справочники.Организации.ПустаяСсылка();
	Иначе	
		ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ГоловнаяОрганизация");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
	Запрос.УстановитьПараметр("НеОтбиратьПоТипуДоговора", ТипДоговора = Неопределено);
	Запрос.УстановитьПараметр("НеОтбиратьПоКатегории", КатегорияЗастрахованныхЛиц = Неопределено);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", ПерсонифицированныйУчет.СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим")); 
	Запрос.УстановитьПараметр("УпрощенныйНалоговыйРежим", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.УпрощенныйНалоговыйРежим"));
	Запрос.УстановитьПараметр("ЕНВД", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ЕНВД")); 
	Запрос.УстановитьПараметр("ДатаУплатыВзносовСПревышения", УчетСтраховыхВзносов.ДатаСтрахованияВременноПребывающих());
	
	НачалоПериода = НачалоМесяца(ОтчетныйПериод);
	ОкончаниеПериода = КонецГода(ОтчетныйПериод);
	
	Если МассивФизлиц = Неопределено Тогда
		
		МенеджерВременныхТаблиц = УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(ОтчетныйПериод, ОкончаниеПериода, Организация, , Истина, ,Истина);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;	
	Иначе
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ФизЛица", МассивФизлиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	&Организация КАК Организация,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
			
		// только для ПФР
		УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц, Истина, ,Истина);
	КонецЕсли;
	
	ПерсонифицированныйУчет.СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора,
	|	СУММА(СведенияОДоходах.НачисленоВсего) КАК НачисленоВсего,
	|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ОблагаемаяБазаПФР,
	|	СведенияОДоходах.ВидЗастрахованногоЛица
	|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		МЕСЯЦ(СведенияОДоходах.Период) КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой) КАК ТипДоговора,
	|		СведенияОДоходах.СуммаПоТрудовомуДоговору КАК НачисленоВсего,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору - ВЫБОР
	|			КОГДА СведенияОДоходах.Период < &ДатаУплатыВзносовСПревышения
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА 0
	|			ИНАЧЕ СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|		КОНЕЦ КАК ОблагаемаяБазаПФР
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.ЗастрахованПФР
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.Период,
	|		МЕСЯЦ(СведенияОДоходах.Период),
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидЗастрахованногоЛица,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой),
	|		СведенияОДоходах.Сумма - СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - ВЫБОР
	|			КОГДА СведенияОДоходах.Период < &ДатаУплатыВзносовСПревышения
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА 0
	|			ИНАЧЕ СведенияОДоходах.СуммаПревысившаяПределПФР
	|		КОНЕЦ - (СведенияОДоходах.БазаПФРПоТрудовомуДоговору - ВЫБОР
	|			КОГДА СведенияОДоходах.Период < &ДатаУплатыВзносовСПревышения
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА 0
	|			ИНАЧЕ СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|		КОНЕЦ)
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.ЗастрахованПФР) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора,
	|	СведенияОДоходах.ВидЗастрахованногоЛица
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходах.НачисленоВсего) * СУММА(СведенияОДоходах.НачисленоВсего) + СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) * СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(Доходы.НачисленоВсего) КАК Заработок,
	|	СУММА(Доходы.ОблагаемаяБазаПФР) КАК ОблагаетсяВзносами,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеОДоходах
	|ИЗ
	|	ВТДоходыПоТарифамДоговорам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И Доходы.ВидЗастрахованногоЛица = СоответствиеТарифаИВидаЗЛКатегории.ВидЗастрахованногоЛица
	|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.Месяц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора";	
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТИсправленияПоЗаработку(МенеджерВременныхТаблиц, МассивДокументов)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументовСИсправлениями", МассивДокументов);

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТИсправленияПоКатегориям
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ПачкаДокументовСЗВ_6_3Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка В(&МассивДокументовСИсправлениями)
	|	И ПачкаДокументовСЗВ_6_3Сотрудники.ФиксЗаработок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсправленияПоКатегориям.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокСотрудниковСИсправлениями
	|ИЗ
	|	ВТИсправленияПоКатегориям КАК ИсправленияПоКатегориям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОДоходах.ФизическоеЛицо,
	|	ДанныеОДоходах.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТТекущиеСведенияОКатегориях
	|ИЗ
	|	ВТСписокСотрудниковСИсправлениями КАК СписокСотрудниковСИсправлениями
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеОДоходах КАК ДанныеОДоходах
	|		ПО СписокСотрудниковСИсправлениями.ФизическоеЛицо = ДанныеОДоходах.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправленияПоКатегориям.ФизическоеЛицо,
	|	ИсправленияПоКатегориям.КатегорияЗастрахованныхЛиц,
	|	ВЫБОР
	|		КОГДА ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИсправлениеКорректно
	|ПОМЕСТИТЬ ВТСоответствиеИсправленныхКатегорийТекущим
	|ИЗ
	|	ВТИсправленияПоКатегориям КАК ИсправленияПоКатегориям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущиеСведенияОКатегориях КАК ТекущиеСведенияОКатегориях
	|		ПО ИсправленияПоКатегориям.ФизическоеЛицо = ТекущиеСведенияОКатегориях.ФизическоеЛицо
	|			И ИсправленияПоКатегориям.КатегорияЗастрахованныхЛиц = ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТСведенияИсправленныхСотрудников
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ПачкаДокументовСЗВ_6_3Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокСотрудниковСИсправлениями КАК СписокСотрудниковСИсправлениями
	|		ПО ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник = СписокСотрудниковСИсправлениями.ФизическоеЛицо
	|			И (ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка В (&МассивДокументовСИсправлениями))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияИсправленныхСотрудников.ФизическоеЛицо,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияИсправленныхСотрудников.КатегорияЗастрахованныхЛиц) КАК КоличествоКатегорий
	|ПОМЕСТИТЬ ВТКоличествоКатегорийПоИсправляемымСотрудникам
	|ИЗ
	|	ВТСведенияИсправленныхСотрудников КАК СведенияИсправленныхСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияИсправленныхСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеСведенияОКатегориях.ФизическоеЛицо,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц) КАК КоличествоКатегорий
	|ПОМЕСТИТЬ ВТТекущееКоличествоКатегорийСотрудников
	|ИЗ
	|	ВТТекущиеСведенияОКатегориях КАК ТекущиеСведенияОКатегориях
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеСведенияОКатегориях.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеСведенияОКатегориях.ФизическоеЛицо,
	|	ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТНовыеКатегории
	|ИЗ
	|	ВТТекущиеСведенияОКатегориях КАК ТекущиеСведенияОКатегориях
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленияПоКатегориям КАК ИсправленияПоКатегориям
	|		ПО ТекущиеСведенияОКатегориях.ФизическоеЛицо = ИсправленияПоКатегориям.ФизическоеЛицо
	|			И ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц = ИсправленияПоКатегориям.КатегорияЗастрахованныхЛиц
	|ГДЕ
	|	ИсправленияПоКатегориям.ФизическоеЛицо ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоличествоНеСовпадающихКатегорийПоФизЛицам.ФизическоеЛицо,
	|	СУММА(КоличествоНеСовпадающихКатегорийПоФизЛицам.КоличествоНесовпадающихКатегорий) КАК КоличествоНесовпадающихКатегорий
	|ПОМЕСТИТЬ ВТКоличествоНесовпадающихКатегорийПоСотрудникам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТекущиеСведенияОКатегориях.ФизическоеЛицо КАК ФизическоеЛицо,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц) КАК КоличествоНесовпадающихКатегорий
	|	ИЗ
	|		ВТТекущиеСведенияОКатегориях КАК ТекущиеСведенияОКатегориях
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияИсправленныхСотрудников КАК СведенияИсправленныхСотрудников
	|			ПО ТекущиеСведенияОКатегориях.ФизическоеЛицо = СведенияИсправленныхСотрудников.ФизическоеЛицо
	|				И ТекущиеСведенияОКатегориях.КатегорияЗастрахованныхЛиц = СведенияИсправленныхСотрудников.КатегорияЗастрахованныхЛиц
	|	ГДЕ
	|		СведенияИсправленныхСотрудников.ФизическоеЛицо ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТекущиеСведенияОКатегориях.ФизическоеЛицо) КАК КоличествоНеСовпадающихКатегорийПоФизЛицам
	|
	|СГРУППИРОВАТЬ ПО
	|	КоличествоНеСовпадающихКатегорийПоФизЛицам.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеИсправленныхКатегорийТекущим.ФизическоеЛицо,
	|	СоответствиеИсправленныхКатегорийТекущим.КатегорияЗастрахованныхЛиц,
	|	СоответствиеИсправленныхКатегорийТекущим.КатегорияЗастрахованныхЛиц КАК СтараяКатегорияЗастрахованныхЛиц
	|ПОМЕСТИТЬ ВТФиксируемыеИсправления
	|ИЗ
	|	ВТСоответствиеИсправленныхКатегорийТекущим КАК СоответствиеИсправленныхКатегорийТекущим
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКоличествоКатегорийПоИсправляемымСотрудникам КАК КоличествоКатегорийПоИсправляемымСотрудникам
	|		ПО СоответствиеИсправленныхКатегорийТекущим.ФизическоеЛицо = КоличествоКатегорийПоИсправляемымСотрудникам.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущееКоличествоКатегорийСотрудников КАК ТекущееКоличествоКатегорийСотрудников
	|		ПО СоответствиеИсправленныхКатегорийТекущим.ФизическоеЛицо = ТекущееКоличествоКатегорийСотрудников.ФизическоеЛицо
	|ГДЕ
	|	(КоличествоКатегорийПоИсправляемымСотрудникам.КоличествоКатегорий = ТекущееКоличествоКатегорийСотрудников.КоличествоКатегорий
	|				И СоответствиеИсправленныхКатегорийТекущим.ИсправлениеКорректно
	|			ИЛИ ТекущееКоличествоКатегорийСотрудников.КоличествоКатегорий ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоответствиеИсправленныхКатегорийТекущим.ФизическоеЛицо,
	|	НовыеКатегории.КатегорияЗастрахованныхЛиц,
	|	СоответствиеИсправленныхКатегорийТекущим.КатегорияЗастрахованныхЛиц
	|ИЗ
	|	ВТКоличествоНесовпадающихКатегорийПоСотрудникам КАК КоличествоНесовпадающихКатегорийПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТекущееКоличествоКатегорийСотрудников КАК ТекущееКоличествоКатегорийСотрудников
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКоличествоКатегорийПоИсправляемымСотрудникам КАК КоличествоКатегорийПоИсправляемымСотрудникам
	|			ПО ТекущееКоличествоКатегорийСотрудников.ФизическоеЛицо = КоличествоКатегорийПоИсправляемымСотрудникам.ФизическоеЛицо
	|				И ТекущееКоличествоКатегорийСотрудников.КоличествоКатегорий = КоличествоКатегорийПоИсправляемымСотрудникам.КоличествоКатегорий
	|		ПО (КоличествоНесовпадающихКатегорийПоСотрудникам.КоличествоНесовпадающихКатегорий = 1)
	|			И КоличествоНесовпадающихКатегорийПоСотрудникам.ФизическоеЛицо = ТекущееКоличествоКатегорийСотрудников.ФизическоеЛицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеИсправленныхКатегорийТекущим КАК СоответствиеИсправленныхКатегорийТекущим
	|		ПО КоличествоНесовпадающихКатегорийПоСотрудникам.ФизическоеЛицо = СоответствиеИсправленныхКатегорийТекущим.ФизическоеЛицо
	|			И (НЕ СоответствиеИсправленныхКатегорийТекущим.ИсправлениеКорректно)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеКатегории КАК НовыеКатегории
	|		ПО КоличествоНесовпадающихКатегорийПоСотрудникам.ФизическоеЛицо = НовыеКатегории.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФиксируемыеИсправления.ФизическоеЛицо,
	|	ФиксируемыеИсправления.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Месяц,
	|	СУММА(ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_3СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТИсправленияПоЗаработку
	|ИЗ
	|	ВТФиксируемыеИсправления КАК ФиксируемыеИсправления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ПачкаДокументовСЗВ_6_3Сотрудники
	|		ПО ФиксируемыеИсправления.ФизическоеЛицо = ПачкаДокументовСЗВ_6_3Сотрудники.Сотрудник
	|			И (ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка В (&МассивДокументовСИсправлениями))
	|			И ФиксируемыеИсправления.СтараяКатегорияЗастрахованныхЛиц = ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_3СведенияОЗаработке
	|		ПО ФиксируемыеИсправления.ФизическоеЛицо = ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Сотрудник
	|			И (ПачкаДокументовСЗВ_6_3Сотрудники.Ссылка = ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФиксируемыеИсправления.ФизическоеЛицо,
	|	ФиксируемыеИсправления.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_3СведенияОЗаработке.Месяц";
	Запрос.Выполнить();
КонецПроцедуры	

Функция СформироватьПачкиСЗВ_6_3(Организация, ОтчетныйПериод, КорректирующиеСведения = Ложь, УчитыватьИсправления = Ложь, МассивПачекСИсправлениями = Неопределено, МассивПачекСЗВ6_3 = Неопределено) Экспорт
									
	НомерПачки = ПерсонифицированныйУчет.ПолучитьСледующийНомерПачки(Организация, Дата(ОтчетныйПериод, 1, 1));							 
								 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДатаНачалаОтчетногоПериода = Дата(ОтчетныйПериод, 1, 1);
	
	МассивДанныхФизЛиц = Новый Массив;
	МассивДанныхФизЛиц.Добавить("Наименование");
	МассивДанныхФизЛиц.Добавить("Фамилия");
	МассивДанныхФизЛиц.Добавить("Имя");
	МассивДанныхФизЛиц.Добавить("Отчество");
	МассивДанныхФизЛиц.Добавить("СтраховойНомерПФР");
		
	СформироватьВТСведенияОДоходах(Организация, ДатаНачалаОтчетногоПериода, Запрос.МенеджерВременныхТаблиц);
	
	Если УчитыватьИсправления Тогда
		СоздатьВТИсправленияПоЗаработку(Запрос.МенеджерВременныхТаблиц, МассивПачекСИсправлениями);
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	NULL КАК ФизическоеЛицо,
		|	NULL КАК КатегорияЗастрахованныхЛиц,
		|	NULL КАК Месяц,
		|	NULL КАК Заработок,
		|	NULL КАК ОблагаетсяВзносами
		|ПОМЕСТИТЬ ВТИсправленияПоЗаработку";	
	КонецЕсли;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОДоходах.ФизическоеЛицо,
	|	&Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДанныеОДоходах КАК ДанныеОДоходах";
	
	Запрос.УстановитьПараметр("Период", КонецГода(ДатаНачалаОтчетногоПериода));
	
	Запрос.Выполнить();
		
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, МассивДанныхФизЛиц);	
	
	Запрос.УстановитьПараметр("СписокПачек", МассивПачекСЗВ6_3);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК Сотрудник,
	|	КадровыеДанныеФизЛиц.Наименование КАК Наименование,
	|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР,
	|	ДанныеОДоходах.Месяц КАК Месяц,
	|	ДанныеОДоходах.Заработок,
	|	ДанныеОДоходах.ОблагаетсяВзносами,
	|	ДанныеОДоходах.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ДанныеОДоходах.ТипДоговора КАК ТипДоговора,
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОДоходах КАК ДанныеОДоходах
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОДоходах.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорияЗастрахованныхЛиц,
	|	ТипДоговора,
	|	Наименование,
	|	ФизическоеЛицо,
	|	Месяц";	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если МассивПачекСЗВ6_3 = Неопределено Тогда 
		МассивПачекСЗВ6_3 = Новый Массив;
	КонецЕсли;	
	
	МассивСформированныхПачек = Новый Массив;
	
	Пока Выборка.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("ТипДоговора") Цикл
			СчСотрудников = 0;
			
			ПачкаОбъект = ПолучитьПачкуСЗВ_6_3(МассивПачекСЗВ6_3);
			ЗаполнитьРеквизитыДокумента(ПачкаОбъект, Организация, ОтчетныйПериод, Выборка.КатегорияЗастрахованныхЛиц, Выборка.ТипДоговора, КорректирующиеСведения);
			ПачкаОбъект.НомерПачки = НомерПачки;
			НомерПачки = НомерПачки + 1;
			Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
				Если СчСотрудников = 200 Тогда
					ПерсонифицированныйУчет.ДокументыКвартальнойОтчетностиЗаполнитьОтветственныхЛиц(ПачкаОбъект);
					
					ПачкаОбъект.Записать(РежимЗаписиДокумента.Запись);
					МассивСформированныхПачек.Добавить(ПачкаОбъект.Ссылка);
					
					ПачкаОбъект = ПолучитьПачкуСЗВ_6_3(МассивПачекСЗВ6_3);
					ЗаполнитьРеквизитыДокумента(ПачкаОбъект, Организация, ОтчетныйПериод, Выборка.КатегорияЗастрахованныхЛиц, Выборка.ТипДоговора, КорректирующиеСведения);
					ПачкаОбъект.НомерПачки = НомерПачки;
					НомерПачки = НомерПачки + 1;	
				КонецЕсли;
				СтрокаСотрудник = ПачкаОбъект.Сотрудники.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСотрудник, Выборка);
				Пока Выборка.Следующий() Цикл
					СтрокаЗаработок = ПачкаОбъект.СведенияОЗаработке.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаЗаработок, Выборка);
				КонецЦикла;
			КонецЦикла;	
			ПерсонифицированныйУчет.ДокументыКвартальнойОтчетностиЗаполнитьОтветственныхЛиц(ПачкаОбъект);
			ПачкаОбъект.Записать(РежимЗаписиДокумента.Запись);
			МассивСформированныхПачек.Добавить(ПачкаОбъект.Ссылка);			
		КонецЦикла;
	КонецЦикла;		
	
	Возврат МассивСформированныхПачек;
КонецФункции	

Функция ПолучитьПачкуСЗВ_6_3(МассивПачекСЗВ)
	Если МассивПачекСЗВ.Количество() > 0 Тогда
		ПачкаОбъект = МассивПачекСЗВ[0].ПолучитьОбъект();
		
		Если ПачкаОбъект.ПометкаУдаления Тогда
			ПачкаОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;

		ПачкаОбъект.Сотрудники.Очистить();
		ПачкаОбъект.СведенияОЗаработке.Очистить();
		
		МассивПачекСЗВ.Удалить(0);
				
		Возврат ПачкаОбъект;
	КонецЕсли;
	
	Возврат Документы.ПачкаДокументовСЗВ_6_3.СоздатьДокумент();	
КонецФункции	

Процедура ЗаполнитьРеквизитыДокумента(ДокументОбъект, Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц, ТипДоговора, КорректирующиеСведения)
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ОтчетныйПериод = ОтчетныйПериод;
	ДокументОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ДокументОбъект.ТипСведенийСЗВ = ?(КорректирующиеСведения, Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	ДокументОбъект.ТипДоговора = ТипДоговора;
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
КонецПроцедуры	

#КонецОбласти

#Область ДляОбеспеченияФормированияВыходногоФайла

Функция ДанныеДляФормированияФайла(Ссылка)
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц  = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовСЗВ_6_3";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТКоличествоСотрудников
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка В(&ДокументСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Застрахованные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_3.Ссылка КАК Ссылка,
	|	СУММА(ПачкаДокументовСЗВ_6_3.Заработок) КАК Заработок,
	|	СУММА(ПачкаДокументовСЗВ_6_3.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК ПачкаДокументовСЗВ_6_3
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_3.Ссылка В(&ДокументСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаДокументовСЗВ_6_3.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработке.Ссылка КАК Ссылка,
	|	СведенияОНачисленномЗаработке.Дата КАК Дата,
	|	СведенияОНачисленномЗаработке.Дата КАК ДатаСоставленияОписи,
	|	СведенияОНачисленномЗаработке.Номер КАК Номер,
	|	СведенияОНачисленномЗаработке.Организация КАК Организация,
	|	СведенияОНачисленномЗаработке.НомерПачки,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод,
	|	СведенияОНачисленномЗаработке.ОкончаниеОтчетногоПериода,
	|	СведенияОНачисленномЗаработке.Руководитель,
	|	СведенияОНачисленномЗаработке.КатегорияЗастрахованныхЛиц,
	|	""СЗВ-6-3"" КАК ТипФормДокументов,
	|	СведенияОНачисленномЗаработке.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОбОрганизациях.Наименование,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН КАК ОГРН,
	|	СведенияОбОрганизациях.НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.КодПоОКПО КАК ОКПО,
	|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод КАК Год,
	|	СведенияОНачисленномЗаработке.ТипСведенийСЗВ,
	|	СведенияОНачисленномЗаработке.ТипДоговора,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.Трудовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТрудовойДоговор,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоговорГПХ,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоИсходныйДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКорректирующийДокумент,
	|	ВЫБОР
	|		КОГДА СведенияОНачисленномЗаработке.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОтменяющийДокумент,
	|	СведенияОНачисленномЗаработке.ИмяФайлаДляПФР
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3 КАК СведенияОНачисленномЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО СведенияОНачисленномЗаработке.Ссылка.Организация = СведенияОбОрганизациях.Организация
	|			И СведенияОНачисленномЗаработке.Ссылка.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	СведенияОНачисленномЗаработке.Ссылка В(&ДокументСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Месяц,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.НомерСтроки
	|ПОМЕСТИТЬ ВТСтрокиЗаработкаЗастрахованных
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.СведенияОЗаработке КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|ГДЕ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка В(&ДокументСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.Сотрудник КАК Сотрудник,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.Ссылка.Организация,
	|	ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_3.Сотрудники КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка В(&ДокументСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.ОблагаетсяВзносами) КАК ОблагаетсяВзносами
	|ПОМЕСТИТЬ ВТЗаработокЗастрахованных
	|ИЗ
	|	ВТСтрокиЗаработкаЗастрахованных КАК СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63СведенияОЗаработке.Сотрудник";
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОНачисленномЗаработке.Ссылка КАК Ссылка,
	|	СведенияОНачисленномЗаработке.Дата КАК Дата,
	|	СведенияОНачисленномЗаработке.Дата КАК ДатаСоставленияОписи,
	|	СведенияОНачисленномЗаработке.Номер КАК Номер,
	|	СведенияОНачисленномЗаработке.Организация КАК Организация,
	|	СведенияОНачисленномЗаработке.НомерПачки,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод,
	|	СведенияОНачисленномЗаработке.КатегорияЗастрахованныхЛиц,
	|	""СЗВ-6-3"" КАК ТипФормДокументов,
	|	СведенияОНачисленномЗаработке.РуководительДолжность,
	|	СведенияОНачисленномЗаработке.Наименование,
	|	СведенияОНачисленномЗаработке.ЮридическоеФизическоеЛицо,
	|	СведенияОНачисленномЗаработке.ОГРН,
	|	СведенияОНачисленномЗаработке.НаименованиеПолное,
	|	СведенияОНачисленномЗаработке.НаименованиеСокращенное,
	|	СведенияОНачисленномЗаработке.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОНачисленномЗаработке.ИНН,
	|	СведенияОНачисленномЗаработке.КПП,
	|	СведенияОНачисленномЗаработке.ОКПО,
	|	СведенияОНачисленномЗаработке.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОНачисленномЗаработке.ОтчетныйПериод КАК Год,
	|	СведенияОНачисленномЗаработке.ТипСведенийСЗВ,
	|	СведенияОНачисленномЗаработке.ТипДоговора,
	|	СведенияОНачисленномЗаработке.КодПоОКПО КАК КодПоОКПО,
	|	СведенияОНачисленномЗаработке.ЭтоТрудовойДоговор,
	|	СведенияОНачисленномЗаработке.ЭтоДоговорГПХ,
	|	СведенияОНачисленномЗаработке.ЭтоИсходныйДокумент,
	|	СведенияОНачисленномЗаработке.ЭтоКорректирующийДокумент,
	|	СведенияОНачисленномЗаработке.ЭтоОтменяющийДокумент,
	|	ЕСТЬNULL(ФИОПоследнее.РасшифровкаПодписи, """") КАК Руководитель,
	|	СведенияОНачисленномЗаработке.ИмяФайлаДляПФР,
	|	ВсегоЗаработка.Заработок,
	|	ВсегоЗаработка.ОблагаетсяВзносами,
	|	КоличествоСотрудников.Количество
	|ИЗ
	|	ВТДанныеДокументов КАК СведенияОНачисленномЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ВсегоЗаработка
	|		ПО СведенияОНачисленномЗаработке.Ссылка = ВсегоЗаработка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСотрудников КАК КоличествоСотрудников
	|		ПО СведенияОНачисленномЗаработке.Ссылка = КоличествоСотрудников.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОПоследнее
	|		ПО СведенияОНачисленномЗаработке.Ссылка = ФИОПоследнее.Ссылка
	|			И СведенияОНачисленномЗаработке.Руководитель = ФИОПоследнее.ФизическоеЛицо
	|ГДЕ
	|	СведенияОНачисленномЗаработке.Ссылка В(&ДокументСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПерваяТаблица.Ссылка КАК Ссылка,
	|	ПерваяТаблица.Сотрудник,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЕСТЬNULL(ЗаработокПоМесяцам.Месяц, 0) КАК Месяц,
	|	ЗаработокПоМесяцам.Заработок КАК Заработок,
	|	ЗаработокПоМесяцам.ОблагаетсяВзносами,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.Заработок, 0) КАК ВсегоЗаработка,
	|	ЕСТЬNULL(ЗаработокЗастрахованных.ОблагаетсяВзносами, 0) КАК ВсегоОблагаетсяВзносами
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиЗаработкаЗастрахованных КАК ЗаработокПоМесяцам
	|		ПО ПерваяТаблица.Ссылка = ЗаработокПоМесяцам.Ссылка
	|			И ПерваяТаблица.Сотрудник = ЗаработокПоМесяцам.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаработокЗастрахованных КАК ЗаработокЗастрахованных
	|		ПО ПерваяТаблица.Ссылка = ЗаработокЗастрахованных.Ссылка
	|			И ПерваяТаблица.Сотрудник = ЗаработокЗастрахованных.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Месяц";	
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

#КонецОбласти

#Область ФормируемФайлСведений
	
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	// Загружаем формат файла сведений.
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70_2010XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_И_ВОЗНАГРАЖДЕНИЙ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись.
	НаборВходящаяОпись = "";
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокументовПачки, ВыборкаПоШапкеДокумента, ВыборкаПоШапкеДокумента.Количество, 1, "ОПИСЬ_ВЫПЛАТ", НаборВходящаяОпись, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ");
	ДанныеВходящейОписи = ОбщегоНазначения.СкопироватьРекурсивно(НаборВходящаяОпись);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ",""), НаборВходящаяОпись);
	
	ФорматСЗВ6 = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_6_3");
	ФорматСуммаВыплатИВознаграждений =  ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СуммаВыплатИтоговая");
	
	Если ВыборкаПоШапкеДокумента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	НомерДокументаВПачке = 1;
	Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		// Общие данные пачки - берем их из описи.
		ФорматСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		ФорматСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		ФорматСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		ЗаполнитьЗначенияСвойств(ФорматСЗВ6.НалоговыйНомер.Значение, ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение);
		ФорматСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		ФорматСЗВ6.ТипДоговора.Значение = ДанныеВходящейОписи.ТипДоговора.Значение;
		ФорматСЗВ6.ОтчетныйГод.Значение = ДанныеВходящейОписи.ОтчетныйГод.Значение;
		ФорматСЗВ6.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоСтрокамДокумента.Фамилия);
		Имя = СокрЛП(ВыборкаПоСтрокамДокумента.Имя);
		Отчество = СокрЛП(ВыборкаПоСтрокамДокумента.Отчество);
		
		ФорматСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		ФорматСЗВ6.СтраховойНомер.Значение = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
		НаборЗаписейФИО = ФорматСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		НаборЗаписейСуммаВыплатИВознаграждений = ФорматСЗВ6.СуммаВыплатИВознаграждений.Значение;
		
		ФорматСЗВ6.СуммаВыплатИВознаграждений.НеВыводитьВФайл = Истина;
		
		УзелСЗВ6 = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСЗВ6, ФорматСЗВ6);
		
		Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
			
			НаборЗаписейСуммаВыплатИВознаграждений.Месяц.Значение = ВыборкаПоСтрокамДокумента.Месяц;
			НаборЗаписейСуммаВыплатИВознаграждений.ТипСтроки.Значение = "МЕСЯЦ";
			НаборЗаписейСуммаВыплатИВознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.Заработок;
			НаборЗаписейСуммаВыплатИВознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ОблагаетсяВзносами;
			
			УзелЗаработка = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелЗаработка, НаборЗаписейСуммаВыплатИВознаграждений);
			
		КонецЦикла;
		
		ФорматСуммаВыплатИВознаграждений.ТипСтроки.Значение = "ИТОГО";
		ФорматСуммаВыплатИВознаграждений.СуммаВыплатВсего.Значение = ВыборкаПоСтрокамДокумента.ВсегоЗаработка;
		ФорматСуммаВыплатИВознаграждений.СуммаВыплатНачисленыСтраховыеВзносы.Значение = ВыборкаПоСтрокамДокумента.ВсегоОблагаетсяВзносами;
		
		УзелЗаработка = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСЗВ6, "СуммаВыплатИвознаграждений","");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелЗаработка, ФорматСуммаВыплатИВознаграждений);
		
	КонецЦикла;
	
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	
	Возврат ТекстФайла;
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ДанныеДляФормированияФайла = ДанныеДляФормированияФайла(Объект.Ссылка);
	КоличествоРезультатов = ДанныеДляФормированияФайла.Количество();
	ВыборкаПоШапкеДокумента = ДанныеДляФормированияФайла[КоличествоРезультатов - 2].Выбрать();
	ВыборкаПоСтрокамДокумента = ДанныеДляФормированияФайла[КоличествоРезультатов - 1].Выбрать();
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СЗВ-6-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_3";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ-6-3'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// АДВ-6-4
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаАДВ_6_4";
	КомандаПечати.Представление = НСтр("ru = 'АДВ-6-4'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Все формы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ФормаСЗВ_6_3,ФормаАДВ_6_4";
	КомандаПечати.Представление = НСтр("ru = 'Все формы'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСЗВ_6_3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСЗВ_6_3", "Форма СЗВ-6-3", СформироватьПечатнуюФормуСВВ6_3(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаАДВ_6_4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаАДВ_6_4", "Форма АДВ-6-4", СформироватьПечатнуюФормуАДВ6_4(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСВВ6_3(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ДанныеДляПечати = ДанныеДляФормированияФайла(МассивОбъектов);
	
	КоличествоРезультатов = ДанныеДляПечати.Количество();
	
	ВыборкаПоШапкеДокумента   = ДанныеДляПечати[КоличествоРезультатов - 2].Выбрать();
	ВыборкаПоСтрокамДокумента = ДанныеДляПечати[КоличествоРезультатов - 1].Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЗВ6_6_3";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_6_3.ПФ_MXL_ФормаСЗВ_6_3");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьМакетаПустаяСтрока = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
	
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Шапка документа.
		ОбластьМакетаШапка.Параметры.КодКатегории = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоШапкеДокумента); // Шапка документа.
		
		СоответствиеМесяцев = Новый Соответствие;
		Для Сч = 1 По 12 Цикл
			СоответствиеМесяцев.Вставить(Сч, Формат(Дата(ВыборкаПоШапкеДокумента.ОтчетныйПериод, сч, 1),"ДФ=ММММ"))
		КонецЦикла; 
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаПоШапкеДокумента.Ссылка);
		ВыборкаПоСтрокамДокумента.Сбросить();
		Если ВыборкаПоСтрокамДокумента.НайтиСледующий(СтруктураПоиска) Тогда
			
			Если ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Ссылка") Тогда
				Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("НомерСтроки") Цикл
					НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
					Если ТабДокумент.ВысотаТаблицы > 0 Тогда
						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
					ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); // Шапка документа.
				
					ТабДокумент.Вывести(ОбластьМакетаШапка);
					
					ПоследнийМесяц = 0;
					Пока ВыборкаПоСтрокамДокумента.СледующийПоЗначениюПоля("Месяц") Цикл
						Для Сч = ПоследнийМесяц + 1 По ВыборкаПоСтрокамДокумента.Месяц - 1 Цикл
							ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
							ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
						КонецЦикла;
						ПоследнийМесяц = ВыборкаПоСтрокамДокумента.Месяц;
						ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаПоСтрокамДокумента); 
						ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
						ОбластьМакетаСтрока.Параметры.Месяц = СоответствиеМесяцев[ПоследнийМесяц];
						ТабДокумент.Вывести(ОбластьМакетаСтрока);
					КонецЦикла;
					Для Сч = ПоследнийМесяц + 1 По 12 Цикл
						ОбластьМакетаПустаяСтрока.Параметры.Месяц = СоответствиеМесяцев[Сч];
						ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);
					КонецЦикла;
					
					ТабДокумент.Вывести(ОбластьМакетаПодвал);
					УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
				КонецЦикла;	
			КонецЕсли;	
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
	КонецЦикла;	
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;
КонецФункции	

Функция СформироватьПечатнуюФормуАДВ6_4(МассивОбъектов, ОбъектыПечати) Экспорт
	ДанныеДляПечати = ДанныеДляФормированияФайла(МассивОбъектов);
	
	ДокументОписи = Новый ТабличныйДокумент;
	ДокументОписи.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОписьАДВ_6_4";
	ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	МакетОписи = УправлениеПечатью.МакетПечатнойФормы("Документ.ПачкаДокументовСЗВ_6_3.ПФ_MXL_ФормаАДВ_6_4");
	СекцияОпись = МакетОписи.ПолучитьОбласть("Опись");
	
	КоличествоРезультатов = ДанныеДляПечати.Количество();
	
	ВыборкаПоШапкеДокумента   = ДанныеДляПечати[КоличествоРезультатов - 2].Выбрать();
		
	Пока ВыборкаПоШапкеДокумента.СледующийПоЗначениюПоля("Ссылка") Цикл
		НомерСтрокиНачало = ДокументОписи.ВысотаТаблицы + 1;
		ЗаполнитьЗначенияСвойств(СекцияОпись.Параметры, ВыборкаПоШапкеДокумента);
		СекцияОпись.Параметры.КодКатегории = ПерсонифицированныйУчет.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		ДокументОписи.Вывести(СекцияОпись);
		
		ДокументОписи.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументОписи, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
	КонецЦикла;	
	
	ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
    Возврат ДокументОписи;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли