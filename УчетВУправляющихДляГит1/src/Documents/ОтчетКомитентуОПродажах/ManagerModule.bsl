#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 16, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетаУчета = Неопределено) Экспорт

	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	КонецЕсли;

	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;

	Если Объект.УдержатьВознаграждение Тогда
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетРасчетовСКомитентом;
	Иначе
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьСоответствиеВидовОтчетаКомитентуФормам() Экспорт

	ФормыОтчетовКомитенту = Новый Соответствие;
	ФормыОтчетовКомитенту.Вставить(Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах, "ФормаДокументаОПродажах");
	ФормыОтчетовКомитенту.Вставить(Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках, "ФормаДокументаОЗакупках");
	
	Возврат ФормыОтчетовКомитенту;

КонецФункции 

Процедура УстановитьЗаголовокФормы(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	ТекстЗаголовка = НСтр("ru = 'Отчет комитенту'");
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстЗаголовка = ТекстЗаголовка + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru=' %1 от %2'"), Объект.Номер, Формат(Объект.Дата, "ДЛФ=D"));
	Иначе
		ТекстЗаголовка = ТекстЗаголовка + НСтр("ru = ' (создание)'");
	КонецЕсли;
	
	Форма.Заголовок = ТекстЗаголовка + " (" + Строка(Объект.ВидОперации) + ")";

КонецПроцедуры

Функция ПолучитьМаксимальныйКлючСтроки(Поставщики) Экспорт
	
	Если Поставщики.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	СписокКлючей = Новый СписокЗначений;
	СписокКлючей.ЗагрузитьЗначения(Поставщики.Выгрузить(, "КлючСтроки").ВыгрузитьКолонку("КлючСтроки"));
	СписокКлючей.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	Возврат СписокКлючей[0].Значение;
	
КонецФункции

Функция ПолучитьЗакупленные(Реквизиты) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",         Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",          Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента",  Реквизиты.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Период",              Реквизиты.Период);
	Запрос.УстановитьПараметр("ДокументПоступления", Реквизиты.ДокументПоступления);
	
	Если Реквизиты.СпособЗаполнения = "ЗаполнитьЗакупленнымиПоДоговору" Тогда
		ТекстЗапросаИсточник = 
		"ВЫБРАТЬ
		|	ЗакупленныеТоварыКомитентовОстатки.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ЗакупленныеТоварыКомитентовОстатки.Партия ССЫЛКА Документ.СчетФактураВыданный
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЗакупленныеТоварыКомитентовОстатки.Номенклатура.Услуга
		|	КОНЕЦ КАК ЭтоУслуга,
		|	ЗакупленныеТоварыКомитентовОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗакупленныеТоварыКомитентовОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ЗакупленныеТоварыКомитентовОстатки.СуммаНДСОстаток КАК СуммаНДСОстаток,
		|	ЗакупленныеТоварыКомитентовОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ЗакупленныеТоварыКомитентовОстатки.Партия КАК Партия,
		|	ЗакупленныеТоварыКомитентовОстатки.Контрагент КАК Контрагент,
		|	ЗакупленныеТоварыКомитентовОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТ_ЗакупленныеТоварыКомитентовОстатки
		|ИЗ
		|	РегистрНакопления.ЗакупленныеТоварыКомитентов.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И ДоговорКонтрагента = &ДоговорКонтрагента
		|				И Партия = &ДокументПоступления) КАК ЗакупленныеТоварыКомитентовОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	Номенклатура
		|;
		|";
	Иначе
		// Определяем всегда по регистру ЗакупленныеТоварыКомитентов,
		// чтобы корректно учитывать сумму поступления с учетом возможных валютных авансов поставщикам.
		ТекстЗапросаИсточник = 
		"ВЫБРАТЬ
		|	ЗакупленныеТоварыКомитентов.Номенклатура КАК Номенклатура,
		|	ЗакупленныеТоварыКомитентов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗакупленныеТоварыКомитентов.Номенклатура.Услуга КАК ЭтоУслуга,
		|	СУММА(ЗакупленныеТоварыКомитентов.Количество) КАК КоличествоОстаток,
		|	СУММА(ЗакупленныеТоварыКомитентов.Сумма) КАК СуммаОстаток,
		|	СУММА(ЗакупленныеТоварыКомитентов.СуммаНДС) КАК СуммаНДСОстаток,
		|	ЗакупленныеТоварыКомитентов.Партия КАК Партия,
		|	ЗакупленныеТоварыКомитентов.Контрагент КАК Контрагент,
		|	ЗакупленныеТоварыКомитентов.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТ_ЗакупленныеТоварыКомитентовОстатки
		|ИЗ
		|	РегистрНакопления.ЗакупленныеТоварыКомитентов КАК ЗакупленныеТоварыКомитентов
		|ГДЕ
		|	ЗакупленныеТоварыКомитентов.Контрагент = &Контрагент
		|	И ЗакупленныеТоварыКомитентов.ДоговорКонтрагента = &ДоговорКонтрагента
		|	И ЗакупленныеТоварыКомитентов.Регистратор = &ДокументПоступления
		|	И ЗакупленныеТоварыКомитентов.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакупленныеТоварыКомитентов.Номенклатура,
		|	ЗакупленныеТоварыКомитентов.Номенклатура.ЕдиницаИзмерения,
		|	ЗакупленныеТоварыКомитентов.Номенклатура.Услуга,
		|	ЗакупленныеТоварыКомитентов.Партия,
		|	ЗакупленныеТоварыКомитентов.Контрагент,
		|	ЗакупленныеТоварыКомитентов.ДоговорКонтрагента
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	Номенклатура
		|;
		|";
	КонецЕсли;

	Запрос.Текст = ТекстЗапросаИсточник + 
	"ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.ДатаВходящегоДокумента) КАК ДатаСФ,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.НомерВходящегоДокумента) КАК НомерСчетаФактуры,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.Продавец) КАК Продавец,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.Ссылка.КППКонтрагента) КАК КПППоставщика,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетФактураПолученныйДокументыОснования.Ссылка.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК СоставленОтИмени,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Контрагент КАК Контрагент,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Комитент КАК Комитент,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ДоговорКомитента КАК ДоговорКомитента
	|ПОМЕСТИТЬ ВТ_ДатыСчетовФактур
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	НЕ СчетФактураПолученныйДокументыОснования.Ссылка.ПометкаУдаления
	|	И СчетФактураПолученныйДокументыОснования.ДокументОснование В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия
	|			ИЗ
	|				ВТ_ЗакупленныеТоварыКомитентовОстатки)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Контрагент,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Комитент,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ДоговорКомитента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТовары.Ссылка КАК Партия,
	|	ПоступлениеТовары.Номенклатура КАК Номенклатура,
	|	1 КАК НомерТабЧасти,
	|	МИНИМУМ(ПоступлениеТовары.НомерСтроки) КАК НомерСтроки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.УчетАгентскогоНДС, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ИНАЧЕ ПоступлениеТовары.СтавкаНДС
	|		КОНЕЦ) КАК СтавкаНДС,
	|	"""" КАК Содержание,
	|	СУММА(ВЫБОР
	|			КОГДА ПоступлениеТовары.Ссылка.СуммаВключаетНДС = ИСТИНА
	|				ТОГДА ПоступлениеТовары.Сумма
	|			ИНАЧЕ ПоступлениеТовары.Сумма + ПоступлениеТовары.СуммаНДС
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ПоступлениеТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ПоступлениеТовары.Количество) КАК Количество,
	|	"""" КАК НомерДляСодержания,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаДляСодержания,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент
	|ПОМЕСТИТЬ ВТ_СтрокиДокументов
	|ИЗ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки КАК ВТ_ЗакупленныеТоварыКомитентовОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО ПоступлениеТовары.Ссылка.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|		ПО (ПоступлениеТовары.Ссылка = ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия)
	|			И (ПоступлениеТовары.Номенклатура = ВТ_ЗакупленныеТоварыКомитентовОстатки.Номенклатура)
	|ГДЕ
	|	ПоступлениеТовары.Контрагент = &Контрагент
	|	И ПоступлениеТовары.ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТовары.Ссылка,
	|	ПоступлениеТовары.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеАгентскиеУслуги.Ссылка,
	|	ПоступлениеАгентскиеУслуги.Номенклатура,
	|	2,
	|	МИНИМУМ(ПоступлениеАгентскиеУслуги.НомерСтроки),
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.УчетАгентскогоНДС, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ИНАЧЕ ПоступлениеАгентскиеУслуги.СтавкаНДС
	|		КОНЕЦ),
	|	ПоступлениеАгентскиеУслуги.Содержание,
	|	СУММА(ВЫБОР
	|			КОГДА ПоступлениеАгентскиеУслуги.Ссылка.СуммаВключаетНДС = ИСТИНА
	|				ТОГДА ПоступлениеАгентскиеУслуги.Сумма
	|			ИНАЧЕ ПоступлениеАгентскиеУслуги.Сумма + ПоступлениеАгентскиеУслуги.СуммаНДС
	|		КОНЕЦ),
	|	СУММА(ПоступлениеАгентскиеУслуги.СуммаНДС),
	|	СУММА(ПоступлениеАгентскиеУслуги.Количество),
	|	"""",
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки КАК ВТ_ЗакупленныеТоварыКомитентовОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеАгентскиеУслуги
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО ПоступлениеАгентскиеУслуги.Ссылка.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|		ПО (ПоступлениеАгентскиеУслуги.Ссылка = ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия)
	|			И (ПоступлениеАгентскиеУслуги.Номенклатура = ВТ_ЗакупленныеТоварыКомитентовОстатки.Номенклатура)
	|ГДЕ
	|	ПоступлениеАгентскиеУслуги.Контрагент = &Контрагент
	|	И ПоступлениеАгентскиеУслуги.ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеАгентскиеУслуги.Номенклатура,
	|	ПоступлениеАгентскиеУслуги.Содержание,
	|	ПоступлениеАгентскиеУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	2,
	|	1,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС),
	|	"""",
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.СуммаОстаток,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.СуммаНДСОстаток,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.КоличествоОстаток,
	|	ВЫРАЗИТЬ(ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия КАК Документ.СчетФактураВыданный).НомерПлатежноРасчетногоДокумента,
	|	ВЫРАЗИТЬ(ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия КАК Документ.СчетФактураВыданный).ДатаПлатежноРасчетногоДокумента,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки КАК ВТ_ЗакупленныеТоварыКомитентовОстатки
	|ГДЕ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия ССЫЛКА Документ.СчетФактураВыданный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.Номенклатура КАК Номенклатура,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия КАК Партия,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.СуммаНДСОстаток КАК СуммаНДСОстаток,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ВТ_СтрокиДокументов.НомерТабЧасти КАК НомерТабЧасти,
	|	ВТ_СтрокиДокументов.НомерСтроки КАК НомерСтроки,
	|	ВТ_СтрокиДокументов.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_СтрокиДокументов.Содержание КАК Содержание,
	|	ВТ_СтрокиДокументов.Количество КАК Количество,
	|	ВТ_СтрокиДокументов.Сумма КАК Сумма,
	|	ВТ_СтрокиДокументов.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия КАК Документ.СчетФактураВыданный).Контрагент
	|		КОГДА ЕСТЬNULL(ВТ_ДатыСчетовФактур.СоставленОтИмени, ЛОЖЬ)
	|			ТОГДА ВТ_ДатыСчетовФактур.Продавец
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ДатыСчетовФактур.ДатаСФ ЕСТЬ NULL
	|			ТОГДА ВТ_ДатыСчетовФактур.ДатаСФ
	|		КОГДА ПоступлениеТоваровУслуг.ДоговорКонтрагента.УчетАгентскогоНДС
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА ПоступлениеТоваровУслуг.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.Дата, ДЕНЬ)
	|	КОНЕЦ КАК ДатаСФ,
	|	ЕСТЬNULL(ВТ_ДатыСчетовФактур.НомерСчетаФактуры, """") КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВТ_ДатыСчетовФактур.КПППоставщика, """") КАК КПППоставщика,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ДатыСчетовФактур.ДатаСФ ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолученСФ,
	|	ВТ_СтрокиДокументов.НомерДляСодержания КАК НомерДляСодержания,
	|	ВТ_СтрокиДокументов.ДатаДляСодержания КАК ДатаДляСодержания
	|ИЗ
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки КАК ВТ_ЗакупленныеТоварыКомитентовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыСчетовФактур КАК ВТ_ДатыСчетовФактур
	|		ПО ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия = ВТ_ДатыСчетовФактур.ДокументОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтрокиДокументов КАК ВТ_СтрокиДокументов
	|		ПО ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия = ВТ_СтрокиДокументов.Партия
	|			И ВТ_ЗакупленныеТоварыКомитентовОстатки.Номенклатура = ВТ_СтрокиДокументов.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поставщик,
	|	ДатаСФ,
	|	ВТ_ЗакупленныеТоварыКомитентовОстатки.Партия,
	|	ВТ_СтрокиДокументов.НомерТабЧасти,
	|	ВТ_СтрокиДокументов.НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(КоличествоОстаток),
	|	МИНИМУМ(СуммаНДСОстаток),
	|	МИНИМУМ(СуммаОстаток),
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	МАКСИМУМ(ДатаСФ),
	|	МАКСИМУМ(НомерСчетаФактуры),
	|	МАКСИМУМ(КПППоставщика),
	|	МАКСИМУМ(ПолученСФ),
	|	МАКСИМУМ(НомерДляСодержания),
	|	МАКСИМУМ(ДатаДляСодержания)
	|ПО
	|	Поставщик,
	|	Партия,
	|	Номенклатура";
	
	Если НЕ ЗначениеЗаполнено(Реквизиты.ДокументПоступления) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Партия = &ДокументПоступления", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Процедура РассчитатьВознаграждениеВСтроке(
			Вознаграждение,
			НДСВознаграждения,
			Знач СуммаСтроки,
			Знач НДССтроки,
			Знач ПроцентВознаграждения,
			Знач СпособРасчета,
			Знач СтавкаНДСВознаграждения,
			Знач СуммаВключаетНДС,
			Знач СуммаПоступления = 0) Экспорт

	// Вознаграждение всегда рассчитывается от сумм с НДС и вначале всегда включает НДС
	СуммаПродажи = СуммаСтроки + ?(СуммаВключаетНДС, 0, НДССтроки);
	Если СпособРасчета = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
		Вознаграждение = Вознаграждение + ?(СуммаВключаетНДС, 0, НДСВознаграждения);
	ИначеЕсли СпособРасчета = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммПродажиИПоступления Тогда
		Вознаграждение = ПроцентВознаграждения / 100 * (СуммаПродажи - СуммаПоступления);
	ИначеЕсли СпособРасчета = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи Тогда
		Вознаграждение = ПроцентВознаграждения / 100 * СуммаПродажи;
	Иначе
		Вознаграждение = 0;
	КонецЕсли;

	// Вознаграждение всегда рассчитывается от сумм с НДС и вначале всегда включает НДС
	// Теперь в зависимости от галочки СуммаВключаетНДС либо вычтем НДС, либо оставим
	Вознаграждение = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
		Вознаграждение,          // Цена,
		Истина,                  // ЦенаВключаетНДС, (на момент расчета всегда включает НДС)
		СуммаВключаетНДС,        // СуммаВключаетНДС,
		УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДСВознаграждения)); // СтавкаНДС

	НДСВознаграждения = УчетНДСКлиентСервер.РассчитатьСуммуНДС(
		Вознаграждение,
		СуммаВключаетНДС,
		УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДСВознаграждения));

	ВсегоВознаграждение = Вознаграждение + ?(СуммаВключаетНДС, 0, НДСВознаграждения);

КонецПроцедуры

Функция ПолучитьМассивДоговоровОснования(Основание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугТовары.ДоговорКонтрагента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Основание
	|	И ПоступлениеТоваровУслугТовары.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	И ПоступлениеТоваровУслугТовары.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СкомитентомНаЗакупку)
	|	И ПоступлениеТоваровУслугТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.ДоговорКонтрагента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка = &Основание
	|	И ПоступлениеТоваровУслугАгентскиеУслуги.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	И ПоступлениеТоваровУслугАгентскиеУслуги.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СкомитентомНаЗакупку)";
	
	МассивДоговоров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДоговорКонтрагента");
	
	Возврат МассивДоговоров;
	
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	
	Возврат МассивРеквизитов;
	
КонецФункции

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивДокументов)
	|	И ОтчетКомитентуОПродажах.СуммаНДСВознаграждения > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка,
	|	ОтчетКомитентуОПродажах.Дата,
	|	ОтчетКомитентуОПродажах.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ОтчетКомитентуОПродажах.Ссылка)
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(Выборка.Организация, Выборка.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Выборка.Дата) >= 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Выборка.Организация, Выборка.Дата)) Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомитентуОПродажахТовары.Номенклатура КАК Номенклатура,
	|	ОтчетКомитентуОПродажахТовары.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|ГДЕ
	|	ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

// ОБРАБОТЧИКИ ОБНОВЛЕНИЯ ИБ

// Внешний интерфейс обновления ИБ

Процедура ОбработатьРучнуюНастройкуУСНДляАктуальныхДокументов() Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГраницаАктуальногоПериода",
		УчетУСН.ДатаНачалаАктуальногоПериодаДляПереходаНаУпрощеннуюНастройкуКУДиР());
		
	Запрос.УстановитьПараметр("КонецПериодаВыборки", КонецГода(ДобавитьМесяц(ТекущаяДатаСеанса(), 12)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.Период КАК Период,
	|	НастройкиСистемыНалогообложения.Организация КАК Организация,
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы
	|ПОМЕСТИТЬ ВТ_РегУП
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегУПО1.Организация КАК Организация,
	|	РегУПО1.Период КАК ПериодТекущий,
	|	МИНИМУМ(РегУПО2.Период) КАК ПериодСледующий
	|ПОМЕСТИТЬ ВТ_ПериодыУчетнойПолитики
	|ИЗ
	|	ВТ_РегУП КАК РегУПО1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегУП КАК РегУПО2
	|		ПО РегУПО1.Организация = РегУПО2.Организация
	|			И РегУПО1.Период < РегУПО2.Период
	|ГДЕ
	|	РегУПО1.ПрименяетсяУСНДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	РегУПО1.Период,
	|	РегУПО1.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодТекущий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.Организация КАК Организация,
	|	НастройкиСистемыНалогообложения.Период КАК ПериодНач,
	|	ВЫБОР
	|		КОГДА ПериодыУчетнойПолитики.ПериодСледующий ЕСТЬ NULL 
	|				И НастройкиСистемыНалогообложения.Период <= &КонецПериодаВыборки
	|			ТОГДА &КонецПериодаВыборки
	|		КОГДА ПериодыУчетнойПолитики.ПериодСледующий ЕСТЬ NULL 
	|				И НастройкиСистемыНалогообложения.Период > &КонецПериодаВыборки
	|			ТОГДА КОНЕЦПЕРИОДА(НастройкиСистемыНалогообложения.Период, ГОД)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодыУчетнойПолитики.ПериодСледующий, ДЕНЬ), СЕКУНДА, -1)
	|	КОНЕЦ КАК ПериодКон
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	ВТ_РегУП КАК НастройкиСистемыНалогообложения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыУчетнойПолитики КАК ПериодыУчетнойПолитики
	|		ПО НастройкиСистемыНалогообложения.Организация = ПериодыУчетнойПолитики.Организация
	|			И НастройкиСистемыНалогообложения.Период = ПериодыУчетнойПолитики.ПериодТекущий
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодНач,
	|	ПериодКон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомитентуОПродажах.Дата КАК ДатаДокумента
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК ВТ_УчетнаяПолитика
	|		ПО ОтчетКомитентуОПродажах.Организация = ВТ_УчетнаяПолитика.Организация
	|			И ОтчетКомитентуОПродажах.Дата >= ВТ_УчетнаяПолитика.ПериодНач
	|			И ОтчетКомитентуОПродажах.Дата <= ВТ_УчетнаяПолитика.ПериодКон
	|ГДЕ
	|	ОтчетКомитентуОПродажах.УдалитьРучнаяНастройка_УСН
	|	И ОтчетКомитентуОПродажах.Дата >= &ГраницаАктуальногоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента УБЫВ,
	|	Ссылка УБЫВ"	
	;	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаПоДокументу Из РезультатЗапроса Цикл
		
		Попытка
			
			ОбработатьРучнуюНастройкуУСН(СтрокаПоДокументу); 
			
		Исключение
			// Если не удалось обработать какой-либо документ, пропускаем и обрабатываем позднее (отложенно).
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать отчет комитенту о продажах: %1 по причине:
					|%2'"), 
					СтрокаПоДокументу.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ОтчетКомитентуОПродажах, СтрокаПоДокументу.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьРучнуюНастройкуУСНОтложенно(Параметры) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("КонецПериодаВыборки", КонецГода(ДобавитьМесяц(ТекущаяДатаСеанса(), 12)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.Период КАК Период,
	|	НастройкиСистемыНалогообложения.Организация КАК Организация,
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы
	|ПОМЕСТИТЬ ВТ_РегУП
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегУПО1.Организация КАК Организация,
	|	РегУПО1.Период КАК ПериодТекущий,
	|	МИНИМУМ(РегУПО2.Период) КАК ПериодСледующий
	|ПОМЕСТИТЬ ВТ_ПериодыУчетнойПолитики
	|ИЗ
	|	ВТ_РегУП КАК РегУПО1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегУП КАК РегУПО2
	|		ПО РегУПО1.Организация = РегУПО2.Организация
	|			И РегУПО1.Период < РегУПО2.Период
	|ГДЕ
	|	РегУПО1.ПрименяетсяУСНДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	РегУПО1.Период,
	|	РегУПО1.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодТекущий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.Организация КАК Организация,
	|	НастройкиСистемыНалогообложения.Период КАК ПериодНач,
	|	ВЫБОР
	|		КОГДА ПериодыУчетнойПолитики.ПериодСледующий ЕСТЬ NULL 
	|				И НастройкиСистемыНалогообложения.Период <= &КонецПериодаВыборки
	|			ТОГДА &КонецПериодаВыборки
	|		КОГДА ПериодыУчетнойПолитики.ПериодСледующий ЕСТЬ NULL 
	|				И НастройкиСистемыНалогообложения.Период > &КонецПериодаВыборки
	|			ТОГДА КОНЕЦПЕРИОДА(НастройкиСистемыНалогообложения.Период, ГОД)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодыУчетнойПолитики.ПериодСледующий, ДЕНЬ), СЕКУНДА, -1)
	|	КОНЕЦ КАК ПериодКон
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	ВТ_РегУП КАК НастройкиСистемыНалогообложения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыУчетнойПолитики КАК ПериодыУчетнойПолитики
	|		ПО НастройкиСистемыНалогообложения.Организация = ПериодыУчетнойПолитики.Организация
	|			И НастройкиСистемыНалогообложения.Период = ПериодыУчетнойПолитики.ПериодТекущий
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодНач,
	|	ПериодКон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 200
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомитентуОПродажах.Дата КАК ДатаДокумента
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК ВТ_УчетнаяПолитика
	|		ПО ОтчетКомитентуОПродажах.Организация = ВТ_УчетнаяПолитика.Организация
	|			И ОтчетКомитентуОПродажах.Дата >= ВТ_УчетнаяПолитика.ПериодНач
	|			И ОтчетКомитентуОПродажах.Дата <= ВТ_УчетнаяПолитика.ПериодКон
	|ГДЕ
	|	ОтчетКомитентуОПродажах.УдалитьРучнаяНастройка_УСН
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента УБЫВ,
	|	Ссылка УБЫВ"	
	;	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		Попытка
			
			ОбработатьРучнуюНастройкуУСН(СтрокаРезультата);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать отчет комитенту о продажах: %1 по причине:
					|%2'"), 
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ОтчетКомитентуОПродажах, СтрокаРезультата.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ОбработатьРучнуюНастройкуУСНОтложенно
				|не удалось обработать некоторые отчеты комитентам о продажах (пропущены): %1'"), 
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ОтчетКомитентуОПродажах,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ОбработатьРучнуюНастройкуУСНОтложенно
					|обработала очередную порцию отчетов комитентам о продажах: %1 документов'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

// Служебные обработчики обновления ИБ

// Для отчетов комитенту, в которых настройка УСН отредактирована пользователем вручную:
//    если отредактированы только доходы УСН - ручная настройка УСН сбрасывается;
//    для остальных случаев - выставляется признак ручной корректировки движений.
Процедура ОбработатьРучнуюНастройкуУСН(СтрокаПоДокументу)

	НачатьТранзакцию();
	Попытка
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ОтчетКомитентуОПродажах");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаПоДокументу.Ссылка);
		Блокировка.Заблокировать();
		
		ДокументОбъект = СтрокаПоДокументу.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если ДокументОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		Если НЕ ДокументОбъект.УдалитьРучнаяНастройка_УСН Тогда
			// документ уже обработан
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		Если НЕ ДокументОбъект.РучнаяКорректировка
			И (ДокументОбъект.Графа4_УСН <> 0 ИЛИ ДокументОбъект.ДоходыЕНВД_УСН ИЛИ ДокументОбъект.РасходыЕНВД_УСН
			ИЛИ ДокументОбъект.Графа6_УСН <> 0 ИЛИ ДокументОбъект.Графа7_УСН <> 0 ИЛИ ДокументОбъект.НДС_УСН <> 0) Тогда
			ДокументОбъект.РучнаяКорректировка = Истина;
			// Иначе: если заданы только доходы УСН (Графа 5) - признак ручной корректировки не изменяем
		КонецЕсли;
		
		ДокументОбъект.УдалитьРучнаяНастройка_УСН = Ложь;
		
		// Запись обработанного объекта.
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Открываемая форма документа определяется в зависимости от указанного виды счета-фактуры
//
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка"
		ИЛИ ВидФормы = "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = Параметры.Ключ.ВидОперации;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") 
		И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
		И Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда 
		ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") 
		И ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
		И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда 
		ВидОперации = Параметры.ЗначениеКопирования.ВидОперации;
	ИначеЕсли Параметры.Свойство("Основание") 
		И ЗначениеЗаполнено(Параметры.Основание) Тогда
		// На основании ПоступленияТоваровУслуг вводится отчет комитенту о продажах.
		ДоговорОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Основание, "ДоговорКонтрагента");
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорОснования, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
			ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку Тогда
			ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках;
		Иначе
			ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах;
		КонецЕсли;
	Иначе
		Если ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов") 
			И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов") Тогда
			ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах;
		ИначеЕсли ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов")
			И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов") Тогда
			ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках;
		Иначе
			ВидОперации = Неопределено;
		КонецЕсли;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	ФормыОтчетовКомитенту = ПолучитьСоответствиеВидовОтчетаКомитентуФормам();
	ВыбраннаяФорма = ФормыОтчетовКомитенту[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	ИначеЕсли Параметры.Свойство("Основание") 
		И ЗначениеЗаполнено(Параметры.Основание)
		И ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках Тогда
		
		Если ПолучитьМассивДоговоровОснования(Параметры.Основание).Количество() > 1 Тогда
			ВыбраннаяФорма = "ФормаВыбораКомитента";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
   	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);

	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;

	Запрос.УстановитьПараметр("РасчетыВВалюте", Реквизиты.РасчетыВВалюте);
	Запрос.УстановитьПараметр("СинонимТовары",  НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимУслуги",  НСтр("ru = 'Услуги'"));

	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаТаблицаУслуги(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСписаниеТоваровКомитента(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для каждого КлючИЗначение Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(КлючИЗначение.Ключ, Результат[КлючИЗначение.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", 		 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", 						 НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
	|	МАКСИМУМ(СоставДокумента.ЕстьВознаграждения) КАК ЕстьВознаграждения
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьТовары,
	|		ЛОЖЬ КАК ЕстьВознаграждения
	|	ИЗ
	|		Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СуммаВознаграждения <> 0) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ВидОперации,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.СтавкаНДСВознаграждения,
	|	Реквизиты.УслугаПоВознаграждению,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.СчетДоходов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	Реквизиты.Субконто,
	|	Реквизиты.СчетУчетаНДСПоРеализации,
	|	Реквизиты.ПодразделениеОрганизации,
	|	Реквизиты.УдержатьВознаграждение,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаЕНВД
	|		ПО Реквизиты.СчетДоходов = СчетаЕНВД.Счет
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ВидОперации,
	|	Реквизиты.СтавкаНДСВознаграждения,
	|	Реквизиты.ДеятельностьНаПатенте,
	|	Реквизиты.СчетДоходов КАК СчетДоходов,
	|	Реквизиты.Субконто КАК Субконто,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьВознаграждения, ЛОЖЬ) КАК ЕстьВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка) КАК КодОперацииПоСделке,
	|	ЛОЖЬ КАК НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТовары",          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВознаграждение",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяСуммыПоступления",  	 НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ЕСТЬNULL(ТаблицаТовары.Номенклатура.Услуга, ИСТИНА) КАК Услуга,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.СуммаВознаграждения,
	|	ТаблицаТовары.СуммаНДСВознаграждения,
	|	ТаблицаТовары.Покупатель,
	|	ТаблицаТовары.ДатаРеализации,
	|	ТаблицаТовары.СуммаПоступления,
	|	ТаблицаТовары.КлючСтроки
	|ПОМЕСТИТЬ ВременнаяТаблицаТоварыДокумента
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	Реквизиты.ДоговорКонтрагента,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Услуга,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.КлючСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТоварыДокумента КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВознаграждение.Ссылка,
	|	Реквизиты.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА Реквизиты.СуммаВключаетНДС
	|				ТОГДА ТаблицаВознаграждение.СуммаВознаграждения
	|			ИНАЧЕ ТаблицаВознаграждение.СуммаВознаграждения + ТаблицаВознаграждение.СуммаНДСВознаграждения
	|		КОНЕЦ) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаВознаграждение.СуммаНДСВознаграждения) КАК СуммаНДСВзаиморасчетов,
	|	СУММА(ВЫБОР
	|			КОГДА Реквизиты.СуммаВключаетНДС
	|				ТОГДА ТаблицаВознаграждение.СуммаВознаграждения
	|			ИНАЧЕ ТаблицаВознаграждение.СуммаВознаграждения + ТаблицаВознаграждение.СуммаНДСВознаграждения
	|		КОНЕЦ) КАК СуммаРуб,
	|	СУММА(ТаблицаВознаграждение.СуммаНДСВознаграждения) КАК СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаВознаграждение
	|ИЗ
	|	ВременнаяТаблицаТоварыДокумента КАК ТаблицаВознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаВознаграждение.СуммаВознаграждения <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВознаграждение.Ссылка,
	|	Реквизиты.СтавкаНДСВознаграждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСуммыПоступления.Ссылка,
	|	ТаблицаСуммыПоступления.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСуммыПоступления.Покупатель,
	|	ТаблицаСуммыПоступления.ДатаРеализации,
	|	ТаблицаСуммыПоступления.Услуга,
	|	ТаблицаСуммыПоступления.СуммаПоступления КАК СуммаВзаиморасчетов,
	|	ТаблицаСуммыПоступления.СуммаПоступления КАК СуммаРуб
	|ПОМЕСТИТЬ ТаблицаСуммыПоступления
	|ИЗ
	|	ВременнаяТаблицаТоварыДокумента КАК ТаблицаСуммыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Результат    = Запрос.ВыполнитьПакет();
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары();
	КонецЕсли;
	Если Реквизиты.ЕстьВознаграждения Тогда
		СуммыТаблицыВознаграждение = Результат[НомераТаблиц["СуммыТаблицыВознаграждение"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыВознаграждение, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыВознаграждение", СуммыТаблицыВознаграждение);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеВознаграждения();
	КонецЕсли;
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыСуммыПоступления = Результат[НомераТаблиц["СуммыТаблицыСуммыПоступления"]].Выгрузить();
		УчетВзаиморасчетов.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыСуммыПоступления, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыСуммыПоступления", СуммыТаблицыСуммыПоступления);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеСуммыПоступления();
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		Запрос.Текст = ТекстЗапроса;
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц);
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТовары",	"ПОМЕСТИТЬ ВременнаяТаблицаТовары");
		НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки,
		|	ВременнаяТаблицаТовары.СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаРуб,
		|	ВременнаяТаблицаТовары.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьВознаграждения Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаВознаграждение", "ПОМЕСТИТЬ ВременнаяТаблицаВознаграждение");
		НомераТаблиц.Вставить("СуммыТаблицыВознаграждение", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаВознаграждение.СтавкаНДС,
		|	ВременнаяТаблицаВознаграждение.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаВознаграждение.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаВознаграждение.СуммаРуб,
		|	ВременнаяТаблицаВознаграждение.СуммаНДСРуб
		|ИЗ
		|	ВременнаяТаблицаВознаграждение КАК ВременнаяТаблицаВознаграждение"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаСуммыПоступления", "ПОМЕСТИТЬ ВременнаяТаблицаСуммыПоступления");
		НомераТаблиц.Вставить("СуммыТаблицыСуммыПоступления", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаСуммыПоступления.НомерСтроки,
		|	ВременнаяТаблицаСуммыПоступления.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаСуммыПоступления.СуммаРуб
		|ИЗ
		|	ВременнаяТаблицаСуммыПоступления КАК ВременнаяТаблицаСуммыПоступления"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаРасчетыВВалютеТовары()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТовары.ДоговорКонтрагента,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.Услуга,
	|	ВременнаяТаблицаТовары.Количество,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаРуб,
	|	СуммыТаблицыТовары.СуммаНДСРуб,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.КлючСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеВознаграждения()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыВознаграждение.СуммаВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаРуб,
	|	СуммыТаблицыВознаграждение.СуммаНДСРуб
	|ПОМЕСТИТЬ СуммыТаблицыВознаграждение
	|ИЗ
	|	&СуммыТаблицыВознаграждение КАК СуммыТаблицыВознаграждение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаВознаграждение.Ссылка,
	|	ВременнаяТаблицаВознаграждение.СтавкаНДС,
	|	СуммыТаблицыВознаграждение.СуммаВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыВознаграждение.СуммаРуб,
	|	СуммыТаблицыВознаграждение.СуммаНДСРуб
	|ПОМЕСТИТЬ ТаблицаВознаграждение
	|ИЗ
	|	ВременнаяТаблицаВознаграждение КАК ВременнаяТаблицаВознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыВознаграждение КАК СуммыТаблицыВознаграждение
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеСуммыПоступления()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыСуммыПоступления.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыСуммыПоступления.СуммаВзаиморасчетов,
	|	СуммыТаблицыСуммыПоступления.СуммаРуб
	|ПОМЕСТИТЬ СуммыТаблицыСуммыПоступления
	|ИЗ
	|	&СуммыТаблицыСуммыПоступления КАК СуммыТаблицыСуммыПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСуммыПоступления.Ссылка,
	|	ВременнаяТаблицаСуммыПоступления.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаСуммыПоступления.Покупатель,
	|	ВременнаяТаблицаСуммыПоступления.ДатаРеализации,
	|	ВременнаяТаблицаСуммыПоступления.Услуга,
	|	СуммыТаблицыСуммыПоступления.СуммаВзаиморасчетов,
	|	СуммыТаблицыСуммыПоступления.СуммаРуб
	|ПОМЕСТИТЬ ТаблицаСуммыПоступления
	|ИЗ
	|	ВременнаяТаблицаСуммыПоступления КАК ВременнаяТаблицаСуммыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыСуммыПоступления КАК СуммыТаблицыСуммыПоступления
	|		ПО ВременнаяТаблицаСуммыПоступления.НомерСтроки = СуммыТаблицыСуммыПоступления.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 
 
Функция ТекстЗапросаТаблицаУслуги(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ЕстьВознаграждения Тогда
		ПараметрыПроведения.Вставить("ВременнаяТаблицаУслуги", Неопределено);
		Возврат "";
	КонецЕсли;
	
    НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	""Услуги"" КАК ИмяСписка,
	|	&СинонимУслуги КАК СинонимСписка,
	|	1 КАК НомерСтроки,
	|	Реквизиты.УслугаПоВознаграждению КАК Номенклатура,
	|	1 КАК Количество,
	|	ТаблицаУслуги.Ссылка КАК ДокументРасчетов,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетовЕНВД,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаНУ,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.СчетДоходов КАК СчетДоходов,
	|	Реквизиты.Субконто КАК Субконто,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаУслуги.Ссылка КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ИСТИНА КАК ЭтоУслуга,
	|	Реквизиты.ДоходЕНВД КАК ДоходЕНВД,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетовСКомитентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансовСКомитентом,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	Реквизиты.Дата КАК Период
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ТаблицаВознаграждение КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";
    	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции	

Функция ТекстЗапросаСписаниеТоваровКомитента(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	ТекстЗапроса = "";
	Если НЕ Реквизиты.ЕстьТовары
		ИЛИ Реквизиты.ВидОперации <> Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах Тогда
		ПараметрыПроведения.Вставить("РеализованныеТоварыКомитентаТаблица", Неопределено);
	Иначе
		НомераТаблиц.Вставить("РеализованныеТоварыКомитентаТаблица", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса
		+ "ВЫБРАТЬ
		|	ТаблицаСуммаПоступления.Покупатель,
		|	ТаблицаСуммаПоступления.ДатаРеализации,
		|	ТаблицаСуммаПоступления.СуммаВзаиморасчетов КАК СуммаПоступления,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Услуга,
		|	ТаблицаТовары.СуммаВзаиморасчетов КАК Выручка,
		|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДС,
		|	ТаблицаТовары.Количество
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммыПоступления КАК ТаблицаСуммаПоступления
		|		ПО ТаблицаТовары.НомерСтроки = ТаблицаСуммаПоступления.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ВидОперации <> Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках Тогда
		ПараметрыПроведения.Вставить("ЗакупленныеТоварыКомитентаТаблица", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ЗакупленныеТоварыКомитентаТаблица", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса
		+ "ВЫБРАТЬ
		|	ТаблицаПоставщики.Партия,
		|	ТаблицаТовары.Номенклатура,
		|	МИНИМУМ(ТаблицаПоставщики.НомерСтроки) КАК НомерСтрокиПоставщики,
		|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтрокиТовары,
		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
		|	СУММА(ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаНДС,
		|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма
		|ИЗ
		|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ТаблицаПоставщики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|		ПО ТаблицаПоставщики.КлючСтроки = ТаблицаТовары.КлючСтроки
		|			И ТаблицаПоставщики.Ссылка = ТаблицаТовары.Ссылка
		|ГДЕ
		|	ТаблицаПоставщики.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПоставщики.Партия,
		|	ТаблицаТовары.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиПоставщики,
		|	НомерСтрокиТовары"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВознаграждение(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВознаграждения Тогда
		ПараметрыПроведения.Вставить("ВознаграждениеШапка", 	Неопределено);
		ПараметрыПроведения.Вставить("ВознаграждениеТаблица", 	Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВознаграждениеШапка", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВознаграждениеТаблица", 	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""ОтчетКомитентуОПродажах"" КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА Реквизиты.СчетУчетаРасчетовПоАвансам = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.НеЗачитывать)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически)
	|	КОНЕЦ КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Реквизиты.УдержатьВознаграждение КАК УдержатьВознаграждение,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ТаблицаУслуги.СчетРасчетов,
	|	ТаблицаУслуги.СчетАвансов,
	|	ТаблицаУслуги.Контрагент,
	|	ТаблицаУслуги.ДоговорКонтрагента,
	|	ТаблицаУслуги.ВидДоговора,
	|	ТаблицаУслуги.ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.РасчетыВУсловныхЕдиницах,
	|	ТаблицаУслуги.УчетАгентскогоНДС,
	|	ТаблицаУслуги.РасчетыВВалюте,
	|	ТаблицаУслуги.Ссылка КАК ДокументРасчетов,
	|	ТаблицаУслуги.Подразделение,
	|	ТаблицаУслуги.СчетРасчетов КАК КорСчет,
	|	ТаблицаУслуги.Контрагент КАК КорСубконто1,
	|	ТаблицаУслуги.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаУслуги.Ссылка КАК КорСубконто3,
	|	ТаблицаУслуги.Подразделение КАК КорПодразделение,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаБУ КАК СуммаБУ,
	|	ТаблицаУслуги.СуммаНУ КАК СуммаНУ,
	|	ТаблицаУслуги.СуммаВзаиморасчетовЕНВД КАК СуммаВзаиморасчетовЕНВД,
	|	ТаблицаУслуги.СуммаВзаиморасчетовПатент КАК СуммаВзаиморасчетовПатент,
	|	ТаблицаУслуги.СуммаВзаиморасчетовТорговыйСбор КАК СуммаВзаиморасчетовТорговыйСбор,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ТаблицаУслуги.СуммаРуб
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБУ_ЕНВД,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	""Комиссионное вознаграждение"" КАК Содержание,
	|	0 КАК СуммаБУ_Комитента
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	НомераТаблиц.Вставить("РублевыеСуммыДокументовВВалюте", 	НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб КАК СуммаБезНДСРуб
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
Конецфункции	

Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВознаграждения Тогда
		ПараметрыПроведения.Вставить("РеализацияТаблица", 	Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеализацияТаблица", 	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб,
	|	ТаблицаУслуги.СуммаНДСРуб,
	|	ТаблицаУслуги.СуммаБУ,
	|	ТаблицаУслуги.СуммаНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	ТаблицаУслуги.СчетДоходов,
	|	ТаблицаУслуги.Субконто,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.КорСчет,
	|	ТаблицаУслуги.КорСубконто1,
	|	ТаблицаУслуги.КорСубконто2,
	|	ТаблицаУслуги.КорСубконто3,
	|	ТаблицаУслуги.Контрагент,
	|	ТаблицаУслуги.Контрагент КАК Покупатель,
	|	ТаблицаУслуги.ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.Подразделение,
	|	ТаблицаУслуги.ЭтоКомиссия,
	|	ТаблицаУслуги.ЭтоУслуга,
	|	ЛОЖЬ КАК ЭтоНесырьевойТовар,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка) КАК КодРаздел7ДекларацииНДС,
	|	ЛОЖЬ КАК КодСоответствуетСт149НКРФ,
	|	ЛОЖЬ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ТаблицаУслуги.Комитент,
	|	ТаблицаУслуги.ДоговорКомиссии,
	|	ТаблицаУслуги.Ссылка КАК ДокументРасчетовСКомитентом,
	|	ТаблицаУслуги.Период КАК ДатаРеализации,
	|	ТаблицаУслуги.СчетРасчетовСКомитентом,
	|	ТаблицаУслуги.СчетАвансовСКомитентом,
	|	ТаблицаУслуги.ВалютаРасчетовСКомитентом,
	|	ТаблицаУслуги.СуммаРасчетовСКомитентом,
	|	ТаблицаУслуги.СуммаПоступленияОтКомитента
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ

Функция ПодготовитьПараметрыСписаниеРеализованныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = ""
	+ "Период,"            // <Дата> - счет по дебету проводки (счет учета денежных средств)
	+ "Регистратор,"       // <Регистратор...> - документ, записывающий движения в регистры
	+ "Организация,"       // <СправочникСсылка.Организации> - организация документа
	+ "Контрагент,"        // <СправочникСсылка.Контрагенты> - контрагент документа
	+ "ДоговорКонтрагента" // <СправочникСсылка.ДоговорыКонтрагентов> - договор с комитентом
	;
	ПараметрыПроведения = ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты,
		СписокОбязательныхКолонок);
	Параметры.Вставить("Реквизиты", ПараметрыПроведения);
	
	// Подготовка таблицы товаров документа, по которым отчитываемся перед комитентом
	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"     // <СправочникСсылка.Номенклатура> - комиссионный товар (услуга)
	+ "Покупатель,"       // <СправочникСсылка.Контрагенты> - покупатель комиссионного товара
	+ "ДатаРеализации,"   // <Дата> - дата реализации
	+ "Услуга,"           // <Булево> - признак того, что номенклатура является услугой
	+ "Выручка,"          // <Число(15,2)> - сумма выручки
	+ "СуммаПоступления," // <Число(15,2)> - сумма поступления
	+ "СуммаНДС,"         // <Число(15,2)> - сумма НДС
	+ "Количество"        // <Число(15,3)> - количество комиссионного товара по отчету.
	;
	ПараметрыПроведения = ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоварыКомитента,
		СписокОбязательныхКолонок);
	Параметры.Вставить("ТоварыКомитента", ПараметрыПроведения);
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияСписаниеРеализованныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаТоварыКомитента)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
	    Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСписаниеРеализованныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаОстатков = ПолучитьОстаткиРеализованныеТоварыКомитентов(Параметры);
	ТаблицаТоваров = Параметры.ТоварыКомитента;
	
	ТаблицаТоваров.Свернуть("Номенклатура, Услуга, Покупатель, ДатаРеализации",
		"Количество, Выручка, СуммаПоступления, СуммаНДС");
	ТаблицаОстатков.Индексы.Добавить("Номенклатура, Покупатель, ДатаРеализации");
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		Если Строка.Количество = 0 И (НЕ Строка.Услуга) Тогда
			
			Продолжить;
			
		ИначеЕсли Строка.Количество < 0 Тогда
			
			Движение = Движения.РеализованныеТоварыКомитентов.ДобавитьПриход();
			Движение.Активность  = Истина;
			Движение.Период      = Реквизиты.Период;
			Движение.Организация = Реквизиты.Организация;
			
			Движение.Контрагент         = Реквизиты.Контрагент;
			Движение.ДоговорКонтрагента = Реквизиты.ДоговорКонтрагента;
			Движение.Номенклатура       = Строка.Номенклатура;
			Движение.Покупатель         = Строка.Покупатель;
			Движение.ДатаРеализации     = Строка.ДатаРеализации;
			
			Движение.Количество       = - Строка.Количество;
			Движение.Выручка          = - Строка.Выручка;
			Движение.СуммаПоступления = - Строка.СуммаПоступления;
			Движение.СуммаНДС         = - Строка.СуммаНДС;
			
			Продолжить;
			
		КонецЕсли;
		
		Для НомерФильтра = 1 По ?(ЗначениеЗаполнено(Строка.Покупатель), 2, 1) Цикл
			
			// Если покупатель указан, списание выполняется в 2 прохода -
			// сначала по строкам с указанным покупателем, а потом по строкам 
			// с пустым покупателем
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", Строка.Номенклатура);
			Если ЗначениеЗаполнено(Строка.Покупатель) Тогда
				СтруктураОтбора.Вставить("Покупатель", ?(НомерФильтра = 1, Строка.Покупатель, Справочники.Контрагенты.ПустаяСсылка()));
			КонецЕсли;
			
			// Отбор по датам реализации при отборе по пустому покупателю не устанавливается
			Если ЗначениеЗаполнено(Строка.ДатаРеализации) И НомерФильтра = 1 Тогда
				СтруктураОтбора.Вставить("ДатаРеализации", Строка.ДатаРеализации);
			КонецЕсли;
			
			НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
			
			Для Каждого Запись Из НайденныеСтроки Цикл
				
				Если Строка.Услуга Тогда
					
					Если Запись.ВыручкаОстаток = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Списать    = Мин(Строка.Выручка, Запись.ВыручкаОстаток);
					СписатьНДС = Мин(Строка.СуммаНДС, Запись.СуммаНДСОстаток);
					
					Если Списать > 0 Тогда
						Движение = Движения.РеализованныеТоварыКомитентов.ДобавитьРасход();
						Движение.Активность         = Истина;
						Движение.Период             = Реквизиты.Период;
						Движение.Организация        = Реквизиты.Организация;
						Движение.Контрагент         = Реквизиты.Контрагент;
						Движение.ДоговорКонтрагента = Реквизиты.ДоговорКонтрагента;
						Движение.Номенклатура       = Строка.Номенклатура;
						Движение.Покупатель         = Запись.Покупатель;
						Движение.ДатаРеализации     = Запись.ДатаРеализации;
						Движение.Количество         = Окр(Строка.Количество * Списать /Строка.Выручка, 3);
						Движение.Выручка            = Списать;
						Движение.СуммаНДС           = СписатьНДС;
						
						Строка.Выручка           = Строка.Выручка - Движение.Выручка;
						Строка.Количество        = Строка.Количество - Движение.Количество;
						Запись.ВыручкаОстаток    = Запись.ВыручкаОстаток - Движение.Выручка;
						Запись.КоличествоОстаток = Запись.КоличествоОстаток - Движение.Количество;
						Запись.СуммаНДСОстаток   = Запись.СуммаНДСОстаток - Движение.СуммаНДС;
					КонецЕсли;
					
					Если Строка.Выручка = 0 Тогда
						Прервать;
					КонецЕсли;
					
				Иначе
					
					Если Запись.КоличествоОстаток = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Списать    = Мин(Строка.Количество, Запись.КоличествоОстаток);
					СписатьНДС = Мин(Строка.СуммаНДС, Запись.СуммаНДСОстаток);
					
					Если Списать > 0 Тогда
						
						Движение = Движения.РеализованныеТоварыКомитентов.ДобавитьРасход();
						Движение.Активность         = Истина;
						Движение.Период             = Реквизиты.Период;
						Движение.Организация        = Реквизиты.Организация;
						Движение.Контрагент         = Реквизиты.Контрагент;
						Движение.ДоговорКонтрагента = Реквизиты.ДоговорКонтрагента;
						Движение.Номенклатура       = Строка.Номенклатура;
						Движение.Покупатель         = Запись.Покупатель;
						Движение.ДатаРеализации     = Запись.ДатаРеализации;
						Движение.Количество         = Списать;
						Движение.СуммаНДС           = СписатьНДС;
						
						Если Запись.КоличествоОстаток = 0 Тогда
							Движение.Выручка          = Запись.ВыручкаОстаток;
							Движение.СуммаПоступления = Запись.СуммаПоступленияОстаток;
						ИначеЕсли Списать = Строка.Количество ИЛИ Строка.Количество = 0 Тогда
							Движение.Выручка          = Строка.Выручка;
							Движение.СуммаПоступления = Строка.СуммаПоступления;
						Иначе 
							Движение.Выручка          = Окр(Строка.Выручка * Списать /Строка.Количество, 2);
							Движение.СуммаПоступления = Окр(Строка.СуммаПоступления * Списать /Строка.Количество, 2);
						КонецЕсли;
						
						Строка.Количество        = Строка.Количество - Движение.Количество;
						Строка.Выручка           = Строка.Выручка - Движение.Выручка;
						Строка.СуммаПоступления  = Строка.СуммаПоступления - Движение.СуммаПоступления;
						Запись.ВыручкаОстаток    = Запись.ВыручкаОстаток - Движение.Выручка;
						Запись.КоличествоОстаток = Запись.КоличествоОстаток - Движение.Количество;
						Запись.СуммаНДСОстаток   = Запись.СуммаНДСОстаток - Движение.СуммаНДС;
						
					КонецЕсли;
					
					Если Строка.Количество = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ?(Строка.Услуга, Строка.Выручка = 0, Строка.Количество = 0) Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.РеализованныеТоварыКомитентов.Записывать = Истина;
	
КонецПроцедуры

Функция ПолучитьОстаткиРеализованныеТоварыКомитентов(СтруктураПараметров)

	Реквизиты = СтруктураПараметров.Реквизиты[0];
	РеализованныеТоварыКомитентов = СтруктураПараметров.ТоварыКомитента;

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РеализованныеТоварыКомитентов");
	ЭлементБлокировки.УстановитьЗначение("Организация",        Реквизиты.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период",             Новый Диапазон(, Реквизиты.Период));
	ЭлементБлокировки.УстановитьЗначение("Контрагент",         Реквизиты.Контрагент);
	ЭлементБлокировки.УстановитьЗначение("ДоговорКонтрагента", Реквизиты.ДоговорКонтрагента);
	ЭлементБлокировки.ИсточникДанных = РеализованныеТоварыКомитентов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", 		Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", 		Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Реквизиты.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ТоварыДокумента", 	РеализованныеТоварыКомитентов.ВыгрузитьКолонку("Номенклатура"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализованныеТоварыКомитентовОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(РеализованныеТоварыКомитентовОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(РеализованныеТоварыКомитентовОстатки.ВыручкаОстаток) КАК ВыручкаОстаток,
	|	СУММА(РеализованныеТоварыКомитентовОстатки.СуммаПоступленияОстаток) КАК СуммаПоступленияОстаток,
	|	СУММА(РеализованныеТоварыКомитентовОстатки.СуммаНДСОстаток) КАК СуммаНДСОстаток,
	|	РеализованныеТоварыКомитентовОстатки.Покупатель КАК Покупатель,
	|	РеализованныеТоварыКомитентовОстатки.ДатаРеализации КАК ДатаРеализации
	|ИЗ
	|	РегистрНакопления.РеализованныеТоварыКомитентов.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И Контрагент = &Контрагент
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК РеализованныеТоварыКомитентовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализованныеТоварыКомитентовОстатки.Номенклатура,
	|	РеализованныеТоварыКомитентовОстатки.Покупатель,
	|	РеализованныеТоварыКомитентовОстатки.ДатаРеализации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Покупатель,
	|	ДатаРеализации";

	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	ТаблицаЗапроса.Индексы.Добавить("Номенклатура, Покупатель, ДатаРеализации");

	Возврат ТаблицаЗапроса;

КонецФункции

Функция ПодготовитьПараметрыСписаниеЗакупленныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = ""
	+ "Период,"         	// <Дата> - дата, дата документа
	+ "Регистратор,"    	// <Регистратор...> - документ, записывающий движения в регистры
	+ "Организация,"		// <СправочникСсылка.Организации> - организация документа
	+ "Контрагент,"    		// <СправочникСсылка.Контрагенты> - контрагент документа
	+ "ДоговорКонтрагента"  // <СправочникСсылка.ДоговорыКонтрагентов> - договор с комитентом
	;
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты,
																		СписокОбязательныхКолонок));

	// Подготовка таблицы товаров документа, по которым отчитываемся перед комитентом
	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"		// 	<СправочникСсылка.Номенклатура> - комиссионный товар (услуга)
	+ "Партия,"				//	<ДокументСсылка.ПоступлениеТоваровУслуг> - документ оприходования товара
	+ "Сумма,"				//  <Число(15,2)> - сумма поступления
	+ "СуммаНДС,"			//  <Число(15,2)> - сумма НДС поступления
	+ "Количество"			//	<Число(15,3)> - количество комиссионного товара по отчету.
	;
	Параметры.Вставить("ТоварыКомитента", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаТоварыКомитента,
																		СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияСписаниеЗакупленныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаТоварыКомитента)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
	    Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСписаниеЗакупленныхТоваровКомитента(ТаблицаТоварыКомитента, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
    ТаблицаТоваров = Параметры.ТоварыКомитента;
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		Движение 					= Движения.ЗакупленныеТоварыКомитентов.ДобавитьРасход();
		Движение.Активность	 		= Истина;
		Движение.Период		 		= Реквизиты.Период;
		Движение.Организация 		= Реквизиты.Организация;
		Движение.Контрагент		 	= Реквизиты.Контрагент;
		Движение.ДоговорКонтрагента	= Реквизиты.ДоговорКонтрагента;
		Движение.Номенклатура 		= Строка.Номенклатура;
		Движение.Партия				= Строка.Партия;

		Движение.Количество 		= Строка.Количество;
		Движение.Сумма 				= Строка.Сумма;
		Движение.СуммаНДС 			= Строка.СуммаНДС;
		
	КонецЦикла;

	Движения.ЗакупленныеТоварыКомитентов.Записывать = Истина;

КонецПроцедуры

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт

	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	ТаблицаЗначений.ЗаполнитьЗначения("Оказание услуг по договору комиссии", "Содержание");

КонецПроцедуры

Функция ПодготовитьТаблицуВознагражденияДляОтраженияПоРегиструРублевыеСуммыДокументовВВалюте(ИсходнаяТаблица) Экспорт
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	
	ТаблицаВозврата.Колонки.Добавить("ИмяСписка");
	ТаблицаВозврата.Колонки.Добавить("НомерСтроки");
	ТаблицаВозврата.Колонки.Добавить("СуммаБУ");
	ТаблицаВозврата.Колонки.Добавить("СуммаНДСРуб");
	ТаблицаВозврата.Колонки.Добавить("СуммаБезНДСРуб");
	
	Если ИсходнаяТаблица = Неопределено Тогда
		Возврат ТаблицаВозврата;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
		
		НоваяСтрока = ТаблицаВозврата.Добавить();
		
		НоваяСтрока.НомерСтроки = 1;
		НоваяСтрока.СуммаБУ     = СтрокаТаблицы.СуммаБУ;
		НоваяСтрока.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРуб;
		НоваяСтрока.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРуб;
		
	КонецЦикла;
	
	ТаблицаВозврата.Свернуть("ИмяСписка, НомерСтроки","СуммаБУ, СуммаНДСРуб, СуммаБезНДСРуб");
	
	Возврат ТаблицаВозврата;
	
КонецФункции	

// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Отчет комитенту
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетКомитентуОПродажах";
	КомандаПечати.Представление = НСтр("ru = 'Отчет комитенту'");

	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОбОказанииУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Отчет комитенту""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаКлючиСтрок",	        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаПоступление",	    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаГТД",    			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаПоставщики",	        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",     				        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаКомиссионногоВознаграждения", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_НаименованиеУслугПредварительная",НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_НаименованиеУслуг",  				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента", 	        НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТЧПоставщики.Поставщик КАК Поставщик,
	|	ТЧПоставщики.КлючСтроки КАК КлючСтроки,
	|	ТЧПоставщики.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТЧПоставщики.Партия.Грузоотправитель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузоотправитель,
	|	ЕСТЬNULL(ТЧПоставщики.Партия.Грузополучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Грузополучатель
	|ПОМЕСТИТЬ ВТ_КлючиСтрок
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ТЧПоставщики
	|ГДЕ
	|	ТЧПоставщики.Ссылка = &ДокументОснование
	|	И ТЧПоставщики.СчетФактура = &СчетФактура
	|	И ТЧПоставщики.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)
	|	И ТЧПоставщики.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТЧПоставщики.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахПоставщики.КлючСтроки КАК КлючСтроки,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ПоступлениеТоваровУслугТовары.НомерСтроки) КАК НомерСтроки,
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК ПТиУ,
	|	ОтчетКомитентуОПродажахПоставщики.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_НомерСтроки_ГТД
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|			ПО ПоступлениеТоваровУслугТовары.НомерГТД = НомераГТД.Ссылка
	|		ПО ОтчетКомитентуОПродажахПоставщики.Партия = ПоступлениеТоваровУслугТовары.Ссылка
	|ГДЕ
	|	НЕ НомераГТД.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомитентуОПродажахПоставщики.КлючСтроки,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ОтчетКомитентуОПродажахПоставщики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НомерСтроки_ГТД.КлючСтроки КАК КлючСтроки,
	|	ВТ_НомерСтроки_ГТД.Ссылка КАК Ссылка,
	|	ВТ_НомерСтроки_ГТД.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.НомерГТД КАК НомерГТД,
	|	ПоступлениеТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ГТД
	|ИЗ
	|	ВТ_НомерСтроки_ГТД КАК ВТ_НомерСтроки_ГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО ВТ_НомерСтроки_ГТД.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
	|			И ВТ_НомерСтроки_ГТД.НомерСтроки = ПоступлениеТоваровУслугТовары.НомерСтроки
	|			И ВТ_НомерСтроки_ГТД.ПТиУ = ПоступлениеТоваровУслугТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТЧПоставщики.Поставщик) КАК Продавец,
	|	МАКСИМУМ(ТЧПоставщики.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(ТЧПоставщики.Грузополучатель) КАК Грузополучатель,
	|	ТЧПоставщики.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Поставщики
	|ИЗ
	|	ВТ_КлючиСтрок КАК ТЧПоставщики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧПоставщики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ ТаблицаТовары.Номенклатура.Услуга
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючиСтрок КАК ВТ_КлючиСтрок
	|		ПО ТаблицаТовары.Ссылка = ВТ_КлючиСтрок.Ссылка
	|			И ТаблицаТовары.КлючСтроки = ВТ_КлючиСтрок.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|					ИНАЧЕ Реквизиты.Организация
	|				КОНЕЦ
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &ПредставлениеПоставщика
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Продавец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВТ_Поставщики.Продавец.ОбособленноеПодразделение
	|				И ВТ_Поставщики.Продавец.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВТ_Поставщики.Продавец.ГоловнойКонтрагент
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Продавец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВТ_Поставщики.Продавец
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|				ИНАЧЕ Реквизиты.Организация
	|			КОНЕЦ
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|					ИНАЧЕ Реквизиты.Организация.ИНН
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Продавец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВТ_Поставщики.Продавец.ИНН
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|				ИНАЧЕ Реквизиты.Организация.ИНН
	|			КОНЕЦ
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.ПодразделениеОрганизации
	|					ИНАЧЕ Реквизиты.Организация
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Продавец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_Поставщики.Грузоотправитель.ОбособленноеПодразделение
	|							И ВТ_Поставщики.Грузоотправитель.ГоловнойКонтрагент = ВТ_Поставщики.Продавец
	|							И ВТ_Поставщики.Грузоотправитель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|						ТОГДА ВТ_Поставщики.Грузоотправитель
	|					ИНАЧЕ ВТ_Поставщики.Продавец
	|				КОНЕЦ
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ""он же""
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &Грузоотправитель
	|		КОГДА ВТ_Поставщики.Грузоотправитель = ВТ_Поставщики.Продавец
	|			ТОГДА ""он же""
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Грузоотправитель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВТ_Поставщики.Грузоотправитель
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Продавец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВТ_Поставщики.Продавец.ОбособленноеПодразделение
	|			ТОГДА ВТ_Поставщики.Продавец
	|		КОГДА НЕ ВТ_Поставщики.Грузоотправитель ЕСТЬ NULL
	|			ТОГДА ""он же""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Поставщики.Грузополучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВТ_Поставщики.Грузополучатель
	|		КОГДА НЕ ВТ_Поставщики.Грузополучатель ЕСТЬ NULL
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках)
	|			ТОГДА ВЫБОР
	|					КОГДА НаличиеТоваров.ЕстьТовары > 0
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &АдресПоставщика
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресПоставщика,
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА &ИННКПППоставщика
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИННКПППоставщика,
	|	&СводныйСФКомиссияПоЗакупке КАК СводныйСФКомиссияПоЗакупке
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поставщики КАК ВТ_Поставщики
	|		ПО Реквизиты.Ссылка = ВТ_Поставщики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	1 КАК НомерСтроки,
	|	Реквизиты.УслугаПоВознаграждению КАК Товар,
	|	Реквизиты.УслугаПоВознаграждению.Код КАК ТоварКод,
	|	Реквизиты.УслугаПоВознаграждению.Артикул КАК ТоварАртикул,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, &ТекстКомиссионноеВознаграждение) КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК РегистрационныйНомерТД,
	|	"""" КАК ЕдиницаИзмерения,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	СУММА(ЕСТЬNULL(ТаблицаТовары.СуммаВознаграждения, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(ТаблицаТовары.СуммаНДСВознаграждения, 0)) КАК СуммаНДС,
	|	Реквизиты.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ИСТИНА КАК ЭтоУслуга,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЕСТЬNULL(СправочникНоменклатура.ПериодичностьУслуги, НЕОПРЕДЕЛЕНО) КАК ПериодичностьУслуги
	|ПОМЕСТИТЬ ВТВознаграждение
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаТовары
	|		ПО Реквизиты.Ссылка = ТаблицаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поставщики КАК ВТ_Поставщики
	|		ПО Реквизиты.Ссылка = ВТ_Поставщики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Реквизиты.УслугаПоВознаграждению = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|	И ВТ_Поставщики.Продавец ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.УслугаПоВознаграждению,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.Ссылка,
	|	Реквизиты.СтавкаНДСВознаграждения,
	|	Реквизиты.ВалютаДокумента,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, &ТекстКомиссионноеВознаграждение),
	|	Реквизиты.УслугаПоВознаграждению.Код,
	|	Реквизиты.УслугаПоВознаграждению.Артикул,
	|	ЕСТЬNULL(СправочникНоменклатура.ПериодичностьУслуги, НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахПоставщики.КлючСтроки КАК КлючСтроки,
	|	ПоступлениеТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугУслуги.Содержание КАК Содержание
	|ПОМЕСТИТЬ ВТ_НаименованиеУслугПредварительная
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|		ПО ОтчетКомитентуОПродажахПоставщики.Партия = ПоступлениеТоваровУслугУслуги.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажахПоставщики.Ссылка = &ДокументОснование
	|	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахПоставщики.КлючСтроки,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Номенклатура,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Содержание
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|		ПО ОтчетКомитентуОПродажахПоставщики.Партия = ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажахПоставщики.Ссылка = &ДокументОснование
	|	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НаименованиеУслугПредварительная.КлючСтроки КАК КлючСтроки,
	|	ВТ_НаименованиеУслугПредварительная.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ВТ_НаименованиеУслугПредварительная.Содержание) КАК Содержание
	|ПОМЕСТИТЬ ВТ_НаименованиеУслуг
	|ИЗ
	|	ВТ_НаименованиеУслугПредварительная КАК ВТ_НаименованиеУслугПредварительная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НаименованиеУслугПредварительная.Номенклатура,
	|	ВТ_НаименованиеУслугПредварительная.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	1 КАК НомерСтроки,
	|	ВТВознаграждение.Товар КАК Товар,
	|	ВТВознаграждение.ТоварКод КАК ТоварКод,
	|	ВТВознаграждение.ТоварАртикул КАК ТоварАртикул,
	|	ВТВознаграждение.ТоварНаименование КАК ТоварНаименование,
	|	ВТВознаграждение.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТВознаграждение.ПредставлениеСтраны КАК ПредставлениеСтраны,
	|	ВТВознаграждение.НомерГТД КАК НомерГТД,
	|	ВТВознаграждение.ПредставлениеГТД КАК ПредставлениеГТД,
	|	ВТВознаграждение.РегистрационныйНомерТД КАК РегистрационныйНомерТД,
	|	ВТВознаграждение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТВознаграждение.Количество КАК Количество,
	|	ВТВознаграждение.Цена КАК Цена,
	|	ВТВознаграждение.Сумма КАК Сумма,
	|	ВТВознаграждение.СуммаНДС КАК СуммаНДС,
	|	ВТВознаграждение.СтавкаНДС КАК СтавкаНДС,
	|	ВТВознаграждение.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТВознаграждение.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВТВознаграждение.Ссылка КАК Ссылка,
	|	ВТВознаграждение.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	ВТВознаграждение.ПериодичностьУслуги КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ВТВознаграждение КАК ВТВознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка))
	|			И (ВТВознаграждение.ВалютаДокумента <> &ВалютаРеглУчета)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.Артикул,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Содержание, """") <> """"
	|			ТОГДА ТаблицаТовары.Содержание
	|		КОГДА ЕСТЬNULL(ВТ_НаименованиеУслуг.Содержание, """") = """"
	|			ТОГДА ТаблицаТовары.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ВТ_НаименованиеУслуг.Содержание
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВТ_ГТД.СтранаПроисхождения, ТаблицаТовары.Номенклатура.СтранаПроисхождения),
	|	ЕСТЬNULL(ВТ_ГТД.СтранаПроисхождения.НаименованиеПолное, ТаблицаТовары.Номенклатура.СтранаПроисхождения.НаименованиеПолное),
	|	ЕСТЬNULL(ВТ_ГТД.НомерГТД, ТаблицаТовары.Номенклатура.НомерГТД),
	|	ЕСТЬNULL(ВТ_ГТД.НомерГТД.Представление, ТаблицаТовары.Номенклатура.НомерГТД.Представление),
	|	ЕСТЬNULL(ВТ_ГТД.НомерГТД.РегистрационныйНомер, ТаблицаТовары.Номенклатура.НомерГТД.РегистрационныйНомер),
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС,
	|	ЕСТЬNULL(ТаблицаТовары.Номенклатура.Услуга, ЛОЖЬ),
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.Ссылка,
	|	ИСТИНА,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА &СводныйСФКомиссияПоЗакупке
	|			ТОГДА ВТ_КлючиСтрок.Поставщик
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючиСтрок КАК ВТ_КлючиСтрок
	|		ПО ТаблицаТовары.Ссылка = ВТ_КлючиСтрок.Ссылка
	|			И ТаблицаТовары.КлючСтроки = ВТ_КлючиСтрок.КлючСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|		ПО (ВТ_КлючиСтрок.Ссылка = Реквизиты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГТД КАК ВТ_ГТД
	|		ПО ТаблицаТовары.КлючСтроки = ВТ_ГТД.КлючСтроки
	|			И ТаблицаТовары.Ссылка = ВТ_ГТД.Ссылка
	|			И ТаблицаТовары.Номенклатура = ВТ_ГТД.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаименованиеУслуг КАК ВТ_НаименованиеУслуг
	|		ПО ТаблицаТовары.КлючСтроки = ВТ_НаименованиеУслуг.КлючСтроки
	|			И ТаблицаТовары.Номенклатура = ВТ_НаименованиеУслуг.Номенклатура
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаДанныеДляПечатиКорректировочныхСчетовФактур(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("Реквизиты",						НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",		НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	&ПустоеПодразделение КАК Подразделение,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	Реквизиты.Организация КАК Поставщик,
	|	Реквизиты.Организация.ИНН КАК ИННпоставщика,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПоставщика,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	Реквизиты.Организация КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаВзаиморасчетов,
	|	ЛОЖЬ КАК РасчетыВУсловныхЕдиницах,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	1 КАК НомерСтроки,
	|	"""" КАК Товар,
	|	"""" КАК ТоварКод,
	|	"""" КАК ТоварАртикул,
	|	"""" КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК ЕдиницаИзмерения,
	|	0 КАК КоличествоДоИзменения,
	|	0 КАК КоличествоПослеИзменения,
	|	0 КАК ЦенаДоИзменения,
	|	0 КАК ЦенаПослеИзменения,
	|	0 КАК СтоимостьБезНДСДоИзменения,
	|	0 КАК СтоимостьБезНДСПослеИзменения,
	|	0 КАК СуммаНДСПослеИзменения,
	|	0 КАК СуммаНДСДоИзменения,
	|	0 КАК СтоимостьСНДСДоИзменения,
	|	0 КАК СтоимостьСНДСПослеИзменения,
	|	0 КАК РазницаБезНДСУменьшение,
	|	0 КАК РазницаБезНДСУвеличение,
	|	0 КАК РазницаНДСУменьшение,
	|	0 КАК РазницаНДСУвеличение,
	|	0 КАК РазницаСНДСУменьшение,
	|	0 КАК РазницаСНДСУвеличение,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДСДоИзменения,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДСПослеИзменения,
	|	ИСТИНА КАК ЭтоУслуга,
	|	Таблица.Ссылка КАК Ссылка,
	|	"""" КАК АдресПоставщика,
	|	"""" КАК ИННКПППоставщика,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭДДоИзменения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Таблица
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаСчетФактураПолученныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Ссылка КАК ДокументОснование,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ИспользуетсяПостановлениеНДС981 = Истина) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	ОтчетКомитентуОПродажах.Дата КАК Дата,
	|	ОтчетКомитентуОПродажах.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ОтчетКомитентуОПродажах.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ОтчетКомитентуОПродажах.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате";
	
	Если ИспользуетсяПостановлениеНДС981 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ОтчетКомитентуОПродажах.Дата >= ДАТАВРЕМЯ(2017,10,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ОтчетКомитентуОПродажах.Дата < ДАТАВРЕМЯ(2017,10,1)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомитентуОПродажах") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетКомитентуОПродажах", "Отчет комитенту",
			ПечатьОтчетаКомитенту(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОбОказанииУслуг") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктОбОказанииУслуг", "Акт об оказании услуг",
			ПечатьАкта(МассивОбъектов, ОбъектыПечати), , "Документ.ОтчетКомитентуОПродажах.ПФ_MXL_АктОбУслугах");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОтчетаКомитенту(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитентуОПродажах_ОтчетКомитентуОПродажах";

	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧПоставщики.Ссылка,
	|	ТЧПоставщики.НомерСтроки,
	|	ТЧПоставщики.КлючСтроки,
	|	ТЧПоставщики.Поставщик,
	|	ТЧПоставщики.Партия,
	|	ДокПоступления.Дата КАК ДатаПартии,
	|	ВЫБОР
	|		КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	|			ТОГДА СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаВходящегоСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	|			ТОГДА СчетФактураПолученный.Ссылка.НомерВходящегоДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерВходящегоСчетаФактуры,
	|	ЕСТЬNULL(ДокПоступления.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДокПоступления.НомерВходящегоДокумента, """") КАК НомерВходящегоДокумента,
	|	ТЧПоставщики.СчетФактура КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ТЧПоставщики.ПолученСФ
	|			ТОГДА ЕСТЬNULL(ТЧПоставщики.СчетФактура.Дата, ТЧПоставщики.ДатаСФ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаВыданногоСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТЧПоставщики.ПолученСФ
	|			ТОГДА ЕСТЬNULL(ТЧПоставщики.СчетФактура.Номер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерВыданногоСчетаФактуры
	|ПОМЕСТИТЬ ВТ_РеквизитыПартий
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ТЧПоставщики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ДокПоступления
	|		ПО ТЧПоставщики.Партия = ДокПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО (ДокПоступления.Ссылка = СчетФактураПолученный.ДокументОснование)
	|ГДЕ
	|	ТЧПоставщики.Ссылка В(&МассивОбъектов)
	|	И ТЧПоставщики.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТЧПоставщики.Ссылка,
	|	ТЧПоставщики.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомитентуОПродажах.Ссылка.ВидОперации КАК ВидОперации,
	|	ОтчетКомитентуОПродажах.Ссылка.Номер КАК Номер,
	|	ОтчетКомитентуОПродажах.Ссылка.Дата КАК Дата,
	|	ОтчетКомитентуОПродажах.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОтчетКомитентуОПродажах.Ссылка.Контрагент КАК Контрагент,
	|	ОтчетКомитентуОПродажах.Ссылка.Организация КАК Организация,
	|	ОтчетКомитентуОПродажах.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ОтчетКомитентуОПродажах.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ОтчетКомитентуОПродажах.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.Ссылка.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ОтчетКомитентуОПродажах.НомерСтроки КАК НомерСтроки,
	|	0 КАК НомерСтрокиПоставщики,
	|	ОтчетКомитентуОПродажах.Номенклатура КАК Товар,
	|	ВЫБОР
	|		КОГДА НЕ ОтчетКомитентуОПродажах.Содержание ПОДОБНО """"
	|			ТОГДА ОтчетКомитентуОПродажах.Содержание
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СправочникНоменклатура.Наименование
	|		ИНАЧЕ СправочникНоменклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетКомитентуОПродажах.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ОтчетКомитентуОПродажах.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул,
	|	ОтчетКомитентуОПродажах.КоличествоМест КАК КоличествоМест,
	|	ОтчетКомитентуОПродажах.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ОтчетКомитентуОПродажах.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	ОтчетКомитентуОПродажах.Количество КАК Количество,
	|	ОтчетКомитентуОПродажах.Цена,
	|	ОтчетКомитентуОПродажах.Сумма КАК Сумма,
	|	ОтчетКомитентуОПродажах.СуммаНДС КАК СуммаНДС,
	|	ОтчетКомитентуОПродажах.Покупатель КАК ПокупательПоставщик,
	|	ОтчетКомитентуОПродажах.ДатаРеализации КАК ДатаПродажи,
	|	ОтчетКомитентуОПродажах.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПартии,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоСчетаФактуры,
	|	"""" КАК НомерВходящегоСчетаФактуры,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВыданногоСчетаФактуры,
	|	"""" КАК НомерВыданногоСчетаФактуры,
	|	ОтчетКомитентуОПродажах.Покупатель КАК ПолеДляИтогов,
	|	СправочникНоменклатура.ПериодичностьУслуги
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОтчетКомитентуОПродажах.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивОбъектов)
	|	И ОтчетКомитентуОПродажах.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахТовары.Ссылка,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.ВидОперации,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.Номер,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.Дата,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.ДоговорКонтрагента,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.Контрагент,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.Организация,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.СуммаДокумента,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.ВалютаДокумента,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.СтавкаНДСВознаграждения,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВознаграждения,
	|	ОтчетКомитентуОПродажахТовары.Ссылка.ПодразделениеОрганизации,
	|	ОтчетКомитентуОПродажахТовары.НомерСтроки,
	|	ВТ_РеквизитыПартий.НомерСтроки,
	|	ОтчетКомитентуОПродажахТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ОтчетКомитентуОПродажахТовары.Содержание ПОДОБНО """"
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Содержание
	|		КОГДА СправочникНоменклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СправочникНоменклатура.Наименование
	|		ИНАЧЕ СправочникНоменклатура.НаименованиеПолное
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ОтчетКомитентуОПродажахТовары.КоличествоМест,
	|	ОтчетКомитентуОПродажахТовары.ЕдиницаИзмерения.Представление,
	|	ОтчетКомитентуОПродажахТовары.Номенклатура.ЕдиницаИзмерения,
	|	ОтчетКомитентуОПродажахТовары.Количество,
	|	ОтчетКомитентуОПродажахТовары.Цена,
	|	ОтчетКомитентуОПродажахТовары.Сумма,
	|	ОтчетКомитентуОПродажахТовары.СуммаНДС,
	|	ЕСТЬNULL(ВТ_РеквизитыПартий.Поставщик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС,
	|	ВТ_РеквизитыПартий.Партия,
	|	ВТ_РеквизитыПартий.ДатаПартии,
	|	ВТ_РеквизитыПартий.ДатаВходящегоСчетаФактуры,
	|	ВТ_РеквизитыПартий.НомерВходящегоСчетаФактуры,
	|	ВТ_РеквизитыПартий.ДатаВходящегоДокумента,
	|	ВТ_РеквизитыПартий.НомерВходящегоДокумента,
	|	ВТ_РеквизитыПартий.ДатаВыданногоСчетаФактуры,
	|	ВТ_РеквизитыПартий.НомерВыданногоСчетаФактуры,
	|	ВТ_РеквизитыПартий.Партия,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеквизитыПартий КАК ВТ_РеквизитыПартий
	|		ПО ОтчетКомитентуОПродажахТовары.КлючСтроки = ВТ_РеквизитыПартий.КлючСтроки
	|			И ОтчетКомитентуОПродажахТовары.Ссылка = ВТ_РеквизитыПартий.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОтчетКомитентуОПродажахТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажахТовары.Ссылка В(&МассивОбъектов)
	|	И ОтчетКомитентуОПродажахТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	НомерСтрокиПоставщики,
	|	ПолеДляИтогов,
	|	ОтчетКомитентуОПродажах.НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(Ссылка),
	|	МАКСИМУМ(ВидОперации),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(ВалютаДокумента),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МИНИМУМ(НомерСтрокиПоставщики),
	|	СУММА(КоличествоМест),
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	МАКСИМУМ(ПокупательПоставщик),
	|	МАКСИМУМ(ДатаПартии),
	|	МАКСИМУМ(ДатаВходящегоСчетаФактуры),
	|	МАКСИМУМ(НомерВходящегоСчетаФактуры),
	|	МАКСИМУМ(ДатаВходящегоДокумента),
	|	МАКСИМУМ(НомерВходящегоДокумента),
	|	МАКСИМУМ(ДатаВыданногоСчетаФактуры),
	|	МАКСИМУМ(НомерВыданногоСчетаФактуры)
	|ПО
	|	Ссылка,
	|	ПолеДляИтогов";	

	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");

	Итого = 0;
	НомерПП = 1;
	
	ПервыйДокумент = Истина;

	ОтчетНапечатан = Ложь;
	Пока ВыборкаДокументов.Следующий() Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОтчетНапечатан = Истина;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Если ВыборкаДокументов.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_ОтчетКомитентуОПродажах");
			ЭтоКомиссияПоПродаже = Истина;
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_ОтчетКомитентуОЗакупках");
			ЭтоКомиссияПоПродаже = Ложь;
		КонецЕсли;

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ВыборкаДокументов.Ссылка, НСтр("ru = 'Отчет комитенту'"));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");

		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументов.Контрагент, ВыборкаДокументов.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");

		ОбластьМакета = Макет.ПолучитьОбласть("Комитент");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеКонтрагента;
		ОбластьМакета.Параметры.Поставщик               = ВыборкаДокументов.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Организация");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель              = ВыборкаДокументов.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		Итого = 0;
		НомерПП = 1;
		ОбластьСтроки = ?(ВыводитьКоды,	"СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);

		КоличествоТоваров = 0;
		
		ВыборкаКонтрагентов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагентов.Следующий() Цикл
			
			СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаКонтрагентов.ПокупательПоставщик, ВыборкаДокументов.Дата);
			Если ЭтоКомиссияПоПродаже Тогда
				ТекстКонтрагент = НСтр("ru = 'Покупатель: '") + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
			Иначе
				ТекстКонтрагент = НСтр("ru = 'Поставщик: '") + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
			КонецЕсли;
			ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = ' Адрес: '") + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "ЮридическийАдрес,");
			КПП = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "КПП,", Ложь);
			Если ЗначениеЗаполнено(КПП) Тогда
				КПП = "/" + КПП;
			КонецЕсли;
			Если ЭтоКомиссияПоПродаже Тогда
				ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = ' ИНН/КПП покупателя: '") + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "ИНН,", Ложь) + КПП;
			Иначе
				ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = ' ИНН/КПП поставщика: '") + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "ИНН,", Ложь) + КПП;
			КонецЕсли;
			
			// Сформируем информацию о реквизитах партии поставки.
			Если НЕ ЭтоКомиссияПоПродаже Тогда
				ТекстКонтрагент = ТекстКонтрагент + Символы.ПС;
				
				Если ЗначениеЗаполнено(ВыборкаКонтрагентов.НомерВходящегоДокумента)
					 И ЗначениеЗаполнено(ВыборкаКонтрагентов.ДатаВходящегоДокумента) Тогда
					ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = 'Поступление от поставщика: № '") + ВыборкаКонтрагентов.НомерВходящегоДокумента 
						+ НСтр("ru = ' от '") + Формат(ВыборкаКонтрагентов.ДатаВходящегоДокумента, "ДЛФ=Д");
				Иначе
					ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = 'Поступление от поставщика: № '") + Формат(ВыборкаКонтрагентов.ДатаПартии, "ДЛФ=Д");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаКонтрагентов.ДатаВходящегоСчетаФактуры)
					 И ЗначениеЗаполнено(ВыборкаКонтрагентов.НомерВходящегоСчетаФактуры) Тогда
					ТекстКонтрагент = ТекстКонтрагент + Символы.ПС;
					ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = 'Получен счет-фактура поставщика: № '") + ВыборкаКонтрагентов.НомерВходящегоСчетаФактуры 
						+ НСтр("ru = ' от '") + Формат(ВыборкаКонтрагентов.ДатаВходящегоСчетаФактуры, "ДЛФ=Д");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаКонтрагентов.ДатаВыданногоСчетаФактуры)
					 И ЗначениеЗаполнено(ВыборкаКонтрагентов.НомерВыданногоСчетаФактуры) Тогда
					
					ТекстКонтрагент = ТекстКонтрагент + Символы.ПС;
					ТекстКонтрагент = ТекстКонтрагент + НСтр("ru = 'Выдан счет-фактура комитенту: № '") 
						+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаКонтрагентов.НомерВыданногоСчетаФактуры, Истина, Ложь) 
						+ " от " + Формат(ВыборкаКонтрагентов.ДатаВыданногоСчетаФактуры, "ДЛФ=Д");
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаКонтрагент");
			ОбластьМакета.Параметры.ПредставлениеКонтрагента = ТекстКонтрагент;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			
			ВыборкаТоваров = ВыборкаКонтрагентов.Выбрать();
			ИтогоПоКонтрагенту = 0;
			
			Пока ВыборкаТоваров.Следующий() Цикл
				
				КоличествоТоваров = КоличествоТоваров + 1;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаТоваров);
				ОбластьМакета.Параметры.НомерСтроки = НомерПП;
				
				Если НЕ ВыборкаТоваров.СуммаВключаетНДС Тогда
					СуммаПоСтроке = ВыборкаТоваров.Сумма + ВыборкаТоваров.СуммаНДС;
					ОбластьМакета.Параметры.Цена = ?(ВыборкаТоваров.Количество <> 0, СуммаПоСтроке/ВыборкаТоваров.Количество, 0);
					ОбластьМакета.Параметры.Сумма = СуммаПоСтроке;
				Иначе
					СуммаПоСтроке = ВыборкаТоваров.Сумма;
				КонецЕсли;			
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Итого = Итого + СуммаПоСтроке;
				НомерПП = НомерПП + 1;
				ИтогоПоКонтрагенту = ИтогоПоКонтрагенту + СуммаПоСтроке;
					
			КонецЦикла;	
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаКонтрагентИтог");
			ОбластьМакета.Параметры.Заполнить(ВыборкаКонтрагентов);
			ОбластьМакета.Параметры.Сумма = ИтогоПоКонтрагенту;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;	
			
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = Итого;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Итого, ВыборкаДокументов.ВалютаДокумента);
		
		ОбластьМакета.Параметры.СуммаВознаграждения = НСтр("ru = 'Сумма комиссионного вознаграждения составила'") + " "
			+ ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаДокументов.СуммаВознаграждения, ВыборкаДокументов.ВалютаДокумента);
			
		ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru = 'Всего наименований %Количество%, на сумму'") + " "
		    + ОбщегоНазначенияБПВызовСервера.ФорматСумм(Итого, ВыборкаДокументов.ВалютаДокумента);
			
		ОбластьМакета.Параметры.ИтоговаяСтрока = СтрЗаменить(ОбластьМакета.Параметры.ИтоговаяСтрока, "%Количество%", КоличествоТоваров);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);

	КонецЦикла;
	
	Если НЕ ОтчетНапечатан Тогда 
		Шаблон = МассивОбъектов[0];
			
		Если Шаблон.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_ОтчетКомитентуОПродажах");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_ОтчетКомитентуОЗакупках");
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шаблон, НСтр("ru = 'Отчет комитенту'"));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шаблон.Организация, Шаблон.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");

		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шаблон.Контрагент, Шаблон.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");

		ОбластьМакета = Макет.ПолучитьОбласть("Комитент");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеКонтрагента;
		ОбластьМакета.Параметры.Поставщик               = ВыборкаДокументов.Контрагент;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Организация");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель              = ВыборкаДокументов.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			ТабличныйДокумент.ВысотаТаблицы + 1, ОбъектыПечати, Шаблон);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

//  Функция формирует табличиный документ как акт об оказании услуг
// на сумму вознаграждения
//
Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитентуОПродажах_АктОбУслугах";

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
	|	СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|ГДЕ
	|	ОтчетКомитентуОПродажахТовары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомитентуОПродажахТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка,
	|	ОтчетКомитентуОПродажах.Номер,
	|	ОтчетКомитентуОПродажах.Дата,
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	ОтчетКомитентуОПродажах.Контрагент КАК Получатель,
	|	ОтчетКомитентуОПродажах.Организация КАК Поставщик,
	|	ОтчетКомитентуОПродажах.Организация,
	|	ОтчетКомитентуОПродажах.СуммаДокумента,
	|	ОтчетКомитентуОПродажах.ВалютаДокумента,
	|	ОтчетКомитентуОПродажах.СтавкаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК Сумма,
	|	ОтчетКомитентуОПродажах.УслугаПоВознаграждению КАК Номенклатура,
	|	ОтчетКомитентуОПродажах.УслугаПоВознаграждению.НаименованиеПолное КАК Товар,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетКомитентуОПродажах.УслугаПоВознаграждению.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ОтчетКомитентуОПродажах.УслугаПоВознаграждению.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул,
	|	ОтчетКомитентуОПродажах.СуммаВключаетНДС,
	|	ЕСТЬNULL(ВТ_Товары.СуммаНДСВознаграждения, 0) КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.УслугаПоВознаграждению.ПериодичностьУслуги КАК ПериодичностьУслуги
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ВТ_Товары.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомитентуОПродажах.Дата,
	|	ОтчетКомитентуОПродажах.Ссылка";

	Шапка = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ИтогоНДС = Шапка.СуммаНДСВознаграждения;
		СуммаКПрописи =	Шапка.Сумма;

		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_АктОбУслугах");

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");

		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
		ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");

		ДанныеПечатиШапка = Новый Структура;
		ДанныеПечатиШапка.Вставить("ПредставлениеПоставщика", ПредставлениеОрганизации);
		ДанныеПечатиШапка.Вставить("ПредставлениеПолучателя", ПредставлениеКонтрагента);

		ДанныеПечатиШапка.Вставить("ТекстЗаголовка", ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Акт об оказании услуг'")));

		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиШапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтроки = ?(ВыводитьКоды, "ТаблицаСКодом", "ТаблицаБезКода");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПериодичностьУслуг") Тогда
			ДанныеПечатиНоменклатуры = Новый Структура;
			ДанныеПечатиНоменклатуры.Вставить("Товар", РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
				Шапка.Товар, Шапка.ПериодичностьУслуги, Шапка.Дата));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиНоменклатуры);
		КонецЕсли;
		ДанныеПечатиКолонкаКодов = Новый Структура;
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ДанныеПечатиКолонкаКодов.Вставить("ИмяКодАртикул", "Артикул");
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ДанныеПечатиКолонкаКодов.Вставить("ИмяКодАртикул", "Код");
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиКолонкаКодов);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Заполнить(Новый Структура("Всего", ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи)));
		ТабличныйДокумент.Вывести(ОбластьМакета);


		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		Если ИтогоНДС <> 0 Тогда
			ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогоНДС);
			НДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'"));
		Иначе
			ВсегоНДС = НСтр("ru='-'");
			НДС      = НСтр("ru = 'Без налога (НДС)'");
		КонецЕсли;
		ДанныеПечатиИтогоНДС = Новый Структура;
		ДанныеПечатиИтогоНДС.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечатиИтогоНДС.Вставить("НДС", НДС);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтогоНДС);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ТекстИтоговаяСтрока = НСтр("ru = 'Сумма комиссионного вознаграждения составила %1'");
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИтоговаяСтрока,
			ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента));
		СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ДанныеПечатиСуммаПрописью = Новый Структура;
		ДанныеПечатиСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ДанныеПечатиСуммаПрописью.Вставить("СуммаПрописью", СуммаПрописью);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_Вознаграждание",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_Вознаграждание",                             НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДанныеОбрабатываемогоДокумента.СтавкаНДСВознаграждения,
	|	ДанныеОбрабатываемогоДокумента.УслугаПоВознаграждению
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	СУММА(РублевыеСуммыДокументовВВалюте.Всего) КАК Всего,
	|	СУММА(РублевыеСуммыДокументовВВалюте.НДС) КАК НДС,
	|	СУММА(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС) КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	РублевыеСуммыДокументовВВалюте.Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	ВТ_ТаблицаПоШапкеДокумента.УслугаПоВознаграждению КАК Товар,
	|	ВТ_ТаблицаПоШапкеДокумента.УслугаПоВознаграждению.Наименование КАК ТоварНаименование,
	|	СУММА(ОтчетКомитентуОПродажахТовары.СуммаВознаграждения) КАК ВсегоВал,
	|	СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения) КАК НДСВал,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТ_Вознаграждение
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО ОтчетКомитентуОПродажахТовары.Ссылка = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомитентуОПродажахТовары.Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.УслугаПоВознаграждению,
	|	ВТ_ТаблицаПоШапкеДокумента.УслугаПоВознаграждению.Наименование,
	|	ВТ_ТаблицаПоШапкеДокумента.СтавкаНДСВознаграждения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Вознаграждение.Ссылка КАК Ссылка,
	|	ВТ_Вознаграждение.НомерСтроки,
	|	ВТ_Вознаграждение.Товар,
	|	ВТ_Вознаграждение.ТоварНаименование,
	|	ВТ_Вознаграждение.ВсегоВал КАК ВсегоВал,
	|	ВТ_Вознаграждение.НДСВал КАК НДСВал,
	|	ВТ_Вознаграждение.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	ВТ_Вознаграждение КАК ВТ_Вознаграждение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ВТ_Вознаграждение.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ВТ_Вознаграждение.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	ВТ_Вознаграждение.ВсегоВал <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Вознаграждение.Ссылка,
	|	ВТ_Вознаграждение.НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Вознаграждение";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли