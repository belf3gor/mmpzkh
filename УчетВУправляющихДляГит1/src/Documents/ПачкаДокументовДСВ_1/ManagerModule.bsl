#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПачкаДокументовДСВ_1;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт 
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьПОПД = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	
	СтруктураПроверяемыхДанных = ПерсонифицированныйУчет.ДокументыСЗВПолучитьСтруктуруПроверяемыхДанных();
	СтруктураПроверяемыхДанных.Вставить("АдресДляИнформирования");
	
	Возврат СтруктураПроверяемыхДанных;
	
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат ПерсонифицированныйУчет.ПолучитьПредставленияПроверяемыхРеквизитов();
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовФормеОбъекта();
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресДляИнформирования", "");
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	
	СоответствиеРеквизитовПутиВФормеОбъекта = ПерсонифицированныйУчет.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресДляИнформирования", "");
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
	
КонецФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции

#Область ДляОбеспеченияФормированияВыходногоФайла

// Формирует запрос по шапке документа.
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.ПачкаДокументовДСВ_1";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = Ссылка;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.Дата,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.Номер,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.Ссылка,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.Организация,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.Наименование,
	|	СведенияОбОрганизациях.НаименованиеПолное КАК НаименованиеПолное,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.НаименованиеПФР КАК НаименованиеТерриториальногоОрганаПФР,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.НомерПачки,
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.ИмяФайлаДляПФР
	|ИЗ
	|	Документ.ПачкаДокументовДСВ_1 КАК ЗаявлениеОДобровольныхСтраховыхВзносах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО ЗаявлениеОДобровольныхСтраховыхВзносах.Организация = СведенияОбОрганизациях.Организация
	|			И ЗаявлениеОДобровольныхСтраховыхВзносах.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|ГДЕ
	|	ЗаявлениеОДобровольныхСтраховыхВзносах.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Выбирает данные, необходимые для заполнения утвержденных форм как из спр-ка
//  физлиц, так и из соотв. регистров сведений.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса к данным работников документа.
//
Функция СформироватьЗапросПоСотрудникам(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявления.Ссылка КАК Ссылка,
	|	Заявления.НомерСтроки КАК НомерСтроки,
	|	Заявления.Сотрудник КАК ФизЛицо,
	|	Заявления.АдресДляИнформирования КАК АдресДляИнформирования,
	|	Заявления.Фамилия КАК Фамилия,
	|	Заявления.Имя КАК Имя,
	|	Заявления.Отчество КАК Отчество,
	|	Заявления.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	Заявления.ДатаЗаполнения
	|ИЗ
	|	Документ.ПачкаДокументовДСВ_1.Сотрудники КАК Заявления
	|ГДЕ
	|	Заявления.Ссылка = &ДокументСсылка";
	Запрос.Выполнить();
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует файл, который можно будет записать на дискетку.
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПОСотрудникам)
	
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР70XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ВыборкаПоШапкеДокумента.Следующий();
	
	СписокОбработанныхЗаявлений = Новый Соответствие;
	
	ТекстФайла = "";
	НомерДокументаВПачке = 0;
	
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	КоличествоДокументов 	= ВыборкаПоСотрудникам.Количество();
	
	// Список стран
	СписокСтран = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Наименование,
	|	СтраныМира.Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтран.Вставить(СокрЛП(Выборка.Наименование), Строка(Выборка.Код));
	КонецЦикла;
	
	НомерДокументаВПачке = 1;
	// Загружаем формат файла сведений.
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	УзелПФР = ПерсонифицированныйУчет.УзелФайлаПФР(ДеревоВыгрузки);
	
	ПерсонифицированныйУчет.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР);
	
	// Добавляем реквизит ПачкаВходящихДокументов.
	УзелПачкаВходящихДокументов = ПерсонифицированныйУчет.ЗаполнитьНаборЗаписейВходящаяОпись(УзелПФР, ДеревоФормата, "ЗАЯВЛЕНИЕ_О_ДОБРОВОЛЬНОМ_ВСТУПЛЕНИИ_В_ПРАВООТНОШЕНИЯ_В_ЦЕЛЯХ_УПЛАТЫ_ДСВ", ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке);
	
	Сокращение = "";
	
	ФорматЗаявлениеДСВ = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ЗАЯВЛЕНИЕ_О_ДОБРОВОЛЬНОМ_ВСТУПЛЕНИИ_В_ПРАВООТНОШЕНИЯ_В_ЦЕЛЯХ_УПЛАТЫ_ДСВ");
	
	ФорматИностранныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 3);
	ФорматНеструктурированныйАдрес = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "АдресОбщий", 2);
	
	Пока ВыборкаПоСотрудникам.Следующий() Цикл
		
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		НаборЗаписейЗаявлениеДСВ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗаявлениеДСВ);
		
		НаборЗаписейЗаявлениеДСВ.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейЗаявлениеДСВ.СтраховойНомер.Значение = ВыборкаПоСотрудникам.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейЗаявлениеДСВ.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(СокрЛП(ВыборкаПоСотрудникам.Фамилия));
		НаборЗаписейФИО.Имя = ВРег(СокрЛП(ВыборкаПоСотрудникам.Имя));
		НаборЗаписейФИО.Отчество = ВРег(СокрЛП(ВыборкаПоСотрудникам.Отчество));
		
		НаборЗаписейАдресМестаЖительства = НаборЗаписейЗаявлениеДСВ.АдресМестаЖительства.Значение;
		ПерсонифицированныйУчет.ЗаполнитьАдрес(НаборЗаписейАдресМестаЖительства, ВыборкаПоСотрудникам.АдресДляИнформирования, 
				СписокСтран,ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, Ложь);
		
		НаборЗаписейЗаявлениеДСВ.АдресМестаЖительства.Значение = НаборЗаписейАдресМестаЖительства;
		
		НаборЗаписейЗаявлениеДСВ.НаименованиеТерриториальногоОрганаПФР.Значение = ВРег(СокрЛП(ВыборкаПоШапкеДокумента.НаименованиеТерриториальногоОрганаПФР));
		НаборЗаписейЗаявлениеДСВ.ДатаЗаполнения.Значение = ВыборкаПоСотрудникам.ДатаЗаполнения;
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.ДатаРегистрацииДокумента, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.НомерПоЖурналу, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.СтраховойНомер, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.Удостоверитель, "Значение");
		
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.СотрудникПодразделения.Значение.КодПодразделения, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейЗаявлениеДСВ.СотрудникПодразделения.Значение.ТабельныйНомер, "Значение");
		ПерсонифицированныйУчет.УстановитьВыводВФайлГруппыЭлементов(НаборЗаписейЗаявлениеДСВ.СотрудникПодразделения);
		
		ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ЗАЯВЛЕНИЕ_О_ДОБРОВОЛЬНОМ_ВСТУПЛЕНИИ_В_ПРАВООТНОШЕНИЯ_В_ЦЕЛЯХ_УПЛАТЫ_ДСВ",""), НаборЗаписейЗаявлениеДСВ);
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML.
	ТекстФайла = ПерсонифицированныйУчет.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки,  "Окружение=""В составе файла"" Стадия=""До обработки"" ДобровольныеПравоотношения=""ДСВ""");
	
	Возврат ТекстФайла;
	
КонецФункции

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Объект.Ссылка).Выбрать();
	ВыборкаПОСотрудникам = СформироватьЗапросПоСотрудникам(Объект.Ссылка).Выбрать();
	ТекстФайла = СформироватьВыходнойФайл(ВыборкаПоШапкеДокумента, ВыборкаПОСотрудникам);
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР, ТекстФайла);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли