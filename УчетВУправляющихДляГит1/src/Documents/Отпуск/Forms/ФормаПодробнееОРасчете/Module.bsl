
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.АдресПараметровВХранилище) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// "Распаковываем" параметры
	ПараметрыРасчета = ПолучитьИзВременногоХранилища(Параметры.АдресПараметровВХранилище);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыРасчета, , "Объект");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыРасчета.Объект);
	ЗаполнитьЗначенияСвойств(Объект,
								ПараметрыРасчета.Объект,
								,
								"Начисления,ОтработанноеВремяДляСреднегоОбщий,СреднийЗаработокОбщий");
	
	Объект.ОтработанноеВремяДляСреднегоОбщий.Загрузить(ПараметрыРасчета.ОтработанноеВремяДляСреднегоОбщий);
	Объект.СреднийЗаработокОбщий.Загрузить(ПараметрыРасчета.СреднийЗаработокОбщий);
	Объект.Начисления.Загрузить(ПараметрыРасчета.Начисления);
	
	ТаблицаНачислений = ПараметрыРасчета.СреднийЗаработокОбщий;
	ТаблицаВремени    = ПараметрыРасчета.ОтработанноеВремяДляСреднегоОбщий;
	
	// Заполним дату приема на работу для ограничения ввода данных о среднем заработке.
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, "ДатаПриема");
	Если КадровыеДанные.Количество()>0 Тогда
		ДатаПриемаНаРаботуСотрудника = КадровыеДанные[0].ДатаПриема;
	Иначе
		Отказ = Истина;
	КонецЕсли; 
	
	Если Отказ Тогда
		// Проблемы с датой приема на работу.
		Возврат;
	КонецЕсли;
	
	// Инициализируем соответствие по умолчанию.
	МесяцыРасчета = Новый ФиксированноеСоответствие(Новый Соответствие);
	
	// Заполняем период расчета среднего заработка.
	ЗаполнитьПериодРасчетаПоУмолчанию();
	// Заполним соответствие месяца и номера его колонки.
	ЗаполнитьМесяцыРасчета(ЭтаФорма);
	
	УстановитьЗаголовокФормы();
	
	УстановитьОтображениеЭлементовУправления(ТаблицаВремени);
	
	ЗаполнитьФорму(ТаблицаНачислений, ТаблицаВремени);
	
	УстановитьРасширеннуюПодсказку();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдентификаторВладельца = ВладелецФормы.УникальныйИдентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ВопросСохранитьИзменения();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	
	Если НЕ Модифицированность ИЛИ ТолькоПросмотр Тогда
		Закрыть();
	Иначе
		ПодготовитьФормуКПринятиюИзменений();
		Закрыть(АдресВХранилище);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьДанныеУчета(Команда)
	
	Если Объект.СреднийЗаработок <> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением введенные данные будут очищены.
			|Продолжить?'");
			
		ОписаниеОповещения = Новый ОписаниеОповещения("ПеречитатьДанныеУчетаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		ПеречитатьДанныеУчетаЗавершение(КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаЗаработка

&НаКлиенте
Процедура ТаблицаЗаработкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтрокаТаблицы = Элементы.ТаблицаЗаработка.ТекущиеДанные;
	СтрокаТаблицы.КалендарныхДней = Мин(СтрокаТаблицы.КалендарныхДней , СтрокаТаблицы.МаксимумДней);
	Если СтрокаТаблицы.КалендарныхДней = 0 Тогда
		СтрокаТаблицы.УчтеноДней = 0;
	КонецЕсли;
	
	Пересчитать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетСреднегоЗаработка

&НаКлиенте
Процедура ПеречитатьДанныеУчетаЗавершение(Знач Результат, Знач Параметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеречитатьДанныеУчетаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДанныеУчетаНаСервере()
	
	ПрочитатьДанныеУчетаСреднегоЗаработка();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму(ДанныеОНачислениях, ДанныеОВремени)
	
	НомерПервогоМесяца = 1 + ДобавляемыеМесяцы;
	
	Для НомерМесяца = НомерПервогоМесяца По МесяцыРасчета.Количество() Цикл
		ИндексМесяца = НомерМесяца-1;
		ТаблицаЗаработка[ИндексМесяца].ОсновныеНачисления = 0;
		ТаблицаЗаработка[ИндексМесяца].КалендарныхДней    = 0;
		ТаблицаЗаработка[ИндексМесяца].УчтеноДней         = 0;
	КонецЦикла;
	
	ЗаполнитьНачисления(ДанныеОНачислениях);
	ЗаполнитьВремя(ДанныеОВремени);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачисления(ДанныеОНачислениях)

	Для Каждого СтрокаНачислений Из ДанныеОНачислениях Цикл
		
		ИндексМесяца = МесяцыРасчета.Найти(НачалоМесяца(СтрокаНачислений.Период));
		Если ИндексМесяца <> Неопределено Тогда
			
			НомерМесяца = ИндексМесяца + ДобавляемыеМесяцы;
			
			ТаблицаЗаработка[НомерМесяца].ОсновныеНачисления = 
				ТаблицаЗаработка[НомерМесяца].ОсновныеНачисления 
				+ СтрокаНачислений.Сумма;
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьВремя(ДанныеВремени)
	
	ПоследнийИзвестныйПериод = Неопределено;
	Для Каждого СтрокаДанныхВремени Из ДанныеВремени Цикл
		
		ИндексМесяца = МесяцыРасчета.Найти(НачалоМесяца(СтрокаДанныхВремени.Период));
		Если ИндексМесяца <> Неопределено Тогда
			
			НомерМесяца = ИндексМесяца + ДобавляемыеМесяцы;
			ТаблицаЗаработка[НомерМесяца].КалендарныхДней = СтрокаДанныхВремени.ОтработаноДнейКалендарных;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеУчетаСреднегоЗаработка()
	
	ДанныеДляРасчета =
		РасчетЗарплатыДляНебольшихОрганизаций.ДанныеДляРасчетаОбщегоСреднегоЗаработкаСотрудника(Сотрудник,
																								Организация,
																								НачалоПериодаРасчета,
																								ОкончаниеПериодаРасчета);
	
	ТаблицаЗаработка.Очистить();
	УстановитьОтображениеЭлементовУправления(ДанныеДляРасчета.ДанныеОВремени);
	ЗаполнитьФорму(ДанныеДляРасчета.ДанныеОНачислениях, ДанныеДляРасчета.ДанныеОВремени);
	УстановитьРасширеннуюПодсказку();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьМесяцыРасчета(Форма)
	
	МесяцыРасчета = Новый Массив;
	МесяцОбхода = НачалоМесяца(Форма.НачалоПериодаРасчета);
	Пока МесяцОбхода <= Форма.ОкончаниеПериодаРасчета Цикл
		МесяцыРасчета.Добавить(МесяцОбхода);
		МесяцОбхода = ДобавитьМесяц(МесяцОбхода, 1);
	КонецЦикла;
	Форма.МесяцыРасчета = Новый ФиксированныйМассив(МесяцыРасчета);
	Форма.ДобавляемыеМесяцы = 12 - МесяцыРасчета.Количество();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеЭлементовУправления(ДанныеОВремени)
	
	СчетчикМесяцев = 1;
	
	Если ДобавляемыеМесяцы <> 0 Тогда
		
		Если МесяцыРасчета.Количество() = 0 Тогда
			Месяц = ДобавитьМесяц(НачалоМесяца(НачалоПериодаРасчета), -12);
		Иначе
			Месяц = ДобавитьМесяц(НачалоМесяца(МесяцыРасчета[0]), -ДобавляемыеМесяцы);
		КонецЕсли;
		
		Для СчетчикМесяцев = 1 По ДобавляемыеМесяцы Цикл
			НоваяСтрока = ТаблицаЗаработка.Добавить();
			НоваяСтрока.Номер  = СчетчикМесяцев;
			НоваяСтрока.Месяц  = Формат(Месяц, "ДФ='ММММ'");
			НоваяСтрока.Год    = Формат(Месяц, "ДФ='гггг'");
			НоваяСтрока.Пустой = Истина;
			
			Месяц = ДобавитьМесяц(НачалоМесяца(Месяц), 1);
			НоваяСтрока.МаксимумДней = ЗарплатаКадрыКлиентСервер.КоличествоДнейМесяца(Месяц);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого Месяц Из МесяцыРасчета Цикл
		
		НоваяСтрока = ТаблицаЗаработка.Добавить();
		НоваяСтрока.Номер = СчетчикМесяцев;
		НоваяСтрока.Месяц = Формат(Месяц, "ДФ='ММММ'");
		НоваяСтрока.Год   = Формат(Месяц, "ДФ='гггг'");
		
		Если ДанныеОВремени.Найти(Месяц, "Период") <> Неопределено  Тогда
			НоваяСтрока.КалендарныхДней = ЗарплатаКадрыКлиентСервер.КоличествоДнейМесяца(Месяц);
		КонецЕсли;
		НоваяСтрока.МаксимумДней = ЗарплатаКадрыКлиентСервер.КоличествоДнейМесяца(Месяц);
		
		СчетчикМесяцев = СчетчикМесяцев + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Заголовок = СтрШаблон(НСтр("ru='Расчет отпуска (%1)%2'"),
							Сотрудник,
							?(ТолькоПросмотр, НСтр("ru=' (только просмотр)'"), ""));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеСтрокиДанныхОВремени()
	
	// Функция конструирует структуру, описывающую данные о времени 
	// для расчета среднего заработка за один месяц расчетного периода.
	// Поля структуры заполнены пустыми значениями соответствующих типов.
	
	ПоляОписания = Новый Соответствие;
	ПоляОписания.Вставить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПоляОписания.Вставить("Период", Новый ОписаниеТипов("Дата"));
	ПоляОписания.Вставить("ОтработаноДнейКалендарных", Новый ОписаниеТипов("Число"));
	
	Описание = Новый Структура;
	Для Каждого КлючИЗначение Из ПоляОписания Цикл
		Описание.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.ПривестиЗначение());
	КонецЦикла;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПериодРасчетаПоУмолчанию()
	
	НачалоПериода = ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), -12);
	ОкончаниеПериода = НачалоМесяца(ДатаНачалаСобытия) - 1;
	
	ПериодРасчета = Новый СтандартныйПериод;
	ПериодРасчета.ДатаНачала = Макс(НачалоПериода, НачалоМесяца(ДатаПриемаНаРаботуСотрудника));
	ПериодРасчета.ДатаОкончания = ОкончаниеПериода;

	НачалоПериодаРасчета = ПериодРасчета.ДатаНачала;
	ОкончаниеПериодаРасчета = ПериодРасчета.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСреднийЗаработок()
	
	ДанныеНачислений = РезультатРедактированияНачислений(ЭтаФорма);
	ДанныеВремени = РезультатРедактированияВремени(ЭтаФорма);
	
	ТаблицыПоСотруднику = Новый Структура;
	ТаблицыПоСотруднику.Вставить("ДанныеОНачислениях", ДанныеНачислений);
	ТаблицыПоСотруднику.Вставить("ДанныеОВремени", ДанныеВремени);
	
	ПараметрыПолученияДанныхСреднего = РасчетЗарплатыДляНебольшихОрганизаций.ПараметрыПолученияДанныхСреднегоОбщего();
	ПараметрыПолученияДанныхСреднего.Вставить("ТаблицыПоСотруднику", 	ТаблицыПоСотруднику);
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаПериода",  	НачалоПериодаРасчета); 
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаОкончанияПериода",	ОкончаниеПериодаРасчета); 
	ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаСобытия", 		ДатаНачалаСобытия);		
	
	ДанныеРасчетаСреднегоЗаработка =
		РасчетЗарплатыДляНебольшихОрганизаций.ДанныеРасчетаСреднегоЗаработкаОбщего(ПараметрыПолученияДанныхСреднего);

	Объект.СреднийЗаработок = ДанныеРасчетаСреднегоЗаработка.Итоги.СреднедневнойЗаработок;
	
	УстановитьРасширеннуюПодсказку();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РезультатРедактированияНачислений(Форма)
	
	Сотрудник = Форма.Сотрудник;
	
	ДанныеНачислений = Новый Массив;
	
	Для НомерМесяца = 1 По Форма.МесяцыРасчета.Количество() Цикл
		
		СуммаНачислений = Форма.ТаблицаЗаработка[НомерМесяца + Форма.ДобавляемыеМесяцы-1].ОсновныеНачисления;
			
		Если СуммаНачислений = 0 Тогда
			Продолжить
		КонецЕсли; 
		
		ОписаниеСтроки = ОписаниеСтрокиДанныхОНачисленияхОбщегоСреднегоЗаработка();
		ОписаниеСтроки.Сотрудник = Сотрудник;
		ОписаниеСтроки.Период = Форма.МесяцыРасчета[НомерМесяца - 1];
		ОписаниеСтроки.Сумма = СуммаНачислений;
		ДанныеНачислений.Добавить(ОписаниеСтроки);
		
	КонецЦикла;
		
	Возврат ДанныеНачислений;
	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Функция РезультатРедактированияВремени(Форма)

	ДанныеВремени = Новый Массив;
	
	Для НомерМесяца = 1 По Форма.МесяцыРасчета.Количество() Цикл
		
		СуммаНачислений = Форма.ТаблицаЗаработка[НомерМесяца + Форма.ДобавляемыеМесяцы-1].ОсновныеНачисления;
		КалендарныхДней = Форма.ТаблицаЗаработка[НомерМесяца + Форма.ДобавляемыеМесяцы -1].КалендарныхДней;
			
		Если КалендарныхДней = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		ОписаниеСтроки = ОписаниеСтрокиДанныхОВремени();
		ОписаниеСтроки.Сотрудник = Форма.Сотрудник;
		ОписаниеСтроки.Период = Форма.МесяцыРасчета[НомерМесяца - 1];
		ОписаниеСтроки.ОтработаноДнейКалендарных = КалендарныхДней;

		ДанныеВремени.Добавить(ОписаниеСтроки);

	КонецЦикла;
	
	Возврат ДанныеВремени;
	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
// Функция конструирует структуру, описывающую данные о начислениях 
// для расчета среднего заработка за один месяц расчетного периода.
// Поля структуры заполнены пустыми значениями соответствующих типов.
//
Функция ОписаниеСтрокиДанныхОНачисленияхОбщегоСреднегоЗаработка()
	
	ПоляОписания = Новый Соответствие;
	ПоляОписания.Вставить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПоляОписания.Вставить("Период", Новый ОписаниеТипов("Дата"));
	ПоляОписания.Вставить("Сумма", Новый ОписаниеТипов("Число"));
	
	Описание = Новый Структура;
	Для Каждого КлючИЗначение Из ПоляОписания Цикл
		Описание.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение.ПривестиЗначение());
	КонецЦикла;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Процедура УстановитьРасширеннуюПодсказку()
	
	КалендарныхДней = 0;
	СуммаЗаработка = 0;
	МассивРасшифровкиМесяцев = Новый Массив;
	МаксимальнаяДлинаРасшифровкиМесяца = 0;	
	МаксимальнаяДлинаРасшифровкиДней = 0;	
	
	Для НомерМесяца = 1 По МесяцыРасчета.Количество() Цикл
		
		СуммаЗаработка = СуммаЗаработка + ТаблицаЗаработка[НомерМесяца + ДобавляемыеМесяцы-1].ОсновныеНачисления;
		
		КалендарныхДнейМесяца = ТаблицаЗаработка[НомерМесяца + ДобавляемыеМесяцы -1].КалендарныхДней;
			
		Если КалендарныхДнейМесяца <> 0 Тогда
			
			Месяц = МесяцыРасчета[НомерМесяца - 1];
			УчтеноДней =
				РасчетЗарплатыДляНебольшихОрганизаций.КоличествоУчтенныхДнейОтпуска(ДатаНачалаСобытия,
																					Месяц,
																					КалендарныхДнейМесяца);
			КалендарныхДней = КалендарныхДней + УчтеноДней;
			
			РасшифровкаМесяца = Новый Структура("Месяц,Дни", Формат(Месяц, "ДФ='ММММ гггг'"), Формат(УчтеноДней, "ЧДЦ=2"));
			МассивРасшифровкиМесяцев.Добавить(РасшифровкаМесяца);
			
			ДлинаМесяца = СтрДлина(РасшифровкаМесяца.Месяц);
			Если МаксимальнаяДлинаРасшифровкиМесяца < ДлинаМесяца Тогда
				МаксимальнаяДлинаРасшифровкиМесяца = ДлинаМесяца;
			КонецЕсли; 
						
			ДлинаДней = СтрДлина(РасшифровкаМесяца.Дни);
			Если МаксимальнаяДлинаРасшифровкиДней < ДлинаДней Тогда
				МаксимальнаяДлинаРасшифровкиДней = ДлинаДней;
			КонецЕсли;
			
			ТаблицаЗаработка[НомерМесяца + ДобавляемыеМесяцы -1].УчтеноДней = УчтеноДней;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Если СуммаЗаработка = 0 ИЛИ КалендарныхДней = 0 Тогда
		ТекстРасшифровкиСреднедневной = НСтр("ru='Нет данных для расчета среднего заработка'");
	Иначе
		
		МасивСтрок = Новый Массив;
		МасивСтрок.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Средний заработок: %1 / %2 = '"),
			Формат(СуммаЗаработка, "ЧДЦ=2"),
			Формат(КалендарныхДней, "ЧДЦ=2")));
		МасивСтрок.Добавить(Новый ФорматированнаяСтрока(
							Формат(?(КалендарныхДней = 0,0, СуммаЗаработка/ КалендарныхДней), "ЧДЦ=2; ЧН=0,00"),
							Новый Шрифт(,, Истина)));
			
		ТекстРасшифровкиСреднедневной = Новый ФорматированнаяСтрока(МасивСтрок);
		
	КонецЕсли;
	
	ОсновныеНачисленияВсего = СуммаЗаработка;
	УчтеноДнейВсего         = КалендарныхДней;
	
	Элементы.СреднийЗаработокДекорация.Заголовок = ТекстРасшифровкиСреднедневной;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаЗаработкаКалендарныхДней");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаЗаработкаОсновныеНачисления");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаЗаработка.Пустой", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетОтпускных

&НаСервере
Процедура Пересчитать()
	
	РассчитатьСреднийЗаработок();
	Документы.Отпуск.РассчитатьНачисления(Объект, ДополнительныеПараметрыРасчета());
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуКПринятиюИзменений()
	
	СохранитьДанныеРасчетаСреднего();
	
	АдресВХранилище = Документы.Отпуск.АдресПараметровВХранилище(Объект, ДополнительныеПараметрыРасчета());
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ДополнительныеПараметрыРасчета()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Подразделение",           Подразделение);
	ДополнительныеПараметры.Вставить("НачислениеОтпуск",        НачислениеОтпуск);
	ДополнительныеПараметры.Вставить("УникальныйИдентификатор", ИдентификаторВладельца);
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

&НаСервере
Процедура СохранитьДанныеРасчетаСреднего()
	
	Объект.ОтработанноеВремяДляСреднегоОбщий.Очистить();
	ДанныеОВремени = РезультатРедактированияВремени(ЭтаФорма);
	Если ЗначениеЗаполнено(ДанныеОВремени) Тогда
		Для каждого СведенияОВремени Из ДанныеОВремени Цикл
			ЗаполнитьЗначенияСвойств(Объект.ОтработанноеВремяДляСреднегоОбщий.Добавить(), СведенияОВремени);
		КонецЦикла;
	КонецЕсли; 
	
	Объект.СреднийЗаработокОбщий.Очистить();
	ДанныеОНачислениях = РезультатРедактированияНачислений(ЭтаФорма);
	Если ЗначениеЗаполнено(ДанныеОНачислениях) Тогда
		Для каждого СведенияОНачислениях Из ДанныеОНачислениях Цикл
			ЗаполнитьЗначенияСвойств(Объект.СреднийЗаработокОбщий.Добавить(), СведенияОНачислениях);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВопросСохранитьИзменения()
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПодготовитьФормуКПринятиюИзменений();
		Закрыть(АдресВХранилище);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
