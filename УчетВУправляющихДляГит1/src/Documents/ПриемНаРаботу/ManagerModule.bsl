
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке();
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок) Экспорт
	ДанныеДляРегистрацииВУчете = Новый Соответствие;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемНаРаботу.Ссылка,
	|	ПриемНаРаботу.Сотрудник,
	|	ПриемНаРаботу.ДатаПриема КАК ДатаНачала,
	|	ПриемНаРаботу.Подразделение,
	|	ПриемНаРаботу.Организация КАК Организация,
	|	ПриемНаРаботу.Должность,
	|	ПриемНаРаботу.ВидЗанятости
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|ГДЕ
	|	ПриемНаРаботу.Ссылка В(&МассивСсылок)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеДляРегистрацииВУчетеПоДокументу = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
		ДанныеДляРегистрацииВУчете.Вставить(Выборка.Ссылка, ДанныеДляРегистрацииВУчетеПоДокументу); 
		
		ОписаниеПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
		ОписаниеПериода.Сотрудник = Выборка.Сотрудник;
		ОписаниеПериода.ДатаНачалаПериода = Выборка.ДатаНачала;
		ОписаниеПериода.Состояние = Перечисления.СостоянияСотрудника.Работа;
		ОписаниеПериода.ВидЗанятости = Выборка.ВидЗанятости;
			
		РегистрируемыйПериод = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрацииВУчетеПоДокументу, ОписаниеПериода);
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Должность", Выборка.Должность);
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Организация", Выборка.Организация);
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "Подразделение", Выборка.Подразделение);
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "ВидСтажаПФР", Перечисления.ВидыСтажаПФР2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии);
	КонецЦикла;	

	Возврат ДанныеДляРегистрацииВУчете;														
КонецФункции

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приказ о приеме
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_Т1";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о приеме (Т-1)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Трудовой договор микропредприятий
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ТрудовойДоговорМикропредприятий";
	КомандаПечати.Представление = НСтр("ru = 'Трудовой договор (микропредприятий)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, СписокСотрудников = Неопределено) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Т1") Тогда
		ПечатьТ1(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТрудовойДоговорМикропредприятий") Тогда
		ПечатьТрудовойДоговорМикропредприятий(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьТ1(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	ДанныеСсылок = Новый ДеревоЗначений;
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъект");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектОрганизацияНаименованиеСокращенное");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектОрганизацияКодПоОКПО");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДата");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектНомерНаПечать");
	ДанныеСсылок.Колонки.Добавить("ЛичныеДанныеФИОФамилияИмяОтчествоВВинительномПадеже");
	ДанныеСсылок.Колонки.Добавить("РаботаСотрудникТабельныйНомерНаПечать");
	ДанныеСсылок.Колонки.Добавить("РаботаПодразделениеНаПечать");
	ДанныеСсылок.Колонки.Добавить("РаботаДатаПриема");
	ДанныеСсылок.Колонки.Добавить("РаботаДолжность");
	ДанныеСсылок.Колонки.Добавить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать");
	ДанныеСсылок.Колонки.Добавить("РаботаУсловияПриема");
	ДанныеСсылок.Колонки.Добавить("РаботаСотрудник");
	ДанныеСсылок.Колонки.Добавить("РаботаТрудовойДоговорДатаОформленияНаПечать");
	ДанныеСсылок.Колонки.Добавить("РаботаТрудовойДоговорНомер");
	ДанныеСсылок.Колонки.Добавить("РаботаДлительностьИспытательногоСрока");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДолжностьРуководителя");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектРуководительРасшифровкаПодписи");
	ДанныеСсылок.Колонки.Добавить("СсылкаНаОбъектДатаОзнакомленияРаботника");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемНаРаботу.Ссылка КАК СсылкаНаОбъект,
		|	ПриемНаРаботу.Организация.НаименованиеСокращенное КАК СсылкаНаОбъектОрганизацияНаименованиеСокращенное,
		|	ПриемНаРаботу.Организация.КодПоОКПО КАК СсылкаНаОбъектОрганизацияКодПоОКПО,
		|	ПриемНаРаботу.Дата КАК СсылкаНаОбъектДата,
		|	ПриемНаРаботу.Номер КАК СсылкаНаОбъектНомер,
		|	ПриемНаРаботу.Сотрудник.Код КАК РаботаСотрудникКод,
		|	ПриемНаРаботу.ДатаПриема КАК РаботаДатаПриема,
		|	ПриемНаРаботу.УсловияПриема КАК РаботаУсловияПриема,
		|	ПриемНаРаботу.ДлительностьИспытательногоСрока КАК РаботаДлительностьИспытательногоСрока,
		|	ПриемНаРаботу.Сотрудник КАК РаботаСотрудник,
		|	ПриемНаРаботу.ДолжностьРуководителя КАК СсылкаНаОбъектДолжностьРуководителя,
		|	ПриемНаРаботу.Руководитель КАК СсылкаНаОбъектРуководитель,
		|	ПриемНаРаботу.Дата КАК Дата,
		|	ПриемНаРаботу.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
		|ГДЕ
		|	ПриемНаРаботу.Проведен
		|	И ПриемНаРаботу.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТДанныеДокументов", "РаботаСотрудник,РаботаДатаПриема");
	
	ОписательВременныхТаблиц.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковДляТ1Т8";
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
		ОписательВременныхТаблиц,
		Истина,
		"ФИОПолные,Пол,Подразделение,Должность");
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("СсылкаНаОбъектРуководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокументов.СсылкаНаОбъект КАК СсылкаНаОбъект,
		|	ДанныеДокументов.СсылкаНаОбъектОрганизацияНаименованиеСокращенное КАК СсылкаНаОбъектОрганизацияНаименованиеСокращенное,
		|	ДанныеДокументов.СсылкаНаОбъектОрганизацияКодПоОКПО КАК СсылкаНаОбъектОрганизацияКодПоОКПО,
		|	ДанныеДокументов.СсылкаНаОбъектДата КАК СсылкаНаОбъектДата,
		|	ДанныеДокументов.СсылкаНаОбъектНомер КАК СсылкаНаОбъектНомер,
		|	КадровыеДанныеСотрудников.ФИОПолные КАК ЛичныеДанныеФИОПолные,
		|	КадровыеДанныеСотрудников.Пол КАК ЛичныеДанныеПол,
		|	ДанныеДокументов.РаботаСотрудникКод КАК РаботаСотрудникКод,
		|	КадровыеДанныеСотрудников.Подразделение КАК РаботаПодразделение,
		|	ДанныеДокументов.РаботаДатаПриема КАК РаботаДатаПриема,
		|	КадровыеДанныеСотрудников.Должность КАК РаботаДолжность,
		|	ДанныеДокументов.РаботаУсловияПриема КАК РаботаУсловияПриема,
		|	ДанныеДокументов.РаботаСотрудник КАК РаботаСотрудник,
		|	ДанныеДокументов.РаботаДлительностьИспытательногоСрока КАК РаботаДлительностьИспытательногоСрока,
		|	ДанныеДокументов.СсылкаНаОбъектДолжностьРуководителя КАК СсылкаНаОбъектДолжностьРуководителя,
		|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК СсылкаНаОбъектРуководительРасшифровкаПодписи
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудниковДляТ1Т8 КАК КадровыеДанныеСотрудников
		|		ПО ДанныеДокументов.РаботаСотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И ДанныеДокументов.РаботаДатаПриема = КадровыеДанныеСотрудников.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
		|		ПО ДанныеДокументов.СсылкаНаОбъектРуководитель = ФИООтветственныхЛиц.ФизическоеЛицо
		|			И ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СсылкаНаОбъект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("СсылкаНаОбъект") Цикл
		
		СтрокаСсылки = ДанныеСсылок.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСсылки, Выборка);
		
		СтрокаСсылки.СсылкаНаОбъектНомерНаПечать = ЗарплатаКадрыОтчеты.НомерНаПечать(Выборка.СсылкаНаОбъектНомер);
		
		СтрокаСсылки.ЛичныеДанныеФИОФамилияИмяОтчествоВВинительномПадеже =
			ЗарплатаКадрыОтчеты.ПросклоненныеФИО(Выборка.ЛичныеДанныеФИОПолные, 4, Выборка.ЛичныеДанныеПол);
		
		СтрокаСсылки.РаботаСотрудникТабельныйНомерНаПечать = ЗарплатаКадрыОтчеты.ТабельныйНомерНаПечать(Выборка.РаботаСотрудникКод);
		СтрокаСсылки.РаботаПодразделениеНаПечать = ЗарплатаКадрыОтчеты.ПодразделениеНаПечать(Выборка.РаботаПодразделение);
		
		СтрокаСсылки.РаботаТрудовойДоговорДатаОформленияНаПечать = ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью('00010101');
		СтрокаСсылки.РаботаТрудовойДоговорНомер = "_____";
		
		СтрокаСсылки.СсылкаНаОбъектДатаОзнакомленияРаботника = ЗарплатаКадрыОтчеты.ФорматДатыЧислоВКавычкахМесяцПрописью(СтрокаСсылки.СсылкаНаОбъектДата);
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаСотрудника = СтрокаСсылки.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСотрудника, СтрокаСсылки);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	КадровыйУчет.ВывестиНаПечатьТ1(ДокументРезультат, ДанныеСсылок.Строки, УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_Т1"), , ОбъектыПечати);
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ПФ_MXL_Т1",
		НСтр("ru = 'Приказ о приеме (Т-1)'"),
		ДокументРезультат,,);
		
КонецПроцедуры

Процедура ПечатьТрудовойДоговорМикропредприятий(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ДокументРезультат = РасчетЗарплатыДляНебольшихОрганизаций.ТабличныйДокументТрудовойДоговорМикропредприятий(
		УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТрудовойДоговорМикропредприятий"),
		МассивОбъектов, ОбъектыПечати, ПараметрыВывода);
		
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ПФ_MXL_ТрудовойДоговорМикропредприятий", НСтр("ru='Трудовой договор (микропредприятий)'"),
		ДокументРезультат, , "ОбщийМакет.ПФ_MXL_ТрудовойДоговорМикропредприятий");
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента) Экспорт
	
	ЗарплатаКадры.ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента, "ДатаПриема");
	
КонецПроцедуры

Процедура ЗаполнитьДатыЗапрета(ПараметрыОбновления) Экспорт
	
	ОбновлениеВыполнено = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ПриемНаРаботу.Ссылка КАК Ссылка,
		|	ПриемНаРаботу.Дата КАК Дата
		|ИЗ
		|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
		|ГДЕ
		|	ПриемНаРаботу.ДатаЗапрета = ДАТАВРЕМЯ(1, 1, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриемНаРаботу.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ОбновлениеВыполнено = Ложь;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, Выборка.Ссылка.Метаданные().ПолноеИмя(), "Ссылка", Выборка.Ссылка) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
			
			МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
			МенеджерДокумента.ЗаполнитьДатуЗапретаРедактирования(ОбъектДокумента);
			
			ОбъектДокумента.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектДокумента);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбновлениеВыполнено);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли