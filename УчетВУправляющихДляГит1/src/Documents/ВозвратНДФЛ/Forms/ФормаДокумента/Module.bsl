
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ = Документы.ВозвратНДФЛ.ПустаяСсылка() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.Месяц",
		"Объект.Организация",
		"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			ЗаполнитьСуммыКВозврату();
		КонецЕсли; 
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	УчетНДФЛФормыВнутренний.ДополнитьФормуДокументаВозвратНДФЛ(ЭтаФорма);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ЗаполнитьИдентификаторыСтрок(Объект);
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	УчетНДФЛФормы.ВозвратНДФЛРеквизитыВДанные(ЭтаФорма, ТекущийОбъект, ОписанияТаблицДляРаспределенияРезультата());
	
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьИдентификаторыСтрок(ТекущийОбъект);
	УчетНДФЛФормы.ВозвратНДФЛРеквизитыВДанные(ЭтаФорма, ТекущийОбъект, ОписанияТаблицДляРаспределенияРезультата());
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВозвратНДФЛ", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыРезультатыРасчетаНДФЛ" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ОбновитьДанныеНДФЛНаСервере(Параметр);
	КонецЕсли; 
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбработатьИзменениеОрганизацииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьСуммыКВозврату();
КонецПроцедуры

//////////////////////////////////////
// Редактирование месяца строкой.

&НаКлиенте
Процедура МесяцСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Месяц", "МесяцСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСуммыВозврата

&НаКлиенте
Процедура СуммыВозвратаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "СуммыВозвратаНалог" И Поле.Имя <> "СуммыВозвратаКомандаРедактированияРаспределения" Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СуммыВозврата.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьИдентификаторыСтрок(Объект);
	
	СтандартнаяОбработка = Ложь;
	УчетНДФЛКлиент.ОткрытьФормуПодробнееОРасчетеНДФЛ(
		Объект.Организация, ЭтаФорма, Объект.Месяц, Объект.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммыВозвратаКатегорияДоходаПриИзменении(Элемент)
	
	Текущиеданные = Элементы.СуммыВозврата.ТекущиеДанные;
	Если Текущиеданные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Текущиеданные.СтавкаНалогообложенияРезидента = Неопределено;
	Если ЗначениеЗаполнено(Текущиеданные.КатегорияДохода) Тогда 
		Текущиеданные.СтавкаНалогообложенияРезидента = УчетНДФЛКлиентСервер.СтавкаНалогообложенияКатегорииДоходовПоУмолчанию(Текущиеданные.КатегорияДохода);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьСуммыКВозврату(Команда)
	ЗаполнитьСуммыКВозврату();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ПрочитатьГоловнуюОрганизацию();
	УстановитьФункциональныеОпцииФормы();
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой");
	
	УчетНДФЛФормы.ВозвратНДФЛПриЧтенииНаСервере(ЭтаФорма, ОписаниеТаблицыНДФЛ(), ОписанияТаблицДляРаспределенияРезультата());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()
	
	ОчиститьТаблицыДокумента();
	ПрочитатьГоловнуюОрганизацию();
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьГоловнуюОрганизацию()
	
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Объект.Организация);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммыКВозврату()
	
	ОчиститьТаблицыДокумента();
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		ДанныеОПереплатеПоНДФЛ = УчетНДФЛ.ДанныеОПереплатеПоНДФЛ(Объект.Организация, 
			КонецМесяца(Объект.Месяц), Объект.Сотрудник, Объект.Ссылка);
		ДанныеОПереплатеПоНДФЛ.Сортировать("МесяцНалоговогоПериода Убыв");	
			
		Для Каждого СтрокаПереплатыНДФЛ Из ДанныеОПереплатеПоНДФЛ Цикл
				
			Если СтрокаПереплатыНДФЛ.ПоСтавке13 > 0 Тогда 									
				СтрокаТаблицыНДФЛКВозврату = Объект.СуммыВозврата.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ);
				СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
				СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.ПоСтавке13;
			КонецЕсли;
			
			Если СтрокаПереплатыНДФЛ.ПоСтавке09 > 0 Тогда 									
				СтрокаТаблицыНДФЛКВозврату = Объект.СуммыВозврата.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ);
				СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
				СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.ПоСтавке09;
			КонецЕсли;
			
			Если СтрокаПереплатыНДФЛ.ПоСтавке35 > 0 Тогда 									
				СтрокаТаблицыНДФЛКВозврату = Объект.СуммыВозврата.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ);
				СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
				СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.ПоСтавке35;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РаспределитьПоИсточникамФинансирования();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицыДокумента()
	
	Объект.СуммыВозврата.Очистить();
	Объект.РаспределениеРезультатовУдержаний.Очистить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьИдентификаторыСтрок(ТекущийОбъект) 
	
	ОписаниеТаблицы = ОписаниеТаблицыНДФЛ();
	ИдентификаторСтроки = ОписаниеТаблицы.НомерТаблицы * 1000000 + 1;
	Для Каждого СтрокаКоллекции Из ТекущийОбъект[ОписаниеТаблицы.ИмяТаблицы] Цикл 
		СтрокаКоллекции[ОписаниеТаблицы.ИмяРеквизитаИдентификаторСтроки] = ИдентификаторСтроки;
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СведенияОбНДФЛ(ФизическоеЛицо = Неопределено) Экспорт
	
	НДФЛ = Объект.СуммыВозврата.Выгрузить();
	НДФЛ.Колонки.Добавить("ПримененныйВычетЛичныйКодВычета");
	НДФЛ.Колонки.Добавить("ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета");
	
	ДанныеОбНДФЛ = Новый Структура;
	ДанныеОбНДФЛ.Вставить("НДФЛ", НДФЛ);
	ДанныеОбНДФЛ.Вставить("ПримененныеВычетыНаДетейИИмущественные", Новый Массив);
	ДанныеОбНДФЛ.Вставить("СведенияОДоходах", РегистрыНакопления.СведенияОДоходахНДФЛ.СоздатьНаборЗаписей().Выгрузить());
	ДанныеОбНДФЛ.Вставить("ВычетыКДоходам", Новый Массив);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеОбНДФЛ, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеНДФЛНаСервере(АдресВременногоХранилища)
	
	Параметр = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	СтрокиВозвратаКУдалению = Новый Массив;
	СтрокиНДФЛКУдалению = Новый Массив;
	
	Для Каждого СтрокаВозврата Из Объект.СуммыВозврата Цикл
		Отбор = Новый Структура("ИдентификаторСтрокиНДФЛ", СтрокаВозврата.ИдентификаторСтрокиНДФЛ);
		НайденныеСтроки = Параметр.НДФЛ.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда 
			ЗаполнитьЗначенияСвойств(СтрокаВозврата, НайденныеСтроки[0]);
			СтрокиНДФЛКУдалению.Добавить(НайденныеСтроки[0]);
		Иначе 
			СтрокиВозвратаКУдалению.Добавить(СтрокаВозврата);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаВозврата Из СтрокиВозвратаКУдалению Цикл 
		Объект.СуммыВозврата.Удалить(СтрокаВозврата);
	КонецЦикла;
	
	Для Каждого СтрокаНДФЛ Из СтрокиНДФЛКУдалению Цикл 
		Параметр.НДФЛ.Удалить(СтрокаНДФЛ);
	КонецЦикла;	
	
	Для Каждого СтрокаНДФЛ Из Параметр.НДФЛ Цикл 
		НоваяСтрока = Объект.СуммыВозврата.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНДФЛ);
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПоИсточникамФинансирования()
	
	УчетНДФЛФормы.ВозвратНДФЛРаспределитьПоИсточникамФинансирования(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписанияТаблицДляРаспределенияРезультата()

	ОписанияТаблиц = Новый Массив;
	ОписанияТаблиц.Добавить(ОписаниеТаблицыНДФЛ());
	
	Возврат ОписанияТаблиц;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыНДФЛ()
	
	Описание = УчетНДФЛКлиентСервер.ФормаПодробнееОРасчетеНДФЛОписаниеТаблицыНДФЛ();
	Описание.ИмяТаблицы = "СуммыВозврата";
	Описание.ПутьКДанным = "Объект.СуммыВозврата";
	Описание.ИмяРеквизитаИдентификаторСтроки = "ИдентификаторСтрокиНДФЛ";
	Описание.ПутьКДаннымАдресРаспределенияРезультатовВХранилище = "";
	Описание.ИмяПоляДляВставкиПоказателей = "Налог";
	Описание.ИмяПоляДляВставкиРаспределенияРезультатов = "";
	Описание.ИмяПоляРезультат = "Налог";
	Описание.СодержитПолеСотрудник = Ложь;
	Описание.ИмяРеквизитаСотрудник = "Сотрудник";
	Описание.ПроверяемыеРеквизиты = "";
	Описание.ОтменятьВсеИсправления	= Ложь;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Функция НДФЛПодробнееНаСервере(ФизическиеЛица) Экспорт
	
	Если ТипЗнч(ФизическиеЛица) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическиеЛица);
	Иначе
		СписокФизическихЛиц = ФизическиеЛица;
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	НДФЛПодробнее = Новый Массив;
	НДФЛПодробнее.Добавить(ДокументОбъект.Ссылка);
	НДФЛПодробнее.Добавить(УчетНДФЛФормы.РегистрНалоговогоУчетаПоНДФЛ(ДокументОбъект, Модифицированность, СписокФизическихЛиц, Объект.Месяц));
	
	Возврат НДФЛПодробнее;
	
КонецФункции

&НаСервере
Функция ПолучитьКонтролируемыеПоля() Экспорт
	
	Возврат Новый Структура;
	
КонецФункции

#КонецОбласти
