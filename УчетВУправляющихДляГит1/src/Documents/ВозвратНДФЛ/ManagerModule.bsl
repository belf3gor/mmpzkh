#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Сотрудник)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("Сотрудник", "");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьСуммыНалогаПоКатегориямДохода(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВозвратНДФЛСуммыВозврата.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ВозвратНДФЛ.СуммыВозврата КАК ВозвратНДФЛСуммыВозврата
	               |ГДЕ
	               |	ВозвратНДФЛСуммыВозврата.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ВозвратНДФЛ", "Ссылка", Выборка.Ссылка) Тогда 
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьСтавкуИНалогВТаблицеСуммыВозврата(ДокументОбъект);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтавкуИНалогВТаблицеСуммыВозврата(ДокументОбъект)
	
	СуммыВозврата = ДокументОбъект.СуммыВозврата.Выгрузить();
	ДокументОбъект.СуммыВозврата.Очистить();
	СписокСвойств = "НалоговыйПериод,РегистрацияВНалоговомОргане,МесяцНалоговогоПериода,КатегорияДохода";
	Для Каждого СтрокаПереплатыНДФЛ Из СуммыВозврата Цикл 
		Если СтрокаПереплатыНДФЛ.УдалитьПоСтавке13 > 0 Тогда 									
			СтрокаТаблицыНДФЛКВозврату = ДокументОбъект.СуммыВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ, СписокСвойств);
			СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
			СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.УдалитьПоСтавке13;
		КонецЕсли;
		Если СтрокаПереплатыНДФЛ.УдалитьПоСтавке09 > 0 Тогда 									
			СтрокаТаблицыНДФЛКВозврату = ДокументОбъект.СуммыВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ, СписокСвойств);
			СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
			СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.УдалитьПоСтавке09;
		КонецЕсли;
		Если СтрокаПереплатыНДФЛ.УдалитьПоСтавке35 > 0 Тогда 									
			СтрокаТаблицыНДФЛКВозврату = ДокументОбъект.СуммыВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ, СписокСвойств);
			СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
			СтрокаТаблицыНДФЛКВозврату.Налог = СтрокаПереплатыНДФЛ.УдалитьПоСтавке35;
		КонецЕсли;
		Если СтрокаПереплатыНДФЛ.УдалитьПоСтавке13 = 0
			И СтрокаПереплатыНДФЛ.УдалитьПоСтавке09 = 0
			И СтрокаПереплатыНДФЛ.УдалитьПоСтавке35 = 0 Тогда 
			СтрокаТаблицыНДФЛКВозврату = ДокументОбъект.СуммыВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНДФЛКВозврату, СтрокаПереплатыНДФЛ, СписокСвойств);
			СтрокаТаблицыНДФЛКВозврату.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли