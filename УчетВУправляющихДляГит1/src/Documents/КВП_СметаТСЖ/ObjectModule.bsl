#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииОбщегоНазначения

// Функция получает разность между двумя датами.
Функция ПолучитьРазностьДат(ДатаНачала, ДатаКонца)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ЕСТЬNULL(РАЗНОСТЬДАТ(&ДатаНачала, &ДатаКонца, Месяц), 0) КАК Разность");
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",  КонецМесяца(ДатаКонца) + 1);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.Получить(0).Разность;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииПроведенияДокумента

// Процедура выполняет движения по регистрам.
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ)
	
	КоличествоПериодов = ПолучитьРазностьДат(НачалоПериода, КонецПериода);
	
	ДвиженияПоСмете = Движения.КВП_ЗатратыПоСметеТСЖ;
	
	Для Каждого ТекСтрока Из СметаРасходов Цикл
		
		Если ТекСтрока.СуммаДоходаОтИсточника > 0 Тогда
			ТекДата = НачалоПериода;
			ОбщаяСумма = 0;
			Для Счетчик = 1 По КоличествоПериодов Цикл
				НовоеДвижение = ДвиженияПоСмете.Добавить();
				НовоеДвижение.Период = СтруктураШапкиДокумента.Дата;
				НовоеДвижение.Организация   = СтруктураШапкиДокумента.Организация;
				НовоеДвижение.СтатьяЗатрат  = ТекСтрока.СтатьяЗатрат;
				НовоеДвижение.Источник      = ТекСтрока.Источник;
				НовоеДвижение.НачалоПериода = ТекДата;
				ОбщаяСумма = ОбщаяСумма + Окр(ТекСтрока.СуммаДоходаОтИсточника / КоличествоПериодов, 2, 0);
				Если Счетчик = КоличествоПериодов Тогда
					НовоеДвижение.Сумма = ТекСтрока.СуммаДоходаОтИсточника / КоличествоПериодов 
										+ (ТекСтрока.СуммаДоходаОтИсточника - ОбщаяСумма);
				Иначе
					НовоеДвижение.Сумма = ТекСтрока.СуммаДоходаОтИсточника / КоличествоПериодов;
				КонецЕсли;
				ТекДата = ДобавитьМесяц(ТекДата, 1);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокумента

// Обработчик события "ОбработкаЗаполнения" документа.
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УПЖКХ_ТиповыеМетодыСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Процедура проведения документа.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = УПЖКХ_ТиповыеМетодыВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении,
	// по данным шапки документа.
	ПараметрыПроведения = Документы.КВП_СметаТСЖ.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШапкиДокумента   = ПараметрыПроведения.Реквизиты;
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли