
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.СправкиНДФЛДляПередачиВНалоговыйОрган;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеПроверяемыхРеквизитовОткрываемымОбъектам(ДокументСсылка, ДанныеДляПроверки) Экспорт
	Возврат Новый Структура;
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	Возврат УчетНДФЛ.ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта();		
КонецФункции

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта(ДанныеДляПроверки) Экспорт
	Возврат УчетНДФЛ.ПолучитьСоответствиеРеквизитовФормеОбъекта();	
КонецФункции

Функция ПолучитьПредставленияПроверяемыхРеквизитов() Экспорт
	Возврат УчетНДФЛ.ПолучитьПредставлениеПроверяемыхРеквизитовФизическихЛиц();	
КонецФункции	

Функция ПолучитьСтруктуруПроверяемыхДанных() Экспорт
	Возврат УчетНДФЛ.ПолучитьСтруктуруПроверяемыхДанныхФизическихЛиц();	
КонецФункции	

Функция ИмяФайла2НДФЛ(ДатаСоставления, ЭтоЮрЛицо, Знач КодНалоговогоОрганаПолучателя, КодНалоговогоОргана, ИНН, КПП, ИдентификаторФайла) Экспорт
	
	Возврат "NO_NDFL2"
			+ "_" + ?(ПустаяСтрока(КодНалоговогоОрганаПолучателя), КодНалоговогоОргана, КодНалоговогоОрганаПолучателя)
			+ "_" + КодНалоговогоОргана
			+ "_" + ?(ЭтоЮрЛицо, СокрЛП(ИНН) + СокрЛП(КПП), СокрЛП(ИНН))
			+ "_" + Формат(ДатаСоставления, "ДФ=ггггММдд")
			+ "_" + ИдентификаторФайла;

КонецФункции

Функция ПолучитьТаблицыДанныхДокументовДляПечати(Ссылки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСтроки КАК НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник КАК Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИНН КАК ИНН,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки КАК НомерСправки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Фамилия КАК Фамилия,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Имя КАК Имя,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Отчество КАК Отчество,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Адрес КАК Адрес,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента КАК ВидДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента КАК СерияДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента КАК НомерДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтранаВыдачиДокумента КАК СтранаВыдачиДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Гражданство КАК Гражданство,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИННвСтранеГражданства КАК ИННвСтранеГражданства,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаРождения КАК ДатаРождения,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтатусНалогоплательщика КАК СтатусНалогоплательщика,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке9 КАК ОбщаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке9 КАК ОблагаемаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке9 КАК ИсчисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке9 КАК УдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке9 КАК ЗадолженностьПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке9 КАК ИзлишнеУдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке9 КАК ПереданоНаВзыскание,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.АдресЗарубежом КАК АдресЗарубежом,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке9 КАК ПеречисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке13 КАК ОбщаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке13 КАК ОблагаемаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке13 КАК ИсчисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке13 КАК УдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке13 КАК ЗадолженностьПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке13 КАК ИзлишнеУдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке13 КАК ПеречисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке30 КАК ОбщаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке30 КАК ОблагаемаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке30 КАК ИсчисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке30 КАК УдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке30 КАК ЗадолженностьПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке30 КАК ИзлишнеУдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке30 КАК ПеречисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке15 КАК ОбщаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке15 КАК ОблагаемаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке15 КАК ИсчисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке15 КАК УдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке15 КАК ЗадолженностьПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке15 КАК ИзлишнеУдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке15 КАК ПеречисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке35 КАК ОбщаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке35 КАК ОблагаемаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке35 КАК ИсчисленоПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке35 КАК УдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке35 КАК ЗадолженностьПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке35 КАК ИзлишнеУдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке35 КАК ПеречисленоПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке5 КАК ОбщаяСуммаДоходаПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке5 КАК ОблагаемаяСуммаДоходаПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке5 КАК ИсчисленоПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке5 КАК УдержаноПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке5 КАК ЗадолженностьПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке5 КАК ИзлишнеУдержаноПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке5 КАК ПеречисленоПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке10 КАК ОбщаяСуммаДоходаПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке10 КАК ОблагаемаяСуммаДоходаПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке10 КАК ИсчисленоПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке10 КАК УдержаноПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке10 КАК ЗадолженностьПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке10 КАК ИзлишнеУдержаноПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке10 КАК ПеречисленоПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке5 КАК ЗачтеноАвансовыхПлатежейПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке9 КАК ЗачтеноАвансовыхПлатежейПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке10 КАК ЗачтеноАвансовыхПлатежейПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке13 КАК ЗачтеноАвансовыхПлатежейПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке35 КАК ЗачтеноАвансовыхПлатежейПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке30 КАК ЗачтеноАвансовыхПлатежейПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке15 КАК ЗачтеноАвансовыхПлатежейПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке3 КАК ОбщаяСуммаДоходаПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке3 КАК ОблагаемаяСуммаДоходаПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке3 КАК ИсчисленоПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке3 КАК УдержаноПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке3 КАК ЗадолженностьПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке3 КАК ИзлишнеУдержаноПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке3 КАК ПеречисленоПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке3 КАК ЗачтеноАвансовыхПлатежейПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке6 КАК ОбщаяСуммаДоходаПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке6 КАК ОблагаемаяСуммаДоходаПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке6 КАК ИсчисленоПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке6 КАК УдержаноПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке6 КАК ЗадолженностьПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке6 КАК ИзлишнеУдержаноПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке6 КАК ПеречисленоПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке6 КАК ЗачтеноАвансовыхПлатежейПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке7 КАК ОбщаяСуммаДоходаПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке7 КАК ОблагаемаяСуммаДоходаПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке7 КАК ИсчисленоПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке7 КАК УдержаноПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке7 КАК ЗадолженностьПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке7 КАК ИзлишнеУдержаноПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке7 КАК ПеречисленоПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке7 КАК ЗачтеноАвансовыхПлатежейПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке12 КАК ОбщаяСуммаДоходаПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке12 КАК ОблагаемаяСуммаДоходаПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке12 КАК ИсчисленоПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке12 КАК УдержаноПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке12 КАК ЗадолженностьПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке12 КАК ИзлишнеУдержаноПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке12 КАК ПеречисленоПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке12 КАК ЗачтеноАвансовыхПлатежейПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерУведомленияАвансовыеПлатежи КАК НомерУведомленияАвансовыеПлатежи,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаУведомленияАвансовыеПлатежи КАК ДатаУведомленияАвансовыеПлатежи,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.КодНалоговогоОрганаУведомленияАвансовыеПлатежи КАК КодНалоговогоОрганаУведомленияАвансовыеПлатежи
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.НомерСтроки КАК НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.Сотрудник КАК Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.ДатаУведомления КАК ДатаУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.НомерУведомления КАК НомерУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.КодНалоговогоОрганаУведомления КАК КодНалоговогоОрганаУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.ГруппаВычета КАК ГруппаВычета
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.УведомленияНОоПравеНаВычеты КАК СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганУведомленияНОоПравеНаВычеты.Ссылка В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	СведенияОДоходахИВычетах = ТаблицыДанныхОДоходахИВычетовДокументов(Ссылки);
	
	Возврат Новый Структура("Сотрудники, СведенияОДоходах, СведенияОВычетах, СведенияОбУведомлениях", Результаты[0].Выгрузить(), СведенияОДоходахИВычетах.СведенияОДоходах, СведенияОДоходахИВычетах.СведенияОВычетах, Результаты[1].Выгрузить());
	
КонецФункции

Функция ТаблицыДанныхОДоходахИВычетовДокументов(Ссылки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.НомерСтроки КАК НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Сотрудник КАК Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.КодДохода КАК КодДохода,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.СуммаДохода КАК СуммаДохода,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.КодВычета КАК КодВычета,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.СуммаВычета КАК СуммаВычета,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.НомерСправки КАК НомерСправки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ставка КАК Ставка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОДоходах КАК СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОДоходах.Ссылка В(&Ссылки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкиНДФЛДляИФНССведенияОДОходах.ДокументОснование,
	|	СправкиНДФЛДляИФНССведенияОДОходах.НомерСтрокиДокумента,
	|	СправкиНДФЛДляИФНССведенияОДОходах.Сотрудник,
	|	СправкиНДФЛДляИФНССведенияОДОходах.МесяцНалоговогоПериода,
	|	СправкиНДФЛДляИФНССведенияОДОходах.КодДохода,
	|	СправкиНДФЛДляИФНССведенияОДОходах.СуммаДохода,
	|	СправкиНДФЛДляИФНССведенияОДОходах.КодВычета,
	|	СправкиНДФЛДляИФНССведенияОДОходах.СуммаВычета,
	|	СправкиНДФЛДляИФНССведенияОДОходах.НомерСправки,
	|	СправкиНДФЛДляИФНССведенияОДОходах.Ставка
	|ИЗ
	|	РегистрСведений.СправкиНДФЛДляИФНССведенияОДОходах КАК СправкиНДФЛДляИФНССведенияОДОходах
	|ГДЕ
	|	СправкиНДФЛДляИФНССведенияОДОходах.ДокументОснование В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.НомерСтроки КАК НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.Сотрудник КАК Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.КодВычета КАК КодВычета,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.СуммаВычета КАК СуммаВычета,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.НомерСправки КАК НомерСправки
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.СведенияОВычетах КАК СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСведенияОВычетах.Ссылка В(&Ссылки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкиНДФЛДляИФНССведенияОВычетах.ДокументОснование,
	|	СправкиНДФЛДляИФНССведенияОВычетах.НомерСтрокиДокумента,
	|	СправкиНДФЛДляИФНССведенияОВычетах.Сотрудник,
	|	СправкиНДФЛДляИФНССведенияОВычетах.КодВычета,
	|	СправкиНДФЛДляИФНССведенияОВычетах.СуммаВычета,
	|	СправкиНДФЛДляИФНССведенияОВычетах.НомерСправки
	|ИЗ
	|	РегистрСведений.СправкиНДФЛДляИФНССведенияОВычетах КАК СправкиНДФЛДляИФНССведенияОВычетах
	|ГДЕ
	|	СправкиНДФЛДляИФНССведенияОВычетах.ДокументОснование В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Новый Структура("СведенияОДоходах, СведенияОВычетах", РезультатыЗапроса[0].Выгрузить(), РезультатыЗапроса[1].Выгрузить());
	
КонецФункции

Функция НомерПервойСправки(Дата, НалоговыйПериод, Организация) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки) КАК КоличествоСформированныхСправок
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СведенияОДоходахФизлицРаботникиОрганизации
	|ГДЕ
	|	СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Дата < &ДатаДокумента
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Проведен
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Организация = &Организация
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.НалоговыйПериод = &НалоговыйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерПервойСправки = ?(Выборка.КоличествоСформированныхСправок = NULL, 0, Выборка.КоличествоСформированныхСправок) + 1;
	Иначе	
		НомерПервойСправки = 1;
	КонецЕсли;  
	
	Возврат НомерПервойСправки;	
КонецФункции	

// Возвращает номер пачки документа
Функция НомерПачкиДокумента(Знач НомерДокумента) Экспорт
	
	НомерПачки = "";
	
	НомерДокумента = СокрП(НомерДокумента);
	
	// Возьмем все цифры в правой части номера
	ДлинаНомера = СтрДлина(НомерДокумента);
	Для НомерСимвола = 1 По ДлинаНомера Цикл
		Символ = Сред(НомерДокумента, ДлинаНомера- НомерСимвола+ 1, 1); 	
		Если (Символ>="0") И (Символ<="9") Тогда
			НомерПачки = Символ+НомерПачки;
		Иначе
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	Если НомерПачки <> "" Тогда
		Возврат Формат(Число(Прав(НомерПачки, 5)), "ЧГ=0"); 
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции	 

Процедура ДобавитьДополнительныеСвойстваОДоходахИВычетах(ДополнительныеСвойстваДокумента) Экспорт
	
	ОписаниеДопСвойств = Новый Соответствие;
	ОписаниеДопСвойств.Вставить("СведенияОДоходах", "СправкиНДФЛДляИФНССведенияОДОходах");
	ОписаниеДопСвойств.Вставить("СведенияОВычетах", "СправкиНДФЛДляИФНССведенияОВычетах");
	
	Для Каждого ДопСвойство Из ОписаниеДопСвойств Цикл
		ДополнительныеСвойстваДокумента.Вставить(ДопСвойство.Ключ,
				РегистрыСведений[ДопСвойство.Значение].СоздатьНаборЗаписей());
	КонецЦикла;
	
КонецПроцедуры

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Справка о доходах (2-НДФЛ)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Форма2НДФЛ";
	КомандаПечати.Представление = НСтр("ru = 'Справка о доходах (2-НДФЛ)'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;

	// Справка о доходах для сотрудников (2-НДФЛ)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПечатнаяФорма2НДФЛ";
	КомандаПечати.Представление = НСтр("ru = 'Справка о доходах для сотрудников(2-НДФЛ)'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	

	// Реестр
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2019";
	КомандаПечати.Представление = НСтр("ru = 'Реестр с 2019 г.'");
	КомандаПечати.Порядок = 30;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Реестр
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2014";
	КомандаПечати.Представление = НСтр("ru = 'Реестр с 2014 г.'");
	КомандаПечати.Порядок = 40;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;

	// Реестр 2014 (дополнительный)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2014Дополнительный";
	КомандаПечати.Представление = НСтр("ru = 'Реестр (дополнительный с 2014 г.)'");
	КомандаПечати.Порядок = 50;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	// Реестр
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2011";
	КомандаПечати.Представление = НСтр("ru = 'Реестр с 2011 г.'");
	КомандаПечати.Порядок = 60;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;

	// Реестр (дополнительный)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "Реестр2011Дополнительный";
	КомандаПечати.Представление = НСтр("ru = 'Реестр (дополнительный с 2011 г.)'");
	КомандаПечати.Порядок = 70;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма2НДФЛ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма2НДФЛ", "Форма 2НДФЛ", СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов, ОбъектыПечати, Ложь));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатнаяФорма2НДФЛ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПечатнаяФорма2НДФЛ", "Форма 2НДФЛ", СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов, ОбъектыПечати, Истина));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2011", "Реестр", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2011"));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2011Дополнительный") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2011Дополнительный", "Реестр (дополнительный с 2011 г.)", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2011Дополнительный"));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2014") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2014", "Реестр", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2014"));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2014Дополнительный") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2014Дополнительный", "Реестр (дополнительный с 2014 г.)", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2014Дополнительный"));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Реестр2019") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Реестр2019", "Реестр", ПечатьРеестра(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_Реестр2019"));
	КонецЕсли;
КонецПроцедуры

Функция СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов, ОбъектыПечати, ДляСотрудника)
	
	ДанныеНА = УчетНДФЛ.СправкиНДФЛДанныеДляПечати(МассивОбъектов);
	ТаблицыДокумента = ПолучитьТаблицыДанныхДокументовДляПечати(МассивОбъектов);
	
	Если ДляСотрудника Тогда
		Возврат УчетНДФЛ.СформироватьПечатнуюФорму2НДФЛ(
					ОбъектыПечати,
					МассивОбъектов,
					ДанныеНА,
					ТаблицыДокумента.Сотрудники,
					ТаблицыДокумента.СведенияОДоходах,
					ТаблицыДокумента.СведенияОВычетах,
					ТаблицыДокумента.СведенияОбУведомлениях)
	КонецЕсли;
	
	Документы2019Года = Новый Массив;
	ДокументыДо2019Года = Новый Массив;
	Для Каждого Справка Из ДанныеНА Цикл
		Если УчетНДФЛ.ВыводитьФорму2НДФЛ2019Года(Справка.Значение.НалоговыйПериод, Справка.Значение.Дата) Тогда
			Документы2019Года.Добавить(Справка.Ключ);
		Иначе
			ДокументыДо2019Года.Добавить(Справка.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	ПечатныеФормы2НДФЛ = Новый ТабличныйДокумент;
	ПечатныеФормы2НДФЛ.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Справок2_НДФЛ_2019";
	ПечатныеФормы2НДФЛ.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатныеФормы2НДФЛ.ПолеСлева = 5;
	ПечатныеФормы2НДФЛ.ПолеСправа = 5;
	ПечатныеФормы2НДФЛ.ПолеСверху = 5;
	ПечатныеФормы2НДФЛ.ПолеСнизу = 5;
	ПечатныеФормы2НДФЛ.РазмерКолонтитулаСверху = 0;
	ПечатныеФормы2НДФЛ.РазмерКолонтитулаСнизу = 0;
	ПечатныеФормы2НДФЛ.АвтоМасштаб = Истина;
	
	Если ДокументыДо2019Года.Количество() Тогда
		ПечатныеФормы2НДФЛ.Вывести(
			УчетНДФЛ.СформироватьПечатнуюФорму2НДФЛ(
				ОбъектыПечати,
				ДокументыДо2019Года,
				ДанныеНА,
				ТаблицыДокумента.Сотрудники,
				ТаблицыДокумента.СведенияОДоходах,
				ТаблицыДокумента.СведенияОВычетах,
				ТаблицыДокумента.СведенияОбУведомлениях));
	КонецЕсли;
	
	Если Документы2019Года.Количество() <> 0 Тогда 
		Если ТаблицыДокумента.Сотрудники.Количество() > ОграничениеНаКоличествоСотрудниковВМашиночитаемомБланке() Тогда
			Если БольшоеКоличествоСотрудниковВМашиночитаемомБланке(Документы2019Года, ТаблицыДокумента.Сотрудники) Тогда
				ТекстОшибки = НСтр("ru = 'Машиночитаемый бланк предназначен для небольшого количества сотрудников. 
				|Воспользуйтесь печатной формой 2-НДФЛ для сотрудника'", );
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Возврат ПечатныеФормы2НДФЛ;
			КонецЕсли;
		КонецЕсли;
		Если ПечатныеФормы2НДФЛ.ВысотаТаблицы > 0 Тогда
			ПечатныеФормы2НДФЛ.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПечатныеФормы2НДФЛ.Вывести(СформироватьПечатнуюФорму2НДФЛ2019Года(
			ОбъектыПечати,
			Документы2019Года,
			ДанныеНА,
			ТаблицыДокумента.Сотрудники,
			ТаблицыДокумента.СведенияОДоходах,
			ТаблицыДокумента.СведенияОВычетах,
			ТаблицыДокумента.СведенияОбУведомлениях));
	КонецЕсли;
	
	Возврат ПечатныеФормы2НДФЛ;
	
КонецФункции

Функция СформироватьЗапросПоСотрудникамДляПечатиРеестра(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке13 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке30 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке9 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке15 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке35 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке3 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке5 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке6 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке7 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке10 + СправкиСотрудников.ОбщаяСуммаДоходаПоСтавке12 КАК ОбщаяСуммаДохода,
	|	СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке13 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке30 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке9 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке15 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке35 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке3 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке5 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке6 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке7 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке10 + СправкиСотрудников.ОблагаемаяСуммаДоходаПоСтавке12 КАК ОблагаемаяСуммаДохода,
	|	СправкиСотрудников.ИсчисленоПоСтавке13 + СправкиСотрудников.ИсчисленоПоСтавке30 + СправкиСотрудников.ИсчисленоПоСтавке9 + СправкиСотрудников.ИсчисленоПоСтавке15 + СправкиСотрудников.ИсчисленоПоСтавке35 + СправкиСотрудников.ИсчисленоПоСтавке3 + СправкиСотрудников.ИсчисленоПоСтавке5 + СправкиСотрудников.ИсчисленоПоСтавке6 + СправкиСотрудников.ИсчисленоПоСтавке7 + СправкиСотрудников.ИсчисленоПоСтавке10 + СправкиСотрудников.ИсчисленоПоСтавке12 КАК Исчислено,
	|	СправкиСотрудников.УдержаноПоСтавке13 + СправкиСотрудников.УдержаноПоСтавке30 + СправкиСотрудников.УдержаноПоСтавке9 + СправкиСотрудников.УдержаноПоСтавке15 + СправкиСотрудников.УдержаноПоСтавке35 + СправкиСотрудников.УдержаноПоСтавке3 + СправкиСотрудников.УдержаноПоСтавке5 + СправкиСотрудников.УдержаноПоСтавке6 + СправкиСотрудников.УдержаноПоСтавке7 + СправкиСотрудников.УдержаноПоСтавке10 + СправкиСотрудников.УдержаноПоСтавке12 КАК Удержано,
	|	СправкиСотрудников.ПеречисленоПоСтавке13 + СправкиСотрудников.ПеречисленоПоСтавке30 + СправкиСотрудников.ПеречисленоПоСтавке9 + СправкиСотрудников.ПеречисленоПоСтавке15 + СправкиСотрудников.ПеречисленоПоСтавке35 + СправкиСотрудников.ПеречисленоПоСтавке3 + СправкиСотрудников.ПеречисленоПоСтавке5 + СправкиСотрудников.ПеречисленоПоСтавке6 + СправкиСотрудников.ПеречисленоПоСтавке7 + СправкиСотрудников.ПеречисленоПоСтавке10 + СправкиСотрудников.ПеречисленоПоСтавке12 КАК Перечислено,
	|	СправкиСотрудников.ИзлишнеУдержаноПоСтавке13 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке30 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке9 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке15 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке35 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке3 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке5 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке6 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке7 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке10 + СправкиСотрудников.ИзлишнеУдержаноПоСтавке12 КАК ИзлишнеУдержано,
	|	СправкиСотрудников.ЗадолженностьПоСтавке13 + СправкиСотрудников.ЗадолженностьПоСтавке30 + СправкиСотрудников.ЗадолженностьПоСтавке9 + СправкиСотрудников.ЗадолженностьПоСтавке15 + СправкиСотрудников.ЗадолженностьПоСтавке35 + СправкиСотрудников.ЗадолженностьПоСтавке3 + СправкиСотрудников.ЗадолженностьПоСтавке5 + СправкиСотрудников.ЗадолженностьПоСтавке6 + СправкиСотрудников.ЗадолженностьПоСтавке7 + СправкиСотрудников.ЗадолженностьПоСтавке10 + СправкиСотрудников.ЗадолженностьПоСтавке12 КАК Задолженность,
	|	СправкиСотрудников.Сотрудник КАК Сотрудник,
	|	СправкиСотрудников.Фамилия,
	|	СправкиСотрудников.Имя,
	|	СправкиСотрудников.Отчество,
	|	СправкиСотрудников.ДатаРождения,
	|	СправкиСотрудников.НомерСправки КАК НомерСправки,
	|	СправкиСотрудников.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиСотрудников
	|ГДЕ
	|	СправкиСотрудников.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСправки,
	|	Сотрудник";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует печатную форму - реестр справок о доходах
//
Функция ПечатьРеестра(МассивОбъектов, ОбъектыПечати, ИмяМакета = "ПФ_MXL_Реестр")
	
	ДанныеДокументов = УчетНДФЛ.СправкиНДФЛДанныеДляПечати(МассивОбъектов, Истина);
	ДанныеСотрудников = СформироватьЗапросПоСотрудникамДляПечатиРеестра(МассивОбъектов).Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСправок2_НДФЛ";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ПервыйДокумент = Истина;
	
	Для Каждого СтруктураДанныхДокумента Из ДанныеДокументов Цикл
		
		ДанныеДокумента = СтруктураДанныхДокумента.Значение;
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктураЗаголовка = Новый Структура("ИНН, НаименованиеПолное, КодНалоговогоОргана", ДанныеДокумента.ИННорг, ДанныеДокумента.НаименованиеПолное, ДанныеДокумента.КодНалоговогоОргана);
		
		СтруктураЗаголовка.Вставить("ОбщаяСуммаДохода", ДанныеДокумента.ОбщаяСуммаДохода);
		СтруктураЗаголовка.Вставить("Исчислено", ДанныеДокумента.Исчислено);
		СтруктураЗаголовка.Вставить("Удержано", ДанныеДокумента.Удержано);
		СтруктураЗаголовка.Вставить("Перечислено", ДанныеДокумента.Перечислено);
		
		СтруктураЗаголовка.Вставить("РуководительРасшифровкаПодписи", ДанныеДокумента.ФИОПодписавшего);
		Если ДанныеДокумента.ЭтоЮрЛицо Тогда
			СтруктураЗаголовка.Вставить("Разделитель", "/");
		Иначе
			СтруктураЗаголовка.Вставить("Разделитель", "");
		КонецЕсли;
		
		СтруктураЗаголовка.Вставить("Год", Формат(ДанныеДокумента.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		СтруктураЗаголовка.Вставить("ДатаСоставления", Формат(ДанныеДокумента.Дата, "ДЛФ=D"));
		СтруктураЗаголовка.Вставить("НомерРеестра", НомерПачкиДокумента(ДанныеДокумента.Номер));
		СтруктураЗаголовка.Вставить("Признак", ДанныеДокумента.Признак);
		СтруктураЗаголовка.Вставить("ИмяФайла", ИмяФайла2НДФЛ(ДанныеДокумента.Дата, ДанныеДокумента.ЭтоЮрЛицо, ДанныеДокумента.КодНалоговогоОрганаПолучателя, ДанныеДокумента.КодНалоговогоОргана, ДанныеДокумента.ИННОрг, ДанныеДокумента.КПП, ДанныеДокумента.ИдентификаторФайла));
		СтруктураЗаголовка.Вставить("ОКАТО", ДанныеДокумента.ОКАТО);
		СтруктураЗаголовка.Вставить("ОКТМО", ДанныеДокумента.ОКТМО);
		СтруктураЗаголовка.Вставить("КПП", ДанныеДокумента.КПП);
		СтруктураЗаголовка.Вставить("КоличествоСправок", Формат(ДанныеДокумента.КоличествоСправок,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		СтруктураЗаголовка.Вставить("ИННРеорганизованнойОрганизации", ДанныеДокумента.ИННРеорганизованнойОрганизации);
		СтруктураЗаголовка.Вставить("КППРеорганизованнойОрганизации", ДанныеДокумента.КППРеорганизованнойОрганизации);
		СтруктураЗаголовка.Вставить("РазделительРеорганизации", ?(ЗначениеЗаполнено(ДанныеДокумента.КППРеорганизованнойОрганизации), "/", ""));
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СправкиНДФЛДляПередачиВНалоговыйОрган." + ИмяМакета);
		ОбластьМакетаШапка	= Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
		ОбластьМакетаПодвал	= Макет.ПолучитьОбласть("Подвал");// Подвал документа
		ОбластьМакета 		= Макет.ПолучитьОбласть("Строка"); // область сотрудника
		
		ОбластьМакетаШапка.Параметры.Заполнить(СтруктураЗаголовка); // Шапка документа.
		
		// Начинаем формировать выходной документ
		ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
		
		ДанныеСотрудников.Сбросить();
		Если ДанныеСотрудников.НайтиСледующий(Новый Структура("Ссылка", СтруктураДанныхДокумента.Ключ)) Тогда
			
			Пока ДанныеСотрудников.СледующийПоЗначениюПоля("НомерСправки") Цикл
				Если ДанныеСотрудников.Ссылка <> СтруктураДанныхДокумента.Ключ Тогда
					Прервать;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ДанныеСотрудников);
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
		КонецЕсли;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(СтруктураЗаголовка);
		
		// выводим предварительно подготовленный Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, СтруктураДанныхДокумента.Ключ);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФорму2НДФЛ2019Года(ОбъектыПечати, МассивОбъектов, ДанныеДокументов, ДанныеСотрудниковДокументов, ДанныеОДоходахДокументов, ДанныеОВычетахДокументов, ДанныеОбУведомленияхДокументов)

	ПредставленияСтавокНДФЛ = ПредставленияСтавокНДФЛ();
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(
		СоответствиеКодовСтран, 
		СоответствиеИменСтран, 
		СоответствиеДокументовУдостоверяющихЛичность,
		СоответствиеКодовДоходов,
		СоответствиеКодовФНССтатусамНДФЛ);
		
	ТабличныйДокументСправки = Новый ТабличныйДокумент;
	ТабличныйДокументСправки.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Справок2_НДФЛ_2019";
	ТабличныйДокументСправки.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокументСправки.ПолеСлева = 5;
	ТабличныйДокументСправки.ПолеСправа = 5;
	ТабличныйДокументСправки.ПолеСверху = 5;
	ТабличныйДокументСправки.ПолеСнизу = 5;
	ТабличныйДокументСправки.РазмерКолонтитулаСверху = 0;
	ТабличныйДокументСправки.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокументСправки.АвтоМасштаб = Истина;
	
	МакетСправки = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ПолучитьМакет("Форма2НДФЛс2019");
	
	НомерСтраницы = 0;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		ДанныеТекущегоДокумента = ДанныеДокументов.Получить(Ссылка);
		
		СтрокиДанныхПоСотрудникам = ДанныеСотрудниковДокументов.Скопировать(Новый Структура("Ссылка", Ссылка));
		СтрокиДанныхПоСотрудникам.Сортировать("НомерСправки");
		
		СтруктураОтбора = Новый Структура("Ссылка, Сотрудник");
		Для Каждого ДанныеСотрудника Из СтрокиДанныхПоСотрудникам Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДанныеСотрудника);
			
			// Справка 2-НДФЛ.
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
				Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(ДанныеСотрудника, СтавкаНДФЛ) 
					И ДанныеТекущегоДокумента.НомерКорректировки <> 99 Тогда
					Продолжить;
				КонецЕсли;
				
				ТитульныйЛист = МакетСправки.ПолучитьОбласть("ТитульныйЛист");
				НомерСтраницы = НомерСтраницы + 1;
				
				// Шапка справки.
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ИННорг, ТитульныйЛист, "ИННорг", 12);
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КПП, ТитульныйЛист, "КППорг", 9);
				ВывестиДанныеПоБуквенно(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), ТитульныйЛист, "НомерСтраницы", 3);
				ВывестиЦелоеЧислоВЯчейки(ДанныеСотрудника.НомерСправки, ТитульныйЛист, "НомерСправки", 7);
				ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.НалоговыйПериод, "ЧЦ=10; ЧДЦ=0; ЧГ=0"), ТитульныйЛист, "Год", 4);
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.Признак, ТитульныйЛист, "Признак", 1);
				ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.НомерКорректировки, "ЧЦ=2; ЧН=00; ЧВН="), ТитульныйЛист, "НомерКорректировки", 2);
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КодНалоговогоОргана, ТитульныйЛист, "КодНО", 4);
				
				НазваниеОрганизации = ДанныеТекущегоДокумента.НазваниеОрганизации;
				Если ЗначениеЗаполнено(ДанныеТекущегоДокумента.ФормаРеорганизации) Тогда
					НазваниеОрганизации = ДанныеТекущегоДокумента.НаименованиеРеорганизованнойОрганизации
				КонецЕсли;
				ВывестиНаименованиеНалоговогоАгента(НазваниеОрганизации, ТитульныйЛист, "НА", 3, 40);
				
				Если ЗначениеЗаполнено(ДанныеТекущегоДокумента.ФормаРеорганизации) Тогда
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ФормаРеорганизации, ТитульныйЛист, "ФР", 1);
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ИННРеорганизованнойОрганизации, ТитульныйЛист, "ИННР", 10);
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КППРеорганизованнойОрганизации, ТитульныйЛист, "КППР", 9);
				КонецЕсли;
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ОКТМО, ТитульныйЛист, "ОКТМО", 11);
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.Телефон, ТитульныйЛист, "Телефон", 20);
				
				// Подписант
				ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ТипПодписанта, ТитульныйЛист, "ТипПодписанта", 1);
				ВывестиНаименованиеНалоговогоАгента(ДанныеТекущегоДокумента.ФИОПодписавшего, ТитульныйЛист, "ФИОПодписанта", 3, 40);
				Если ДанныеТекущегоДокумента.ТипПодписанта = "2" Тогда
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ДокументПредставителя, ТитульныйЛист, "ДокПодписанта", 40);
				КонецЕсли;
				ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.Дата, "ДФ=ddMMyyyy"), ТитульныйЛист, "ДатаПодписи", 8);
				
				// Раздел 1. Данные о физическом лице.
				ВывестиДанныеПоБуквенно(ДанныеСотрудника.ИНН, ТитульныйЛист, "ИННФЛ", 12);
				ВывестиДанныеПоБуквенно(ДанныеСотрудника.Фамилия, ТитульныйЛист, "Фамилия", 36);
				ВывестиДанныеПоБуквенно(ДанныеСотрудника.Имя, ТитульныйЛист, "Имя", 36);
				ВывестиДанныеПоБуквенно(ДанныеСотрудника.Отчество, ТитульныйЛист, "Отчество", 36);
				
				Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(ДанныеСотрудника.СтатусНалогоплательщика);
				Если Описание <> Неопределено Тогда
					ВывестиДанныеПоБуквенно(Описание.КодФНС_2015, ТитульныйЛист, "СтатусНП", 1);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеСотрудника.ДатаРождения) Тогда
					ВывестиДанныеПоБуквенно(Формат(ДанныеСотрудника.ДатаРождения, "ДФ=ddMMyyyy"), ТитульныйЛист, "ДатаРождения", 8);
				КонецЕсли;
				
				КодСтраны = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, ДанныеСотрудника.Гражданство, ДанныеСотрудника.СтранаВыдачиДокумента);
				ВывестиДанныеПоБуквенно(КодСтраны, ТитульныйЛист, "Страна", 3);
				
				Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(ДанныеСотрудника.ВидДокумента);
				Если Описание <> Неопределено Тогда
					ВывестиДанныеПоБуквенно(Описание.КодМВД_2015, ТитульныйЛист, "Документ", 2);
				КонецЕсли;
				
				СерияНомерДокумента = СокрЛП(ДанныеСотрудника.СерияДокумента) + " " + СокрЛП(ДанныеСотрудника.НомерДокумента);
				ВывестиДанныеПоБуквенно(СерияНомерДокумента, ТитульныйЛист, "СерияНомер", 20);
				
				Если ДанныеТекущегоДокумента.НомерКорректировки = 99 Тогда
					Если ТабличныйДокументСправки.ВысотаТаблицы > 0 Тогда
						ТабличныйДокументСправки.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					ТабличныйДокументСправки.Вывести(ТитульныйЛист);
					Прервать;
				КонецЕсли;
				
				// Раздел 2. Общие суммы.
				ВывестиДанныеПоБуквенно(ПредставленияСтавокНДФЛ.Получить(СтавкаНДФЛ), ТитульныйЛист, "Ставка", 2);
				ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "ОбщаяСуммаДохода", СтавкаНДФЛ),
					ТитульныйЛист, "Доход", 17);
				ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "ОблагаемаяСуммаДохода", СтавкаНДФЛ),
					ТитульныйЛист, "База", 17);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "Исчислено", СтавкаНДФЛ),
					ТитульныйЛист, "Исчислено", 11);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "Удержано", СтавкаНДФЛ),
					ТитульныйЛист, "Удержано", 11);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "Перечислено", СтавкаНДФЛ),
					ТитульныйЛист, "Перечислено", 11);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "ИзлишнеУдержано", СтавкаНДФЛ),
					ТитульныйЛист, "ИзлишнеУдержано", 11);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "Задолженность", СтавкаНДФЛ),
					ТитульныйЛист, "НеУдержано", 11);
				ВывестиЦелоеЧислоВЯчейки(
					УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ),
					ТитульныйЛист, "Аванс", 11);
					
				// Раздел 3. Вычеты.
				ВычетыПоВидам = ДанныеОВычетахДокументов.Скопировать(СтруктураОтбора);
				ВычетыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
				ВычетыПоВидам.Колонки.Добавить("ГруппаВычета", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыВычетовПоНДФЛ"));
				Для Каждого СтрокаТЗ Из ВычетыПоВидам Цикл
					СтрокаТЗ.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаТЗ.КодВычета);
					СтрокаТЗ.ГруппаВычета = УчетНДФЛПовтИсп.ГруппаВычета(СтрокаТЗ.КодВычета);
				КонецЦикла;
				
				Уведомления = ДанныеОбУведомленияхДокументов.Скопировать(СтруктураОтбора);
				Уведомления.Колонки.Добавить("КодВидаУведомления", ОбщегоНазначения.ОписаниеТипаСтрока(1));
				НеопределенныеУведомления = Новый Массив;
				Для Каждого СтрокаУведомления Из Уведомления Цикл
					Если СтрокаУведомления.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Имущественные Тогда
						СтрокаУведомления.КодВидаУведомления = "1";
					ИначеЕсли СтрокаУведомления.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Социальные Тогда
						СтрокаУведомления.КодВидаУведомления = "2";
					Иначе
						НеопределенныеУведомления.Добавить(СтрокаУведомления);
					КонецЕсли;
				КонецЦикла;
				Для Каждого СтрокаУведомления Из НеопределенныеУведомления Цикл
					Уведомления.Удалить(СтрокаУведомления);
				КонецЦикла;
				Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСотрудника, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ) > 0 Тогда
					Уведомление = Уведомления.Добавить();
					Уведомление.КодВидаУведомления = "3";
					Уведомление.НомерУведомления = ДанныеСотрудника.НомерУведомленияАвансовыеПлатежи;
					Уведомление.ДатаУведомления = ДанныеСотрудника.ДатаУведомленияАвансовыеПлатежи;
					Уведомление.КодНалоговогоОрганаУведомления = ДанныеСотрудника.КодНалоговогоОрганаУведомленияАвансовыеПлатежи;
				КонецЕсли;
				
				// На листе помещаются 6 строк о вычетах и 1 уведомление 
				НеобходимоеКоличествоСтраниц = Макс(Уведомления.Количество(), Цел(ВычетыПоВидам.Количество()/6) + ?(ВычетыПоВидам.Количество()%6, 1, 0));
				Для НомерСтраницыСотрудника = 1 По НеобходимоеКоличествоСтраниц Цикл
					Если НомерСтраницыСотрудника <> 1 Тогда
						// дополнительный титульный лист
						Если ТабличныйДокументСправки.ВысотаТаблицы > 0 Тогда
							ТабличныйДокументСправки.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЕсли;
						ТабличныйДокументСправки.Вывести(ТитульныйЛист);
						НомерСтраницы = НомерСтраницы + 1;
						ТитульныйЛист = МакетСправки.ПолучитьОбласть("ТитульныйЛист");
						
						ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ИННорг, ТитульныйЛист, "ИННорг", 12);
						ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КПП, ТитульныйЛист, "КППорг", 9);
						ВывестиДанныеПоБуквенно(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), ТитульныйЛист, "НомерСтраницы", 3);
						ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.НалоговыйПериод, "ЧЦ=10; ЧДЦ=0; ЧГ=0"), ТитульныйЛист, "Год", 4);
						ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.Признак, ТитульныйЛист, "Признак", 1);
						ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.НомерКорректировки, "ЧЦ=2; ЧН=00; ЧВН="), ТитульныйЛист, "НомерКорректировки", 2);
						ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КодНалоговогоОргана, ТитульныйЛист, "КодНО", 4);
						ВывестиЦелоеЧислоВЯчейки(ДанныеСотрудника.НомерСправки, ТитульныйЛист, "НомерСправки", 7);
						
						НеобходимоВыводитьНаименованиеНА = ВычетыПоВидам.Количество() > (НомерСтраницыСотрудника-1) * 6;
						Если НеобходимоВыводитьНаименованиеНА Тогда
							НазваниеОрганизации = ДанныеТекущегоДокумента.НазваниеОрганизации;
							Если ЗначениеЗаполнено(ДанныеТекущегоДокумента.ФормаРеорганизации) Тогда
								НазваниеОрганизации = ДанныеТекущегоДокумента.НаименованиеРеорганизованнойОрганизации
							КонецЕсли;
							ВывестиНаименованиеНалоговогоАгента(НазваниеОрганизации, ТитульныйЛист, "НА", 3, 40);
						КонецЕсли;
					КонецЕсли;
					
					Для Индекс = 1 По 6 Цикл
						ИндексСтрокиВычетов = Индекс + 6 * (НомерСтраницыСотрудника - 1);
						Если ВычетыПоВидам.Количество() < ИндексСтрокиВычетов Тогда
							Прервать;
						КонецЕсли;
						СтрокаВычетов = ВычетыПоВидам[ИндексСтрокиВычетов-1];
						ВывестиДанныеПоБуквенно(СтрокаВычетов.КодВычетаСтрокой, ТитульныйЛист, "КодВычета" + Индекс, 3);
						ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(СтрокаВычетов.СуммаВычета, ТитульныйЛист, "СуммаВычета" + Индекс, 9);
					КонецЦикла;
					
					Если Уведомления.Количество() >= НомерСтраницыСотрудника Тогда
						СтрокаУведомления = Уведомления[НомерСтраницыСотрудника-1];
						ВывестиДанныеПоБуквенно(СтрокаУведомления.КодВидаУведомления, ТитульныйЛист, "КодУведомления", 1);
						ВывестиДанныеПоБуквенно(СтрокаУведомления.НомерУведомления, ТитульныйЛист, "НомерУведомления", 15);
						ВывестиДанныеПоБуквенно(Формат(СтрокаУведомления.ДатаУведомления, "ДФ=ddMMyyyy"), ТитульныйЛист, "ДатаУведомления", 8);
						ВывестиДанныеПоБуквенно(СтрокаУведомления.КодНалоговогоОрганаУведомления, ТитульныйЛист, "НОУведомления", 4);
					КонецЕсли;
				КонецЦикла;
				
				Если ТабличныйДокументСправки.ВысотаТаблицы > 0 Тогда
					ТабличныйДокументСправки.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ТабличныйДокументСправки.Вывести(ТитульныйЛист);
				
			КонецЦикла;
			
			// Приложение к справке.
			ДоходыСотрудника = ДанныеОДоходахДокументов.Скопировать(СтруктураОтбора);
			Если ДоходыСотрудника.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ДоходыСотрудника.Сортировать("НомерСправки, Ставка, МесяцНалоговогоПериода, КодДохода, КодВычета");
			
			ДоходыПоМесяцамИКодам = ДанныеОДоходахДокументов.СкопироватьКолонки();
			ДоходыПоМесяцамИКодам.Колонки.Добавить("КодДоходаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4)));
			ДоходыПоМесяцамИКодам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			
			ДанныеПрошлойСтроки = Новый Структура("НомерСправки, Ставка, МесяцНалоговогоПериода, КодДохода, КодВычета");
			СтрокаВидаДохода = Неопределено;
			СтрокаВидаВычета = Неопределено;
			Для Каждого ДоходСотрудника Из ДоходыСотрудника Цикл
				Если ДоходСотрудника.НомерСправки <> ДанныеПрошлойСтроки.НомерСправки 
					Или ДоходСотрудника.Ставка <> ДанныеПрошлойСтроки.Ставка
					Или ДоходСотрудника.МесяцНалоговогоПериода <> ДанныеПрошлойСтроки.МесяцНалоговогоПериода
					Или ДоходСотрудника.КодДохода <> ДанныеПрошлойСтроки.КодДохода Тогда
					СтрокаВидаДохода = ДоходыПоМесяцамИКодам.Добавить();
					ЗаполнитьЗначенияСвойств(ДанныеПрошлойСтроки, ДоходСотрудника);
					ЗаполнитьЗначенияСвойств(СтрокаВидаДохода, ДоходСотрудника);
					СтрокаВидаДохода.КодДоходаСтрокой = СоответствиеКодовДоходов[СтрокаВидаДохода.КодДохода];
					СтрокаВидаДохода.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаВидаДохода.КодВычета);
					СтрокаВидаВычета = СтрокаВидаДохода;
				ИначеЕсли ДоходСотрудника.КодВычета <> ДанныеПрошлойСтроки.КодВычета Тогда
					Если ЗначениеЗаполнено(ДоходСотрудника.КодВычета) Тогда
						СтрокаВидаВычета = ДоходыПоМесяцамИКодам.Добавить();
						ЗаполнитьЗначенияСвойств(ДанныеПрошлойСтроки, ДоходСотрудника);
						ЗаполнитьЗначенияСвойств(СтрокаВидаВычета, ДоходСотрудника);
						СтрокаВидаВычета.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаВидаВычета.КодВычета);
						СтрокаВидаВычета.СуммаДохода = 0;
						СтрокаВидаВычета.МесяцНалоговогоПериода = 0;
					КонецЕсли;
					СтрокаВидаДохода.СуммаДохода = СтрокаВидаДохода.СуммаДохода + ДоходСотрудника.СуммаДохода;
				Иначе
					СтрокаВидаДохода.СуммаДохода = СтрокаВидаДохода.СуммаДохода + ДоходСотрудника.СуммаДохода;
					СтрокаВидаВычета.СуммаВычета = СтрокаВидаВычета.СуммаВычета + ДоходСотрудника.СуммаВычета;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеПрошлойСтроки = Новый Структура("НомерСправки, Ставка");
			ИндексДоходаНаЛисте = 0;
			ПриложениеСправки = Неопределено;
			Для Каждого СтрокаДоходов Из ДоходыПоМесяцамИКодам Цикл
				Если СтрокаДоходов.НомерСправки <> ДанныеПрошлойСтроки.НомерСправки 
					Или СтрокаДоходов.Ставка <> ДанныеПрошлойСтроки.Ставка 
					Или ИндексДоходаНаЛисте >= 15 Тогда
					
					Если ПриложениеСправки <> Неопределено Тогда
						Если ТабличныйДокументСправки.ВысотаТаблицы > 0 Тогда
							ТабличныйДокументСправки.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЕсли;
						ТабличныйДокументСправки.Вывести(ПриложениеСправки);
					КонецЕсли;
					
					ПриложениеСправки = МакетСправки.ПолучитьОбласть("Приложение");
					НомерСтраницы = НомерСтраницы + 1;
					ИндексДоходаНаЛисте = 0;
					
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.ИННорг, ПриложениеСправки, "ПИНН", 12);
					ВывестиДанныеПоБуквенно(ДанныеТекущегоДокумента.КПП, ПриложениеСправки, "ПКПП", 9);
					ВывестиДанныеПоБуквенно(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), ПриложениеСправки, "ПСтраница", 3);
					ВывестиЦелоеЧислоВЯчейки(СтрокаДоходов.НомерСправки, ПриложениеСправки, "ПСправка", 7);
					ВывестиДанныеПоБуквенно(Формат(ДанныеТекущегоДокумента.НалоговыйПериод, "ЧЦ=10; ЧДЦ=0; ЧГ=0"), ПриложениеСправки, "ПГод", 4);
					ВывестиДанныеПоБуквенно(ПредставленияСтавокНДФЛ.Получить(СтрокаДоходов.Ставка), ПриложениеСправки, "ПСтавка", 2);
					
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(ДанныеПрошлойСтроки, СтрокаДоходов);
				
				ИндексДоходаНаЛисте = ИндексДоходаНаЛисте + 1;
				ПостфиксИмени = Формат(ИндексДоходаНаЛисте, "ЧЦ=2; ЧВН=");
				
				ИмяЯчейки = "М" + ПостфиксИмени;
				ВывестиДанныеПоБуквенно(Формат(СтрокаДоходов.МесяцНалоговогоПериода, "ЧЦ=2; ЧВН="), ПриложениеСправки, ИмяЯчейки, 2);
				Если СтрокаДоходов.СуммаДохода <> 0 Тогда 
					ИмяЯчейки = "КД" + ПостфиксИмени;
					ВывестиДанныеПоБуквенно(СтрокаДоходов.КодДоходаСтрокой, ПриложениеСправки, ИмяЯчейки, 4);
					ИмяЯчейки = "СД" + ПостфиксИмени;
					ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(СтрокаДоходов.СуммаДОхода, ПриложениеСправки, ИмяЯчейки, 17);
				КонецЕсли;
				Если СтрокаДоходов.СуммаВычета <> 0 Тогда
					ИмяЯчейки = "КВ" + ПостфиксИмени;
					ВывестиДанныеПоБуквенно(СтрокаДоходов.КодВычетаСтрокой, ПриложениеСправки, ИмяЯчейки, 3);
					ИмяЯчейки = "СВ" + ПостфиксИмени;
					ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(СтрокаДоходов.СуммаВычета, ПриложениеСправки, ИмяЯчейки, 16);
				КонецЕсли;
			КонецЦикла;
			
			Если ТабличныйДокументСправки.ВысотаТаблицы > 0 Тогда
				ТабличныйДокументСправки.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ТабличныйДокументСправки.Вывести(ПриложениеСправки);
			
		КонецЦикла;
	
	КонецЦикла;
	
	Возврат ТабличныйДокументСправки

КонецФункции

Процедура ВывестиНаименованиеНалоговогоАгента(НазваниеАгента, ТабличныйДокумент, ИмяПоказателя, КоличествоСтрок, КоличествоЯчеек)
	
	Если СтрДлина(НазваниеАгента) < КоличествоЯчеек Тогда
		ВывестиДанныеПоБуквенно(НазваниеАгента, ТабличныйДокумент, ИмяПоказателя +"01", КоличествоЯчеек);
	Иначе
		МассивДлинПодстрок = Новый Массив;
		МассивДлинПодстрок.Добавить(КоличествоЯчеек);
		РазграниченнаяСтрока = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(НазваниеАгента, МассивДлинПодстрок);

		Если СтрДлина(РазграниченнаяСтрока) > КоличествоЯчеек * КоличествоСтрок Тогда
			РазграниченнаяСтрока = НазваниеАгента;
		КонецЕсли;
			
		МассивПодстрок = Новый Массив;
		Для ИндексСтроки = 1 По КоличествоСтрок Цикл
			ЧастьНаименования = Сред(РазграниченнаяСтрока, КоличествоЯчеек*(ИндексСтроки - 1) + 1, КоличествоЯчеек);
			МассивПодстрок.Добавить(ЧастьНаименования);
		КонецЦикла;
		
		Для ИндексСтроки = 1 По МассивПодстрок.Количество() Цикл
			ЧастьНаименования = МассивПодстрок[ИндексСтроки-1];
			ПрефиксИмени = ИмяПоказателя + Формат(ИндексСтроки, "ЧЦ=2; ЧВН=");
			ВывестиДанныеПоБуквенно(ЧастьНаименования, ТабличныйДокумент, ПрефиксИмени, КоличествоЯчеек);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиЦелоеЧислоВЯчейки(Данные, ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Прав("                  " + Формат(Данные, "ЧЦ=" + (КоличествоЯчеек + 1) + "; ЧДЦ=0; ЧН=0; ЧГ="), КоличествоЯчеек), ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек);
КонецПроцедуры

Процедура ВывестиДанныеПоБуквенно(Данные, ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек, НачальнаяЯчейка = 1)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(Данные), ТабличныйДокумент, ПрефиксЯчеек, КоличествоЯчеек, НачальнаяЯчейка)
КонецПроцедуры

Функция ПредставленияСтавокНДФЛ()
	РазмерыСтавок = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УчетНДФЛ.СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтавкиНалогаЧислом.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	СтавкиНалогаЧислом.Размер КАК Размер
	|ИЗ
	|	ВТСтавкиНалогаЧислом КАК СтавкиНалогаЧислом";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока выборка.Следующий() Цикл
		РазмерыСтавок.Вставить(Выборка.СтавкаНалогообложения, Формат(Выборка.Размер, "ЧЦ=2; ЧС=-2; ЧВН="));
	КонецЦикла;
	Возврат РазмерыСтавок;
КонецФункции

Функция ОграничениеНаКоличествоСотрудниковВМашиночитаемомБланке()
	Возврат 500
КонецФункции

Функция БольшоеКоличествоСотрудниковВМашиночитаемомБланке(Документы2019Года, ДанныеСотрудников) 
	
	Предел = ОграничениеНаКоличествоСотрудниковВМашиночитаемомБланке();
	Сотрудников2019Года = 0;
	ТекущийДокумент = Неопределено;
	Документ2019Года = Ложь;
	Для Каждого Строка Из ДанныеСотрудников Цикл
		Если Строка.Ссылка <> ТекущийДокумент Тогда
			ТекущийДокумент = Строка.Ссылка;
			Документ2019Года = Документы2019Года.Найти(ТекущийДокумент)<>Неопределено;
		КонецЕсли;
		Если Документ2019Года Тогда
			Сотрудников2019Года = Сотрудников2019Года + 1;
			Если Сотрудников2019Года > Предел Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

