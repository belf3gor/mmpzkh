#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	НалоговыйПериодДата = Дата(?(НалоговыйПериод <= 0, 1, НалоговыйПериод), 12, 31);
	
	ИдентификаторФайла =  Новый УникальныйИдентификатор();
	
	Если НалоговыйПериод < 2015 Или НомерКорректировки = 0 Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
		Для каждого СтрокаТЧ Из Сотрудники Цикл
		    СтрокаТЧ.ИсправляемаяСправка = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ПустаяСсылка()
		КонецЦикла;
	КонецЕсли;
	
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Тогда
		ФормаРеорганизации = "";
		КППРеорганизованнойОрганизации = "";
		ИННРеорганизованнойОрганизации = "";
		НаименованиеРеорганизованнойОрганизации = "";
	КонецЕсли;
	
	ДоходыИВычетыВРегистрах = УчетНДФЛ.ВыводитьФорму2НДФЛ2019Года(НалоговыйПериод, Дата);
	Если ДополнительныеСвойства.Свойство("СведенияОДоходах") Тогда 
		Если ДоходыИВычетыВРегистрах Тогда
			СведенияОДоходах.Очистить();
		Иначе
			СведенияОДоходах.Загрузить(ДополнительныеСвойства.СведенияОДоходах.Выгрузить());
			ДополнительныеСвойства.СведенияОДоходах.Очистить();
		КонецЕсли;
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("СведенияОВычетах") Тогда 
		Если ДоходыИВычетыВРегистрах Тогда
			СведенияОВычетах.Очистить();
		Иначе
			СведенияОВычетах.Загрузить(ДополнительныеСвойства.СведенияОВычетах.Выгрузить());
			ДополнительныеСвойства.СведенияОВычетах.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьСведенияОДоходахИВычетах(Ссылка);
	
	Если Не ПометкаУдаления Тогда
		СформироватьВыходнойФайл();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию Тогда
		
		ДанныеДляПроведения = ДанныеДляПроведения();
		
		УчетНДФЛ.СформироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, Дата, ДанныеДляПроведения.Налоги);
		МесяцНалоговогоПериода =  МесяцНалоговогоПериода(НалоговыйПериод, Дата);
		УчетНачисленнойЗарплаты.ЗарегистрироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, МесяцНалоговогоПериода, ДанныеДляПроведения.НалогиСотрудников, Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган);
		
		ДанныеДляПроведения = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
		ДанныеДляПроведения.НачисленияУдержания = Движения.НачисленияУдержанияПоСотрудникам.Выгрузить();
		СтрокаСписокТаблиц = "НачисленныйНДФЛ";
		ОтражениеЗарплатыВБухучете.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, НачалоМесяца(Дата), ДанныеДляПроведения, СтрокаСписокТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИдентификаторФайла = Новый УникальныйИдентификатор();
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЭтоЮридическоеЛицо = ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация);
	Если Не ЭтоЮридическоеЛицо Тогда 
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КППОтправки");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ДобавитьДополнительныеСвойстваОДоходахИВычетах(ДополнительныеСвойства);
	
	СведенияОДОходахИВычетах = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ТаблицыДанныхОДоходахИВычетовДокументов(ОбъектКопирования.Ссылка);
	
	Если ДополнительныеСвойства.Свойство("СведенияОДоходах") Тогда
		ДополнительныеСвойства.СведенияОДоходах.Загрузить(СведенияОДОходахИВычетах.СведенияОДоходах);
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("СведенияОВычетах") Тогда
		ДополнительныеСвойства.СведенияОВычетах.Загрузить(СведенияОДОходахИВычетах.СведенияОВычетах);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка13, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка09, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка30, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка15, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка05, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка10, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка03, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка06, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка07, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка12, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	
	ДанныеОЗадолженности = Новый ТаблицаЗначений;
	ДанныеОЗадолженности.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ДанныеОЗадолженности.Колонки.Добавить("Ставка", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ДанныеОЗадолженности.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	ДанныеОЗадолженности.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	ДанныеОЗадолженности.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ДанныеОЗадолженности.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ДанныеОЗадолженности.Колонки.Добавить("ИсправляемаяСправка", Новый ОписаниеТипов("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган"));
	
	МесяцНалоговогоПериода = МесяцНалоговогоПериода(НалоговыйПериод, Дата);
	
	Для Каждого ДанныеСправкиПоСотруднику Из Сотрудники Цикл 
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			Задолженность = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправкиПоСотруднику, "Задолженность", СтавкаНДФЛ);
			Если Задолженность <> 0 Тогда
				СтрокаЗадолженности = ДанныеОЗадолженности.Добавить();
				СтрокаЗадолженности.ФизическоеЛицо = ДанныеСправкиПоСотруднику.Сотрудник;
				СтрокаЗадолженности.ИсправляемаяСправка = ДанныеСправкиПоСотруднику.ИсправляемаяСправка;
				СтрокаЗадолженности.Ставка = СтавкаНДФЛ;
				СтрокаЗадолженности.СтавкаНалогообложенияРезидента = СоответствиеСтавок[СтавкаНДФЛ];
				СтрокаЗадолженности.МесяцНалоговогоПериода =  МесяцНалоговогоПериода;
				СтрокаЗадолженности.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
				СтрокаЗадолженности.Сумма = Задолженность;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НалоговыйПериод >= 2015 И НомерКорректировки > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.ИсправляемаяСправка КАК ИсправляемаяСправка,
		|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Сотрудники.Ставка КАК Ставка,
		|	Сотрудники.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	Сотрудники.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	Сотрудники.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	Сотрудники.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&Сотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСИсправлениями.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеСИсправлениями.Ставка КАК Ставка,
		|	ДанныеСИсправлениями.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ДанныеСИсправлениями.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ДанныеСИсправлениями.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СУММА(ДанныеСИсправлениями.Сумма) КАК Сумма,
		|	ДанныеСИсправлениями.ИсправляемаяСправка КАК ИсправляемаяСправка
		|ИЗ
		|	(ВЫБРАТЬ
		|		Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Сотрудники.Ставка КАК Ставка,
		|		Сотрудники.ИсправляемаяСправка КАК ИсправляемаяСправка,
		|		Сотрудники.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Сотрудники.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		Сотрудники.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|		Сотрудники.Сумма КАК Сумма
		|	ИЗ
		|		ВТСотрудники КАК Сотрудники
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Сотрудники.ФизическоеЛицо,
		|		Сотрудники.Ставка,
		|		Сотрудники.ИсправляемаяСправка,
		|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
		|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
		|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
		|		-РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
		|	ИЗ
		|		ВТСотрудники КАК Сотрудники
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|			ПО Сотрудники.ИсправляемаяСправка = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
		|				И Сотрудники.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|	ГДЕ
		|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо ЕСТЬ НЕ NULL ) КАК ДанныеСИсправлениями
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеСИсправлениями.ФизическоеЛицо,
		|	ДанныеСИсправлениями.Ставка,
		|	ДанныеСИсправлениями.СтавкаНалогообложенияРезидента,
		|	ДанныеСИсправлениями.МесяцНалоговогоПериода,
		|	ДанныеСИсправлениями.РегистрацияВНалоговомОргане,
		|	ДанныеСИсправлениями.ИсправляемаяСправка";
		Запрос.УстановитьПараметр("Сотрудники", ДанныеОЗадолженности);
		ДанныеОЗадолженности = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ЗадолженностьФизлиц = ДанныеОЗадолженности.Скопировать(,"ФизическоеЛицо,Сумма");
	ЗадолженностьФизлиц.Свернуть("ФизическоеЛицо","Сумма");
	ДанныеДляПроведения = Новый Структура("Налоги, НалогиСотрудников", ДанныеОЗадолженности, ЗадолженностьФизлиц);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция СформироватьЗапросПоСтрокамДокументаДляПроверки(Сотрудники)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", Сотрудники);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИНН,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Фамилия,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Имя,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Отчество,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Адрес,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Гражданство,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаРождения,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтатусНалогоплательщика,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.АдресЗарубежом,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке3,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке6,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке7,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке12,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке5,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке10,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗачтеноАвансовыхПлатежейПоСтавке15
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяСправки,
	|	Сотрудники.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТДублиСтрок
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ПовторяющиесяНомераСправок
	|		ПО Сотрудники.НомерСтроки < ПовторяющиесяНомераСправок.НомерСтроки
	|			И Сотрудники.НомерСправки = ПовторяющиесяНомераСправок.НомерСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ПовторяющиесяСправки
	|		ПО Сотрудники.НомерСтроки < ПовторяющиесяСправки.НомерСтроки
	|			И Сотрудники.Сотрудник = ПовторяющиесяСправки.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Сотрудники.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДублиНомеров.НомерСтроки
	|ПОМЕСТИТЬ ВТДублиНомеровСправок
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДублиНомеров
	|		ПО Сотрудники.НомерСтроки < СотрудникиДублиНомеров.НомерСтроки
	|			И Сотрудники.НомерСправки = СотрудникиДублиНомеров.НомерСправки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДубли.НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиДубли
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДубли
	|		ПО Сотрудники.Сотрудник = СотрудникиДубли.Сотрудник
	|			И Сотрудники.НомерСтроки < СотрудникиДубли.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДублиНомеровСправок.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
	|	ВЫБОР
	|		КОГДА СотрудникиДубли.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяСправки,
	|	Сотрудники.НомерСтроки КАК НомерСтроки,
	|	&НалоговыйПериод КАК НалоговыйПериод,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.ИНН,
	|	Сотрудники.НомерСправки,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.Адрес,
	|	Сотрудники.ВидДокумента,
	|	Сотрудники.СерияДокумента,
	|	Сотрудники.НомерДокумента,
	|	Сотрудники.Гражданство,
	|	Сотрудники.ДатаРождения,
	|	Сотрудники.СтатусНалогоплательщика,
	|	Сотрудники.АдресЗарубежом,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке13,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке13,
	|	Сотрудники.ИсчисленоПоСтавке13,
	|	Сотрудники.УдержаноПоСтавке13,
	|	Сотрудники.ЗадолженностьПоСтавке13,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке13,
	|	Сотрудники.ПеречисленоПоСтавке13,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке30,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке30,
	|	Сотрудники.ИсчисленоПоСтавке30,
	|	Сотрудники.УдержаноПоСтавке30,
	|	Сотрудники.ЗадолженностьПоСтавке30,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке30,
	|	Сотрудники.ПеречисленоПоСтавке30,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке9,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке9,
	|	Сотрудники.ИсчисленоПоСтавке9,
	|	Сотрудники.УдержаноПоСтавке9,
	|	Сотрудники.ЗадолженностьПоСтавке9,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке9,
	|	Сотрудники.ПеречисленоПоСтавке9,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке15,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке15,
	|	Сотрудники.ИсчисленоПоСтавке15,
	|	Сотрудники.УдержаноПоСтавке15,
	|	Сотрудники.ЗадолженностьПоСтавке15,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке15,
	|	Сотрудники.ПеречисленоПоСтавке15,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке35,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке35,
	|	Сотрудники.ИсчисленоПоСтавке35,
	|	Сотрудники.УдержаноПоСтавке35,
	|	Сотрудники.ЗадолженностьПоСтавке35,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке35,
	|	Сотрудники.ПеречисленоПоСтавке35,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке5,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке5,
	|	Сотрудники.ИсчисленоПоСтавке5,
	|	Сотрудники.УдержаноПоСтавке5,
	|	Сотрудники.ЗадолженностьПоСтавке5,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке5,
	|	Сотрудники.ПеречисленоПоСтавке5,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке10,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке10,
	|	Сотрудники.ИсчисленоПоСтавке10,
	|	Сотрудники.УдержаноПоСтавке10,
	|	Сотрудники.ЗадолженностьПоСтавке10,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке10,
	|	Сотрудники.ПеречисленоПоСтавке10,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке3,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке3,
	|	Сотрудники.ИсчисленоПоСтавке3,
	|	Сотрудники.УдержаноПоСтавке3,
	|	Сотрудники.ЗадолженностьПоСтавке3,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке3,
	|	Сотрудники.ПеречисленоПоСтавке3,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке3,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке6,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке6,
	|	Сотрудники.ИсчисленоПоСтавке6,
	|	Сотрудники.УдержаноПоСтавке6,
	|	Сотрудники.ЗадолженностьПоСтавке6,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке6,
	|	Сотрудники.ПеречисленоПоСтавке6,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке6,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке7,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке7,
	|	Сотрудники.ИсчисленоПоСтавке7,
	|	Сотрудники.УдержаноПоСтавке7,
	|	Сотрудники.ЗадолженностьПоСтавке7,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке7,
	|	Сотрудники.ПеречисленоПоСтавке7,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке7,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке12,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке12,
	|	Сотрудники.ИсчисленоПоСтавке12,
	|	Сотрудники.УдержаноПоСтавке12,
	|	Сотрудники.ЗадолженностьПоСтавке12,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке12,
	|	Сотрудники.ПеречисленоПоСтавке12,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке12,
	|	ФизическиеЛица.Наименование КАК СотрудникНаименование,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке5,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке9,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке10,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке13,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке35,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке30,
	|	Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке15
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Сотрудники.Сотрудник = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиДубли КАК СотрудникиДубли
	|		ПО Сотрудники.НомерСтроки = СотрудникиДубли.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиНомеровСправок КАК ДублиНомеровСправок
	|		ПО Сотрудники.НомерСтроки = ДублиНомеровСправок.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ПроверитьДанныеДокумента(Отказ) Экспорт
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	
	ВыборкаСотрудниковДляПроверки = СформироватьЗапросПоСтрокамДокументаДляПроверки(Сотрудники.Выгрузить()).Выбрать();
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
		СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
		УчетНДФЛ.СправкиНДФЛПроверитьДанныеНалоговогоАгента(
			ЭтотОбъект, 
			СтруктураДанныхНА, 
			Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО,
			Отказ);
	КонецЕсли;
	
	ТекстСообщения = "";
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
		Если Не ЗначениеЗаполнено(ФормаРеорганизации) Тогда
			ТекстСообщения = НСтр("ru = 'Не указан код формы реорганизации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ФормаРеорганизации", , Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(НаименованиеРеорганизованнойОрганизации) Тогда
			ТекстСообщения = НСтр("ru = 'Не указано наименование реорганизованной организации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.НаименованиеРеорганизованнойОрганизации", , Отказ);
		КонецЕсли;
		Если ФормаРеорганизации <> "0" Тогда
			Если Не ЗначениеЗаполнено(ИННРеорганизованнойОрганизации) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан ИНН реорганизованной организации.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ИННРеорганизованнойОрганизации", , Отказ);
			ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИННРеорганизованнойОрганизации, Истина, ТекстСообщения) Тогда
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.ИННРеорганизованнойОрганизации", , Отказ);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(КППРеорганизованнойОрганизации) Тогда
				ТекстСообщения = НСтр("ru = 'Не указан КПП реорганизованной организации.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.КППРеорганизованнойОрганизации", , Отказ);
			ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КППРеорганизованнойОрганизации, ТекстСообщения) Тогда
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.КППРеорганизованнойОрганизации", , Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("СведенияОДоходах") Тогда
		СведенияОДоходахФизическихЛиц = ЭтотОбъект.ДополнительныеСвойства.СведенияОДоходах.Выгрузить();
		СведенияОДоходахФизическихЛиц.Колонки.НомерСтрокиДокумента.Имя = "НомерСтроки";
		Для Н = 0 По СведенияОДоходахФизическихЛиц.Количество() - 1 Цикл
			СведенияОДоходахФизическихЛиц[Н].НомерСтроки = Н;
		КонецЦикла;
	Иначе
		СведенияОДоходахФизическихЛиц = СведенияОДоходах.Выгрузить();
	КонецЕсли;
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("СведенияОВычетах") Тогда
		СведенияОВычетахФизическихЛиц = ЭтотОбъект.ДополнительныеСвойства.СведенияОВычетах.Выгрузить();
		СведенияОВычетахФизическихЛиц.Колонки.НомерСтрокиДокумента.Имя = "НомерСтроки";
		Для Н = 0 По СведенияОВычетахФизическихЛиц.Количество() - 1 Цикл
			СведенияОВычетахФизическихЛиц[Н].НомерСтроки = Н;
		КонецЦикла;
	Иначе
		СведенияОВычетахФизическихЛиц = СведенияОВычетах.Выгрузить();
	КонецЕсли;
	
	СведенияОДоходахИВзосах = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ТаблицыДанныхОДоходахИВычетовДокументов(Ссылка);
	Пока ВыборкаСотрудниковДляПроверки.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		Документы.СправкаНДФЛ.ПроверитьДанныеФизическогоЛица(
			Ссылка,
			ВыборкаСотрудниковДляПроверки,
			Дата,
			"Сотрудники",
			ВыборкаСотрудниковДляПроверки.НомерСтроки,
			Отказ,
			Не УчетНДФЛ.ВыводитьФорму2НДФЛ2018Года(НалоговыйПериод, Дата));
		
		Если ВыборкаСотрудниковДляПроверки.ЕстьПовторяющиесяСправки Тогда
			ТекстСообщения = НСтр("ru = 'Данные по сотруднику были введены в документе ранее'");
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сотрудники", ВыборкаСотрудниковДляПроверки.НомерСтроки, "Сотрудник");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, ПутьКДанным, ,Отказ);   
		КонецЕсли;
		
		Если ВыборкаСотрудниковДляПроверки.ЕстьПовторяющиесяНомераСправок Тогда
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сотрудники", ВыборкаСотрудниковДляПроверки.НомерСтроки, "НомерСправки");
			
			ТекстСообщения = НСтр("ru = 'Номер справки был введен в документе ранее'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка,  ПутьКДанным, ,Отказ);
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("Сотрудник", ВыборкаСотрудниковДляПроверки.Сотрудник);
		
		Доходы = СведенияОДоходахФизическихЛиц.Скопировать(СтруктураОтбора);
		НомерСтрокиДокумента = 1;
		Для Каждого Строка Из Доходы Цикл
			Строка.НомерСтроки = НомерСтрокиДокумента;
			НомерСтрокиДокумента = НомерСтрокиДокумента + 1;
		КонецЦикла;
		Вычеты = СведенияОВычетахФизическихЛиц.Скопировать(СтруктураОтбора);
		НомерСтрокиДокумента = 1;
		Для Каждого Строка Из Вычеты Цикл
			Строка.НомерСтроки = НомерСтрокиДокумента;
			НомерСтрокиДокумента = НомерСтрокиДокумента + 1;
		КонецЦикла;
		
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(СтруктураОтбора);
		
		НачалоСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1, справка № %2:'"), ВыборкаСотрудниковДляПроверки.СотрудникНаименование, ВыборкаСотрудниковДляПроверки.НомерСправки) + " ";
		
		ПутьКДаннымСотрудника = "Сотрудники[" + Формат(ВыборкаСотрудниковДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]";
		
		УчетНДФЛ.СправкиНДФЛПроверитьДанныеОДоходахНалогахВычетах(
			Ссылка,
			Дата,
			ВыборкаСотрудниковДляПроверки,
			ПутьКДаннымСотрудника,
			Доходы,
			Вычеты,
			СоответствиеСтавокДоходов,
			НачалоСообщения,
			Отказ,
			Ложь,,,
			Уведомления,
			НомерКорректировки,
			"ЗаписиСведенияОДоходах",
			"ЗаписиСведенияОВычетах");
			
	КонецЦикла;
	
	ТипПодписанта = Неопределено;
	Если НалоговыйПериод >= 2015  Тогда
		ДанныеПредставителя = ИнтерфейсыВзаимодействияБРОВызовСервера.СведенияОПредставителеПоРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане, Дата);
		ТипПодписанта = ДанныеПредставителя.ТипПодписанта;
	КонецЕсли;
	Если ТипПодписанта <> "2" И Не ЗначениеЗаполнено(СправкуПодписал) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран подписант.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.СправкуПодписал", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция МесяцНалоговогоПериода(НалоговыйПериод, ДатаДокумента)
	Возврат Мин(Дата(НалоговыйПериод, 12, 1), НачалоМесяца(ДатаДокумента));
КонецФункции

Процедура СохранитьСведенияОДоходахИВычетах(ДокументОснование)
	
	УстановитьПривилегированныйРежим(Истина);
	Если ДополнительныеСвойства.Свойство("СведенияОДоходах") Тогда 
		ДополнительныеСвойства.СведенияОДоходах.Отбор.ДокументОснование.Установить(Ссылка);
		НомерСтроки = 1;
		Для Каждого ЗаписьНабора Из ДополнительныеСвойства.СведенияОДоходах Цикл 
			ЗаписьНабора.ДокументОснование = Ссылка;
			ЗаписьНабора.Организация = Организация;
			ЗаписьНабора.НомерСтрокиДокумента = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ДополнительныеСвойства.СведенияОДоходах.Записать();
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("СведенияОВычетах") Тогда 
		ДополнительныеСвойства.СведенияОВычетах.Отбор.ДокументОснование.Установить(Ссылка);
		НомерСтроки = 1;
		Для Каждого ЗаписьНабора Из ДополнительныеСвойства.СведенияОВычетах Цикл 
			ЗаписьНабора.ДокументОснование = Ссылка;
			ЗаписьНабора.Организация = Организация;
			ЗаписьНабора.НомерСтрокиДокумента = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ДополнительныеСвойства.СведенияОВычетах.Записать();
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ФОРМИРОВАНИЯ ФАЙЛА

Процедура СформироватьВыходнойФайл()
	
	ИмяСформированногоФайла = "";
	Если УчетНДФЛ.ВыводитьФорму2НДФЛ2019Года(НалоговыйПериод, Дата) Тогда
		ТекстФайла = ТекстВыходногоФайла2019(ИмяСформированногоФайла);
	ИначеЕсли УчетНДФЛ.ВыводитьФорму2НДФЛ2018Года(НалоговыйПериод, Дата) Тогда
		ТекстФайла = ТекстВыходногоФайла2018(ИмяСформированногоФайла);
	ИначеЕсли НалоговыйПериод >= 2015 Тогда
		ТекстФайла = ТекстВыходногоФайла2015(ИмяСформированногоФайла);
	ИначеЕсли УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(ЭтотОбъект) Тогда
		ТекстФайла = ТекстВыходногоФайла2014(ИмяСформированногоФайла);
	Иначе	
		ТекстФайла = ТекстВыходногоФайла2011(ИмяСформированногоФайла);
	КонецЕсли;
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Ссылка, ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецПроцедуры

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция ТекстВыходногоФайла2011(ИмяФайла)
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность,
											СоответствиеКодовДоходов, 
											СоответствиеКодовФНССтатусамНДФЛ);
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	СтруктураДанныхНА.Признак = ?(ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ,"2","1");
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2011XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОрганаПолучателя,
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					КППОтправки,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеПрограммы());
	Атрибуты.Вставить("ВерсФорм", "5.02");
	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКАТО.Значение = СтруктураДанныхНА.ОКАТО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКАТО.Значение = СтруктураДанныхНА.ОКАТО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОбщСвСЧ.СвФЛ.Значение.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
	Иначе
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвЮЛ.Значение;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
	
	СтруктураОтбора = Новый Структура("НомерСправки");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(СведенияОВычетах.НайтиСтроки(Новый Структура("Сотрудник",СтрокаДанных.Сотрудник)));
					
		ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
			СтрокаТЗ.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(НалоговыйПериод, СтрокаТЗ.КодВычета);
		КонецЦикла;
		
		СтруктураДанныхСправки = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СтрокаДанных.Фамилия;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СтрокаДанных.Имя;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СтрокаДанных.Отчество;
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.Статус.Значение = ?(Описание = Неопределено, "", Описание.КодФНС);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
		НаборЗаписейДокУдЛичности.КодУдЛичн = ?(Описание = Неопределено, "", Описание.КодМВД);
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Адреса
		Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
			СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,СтруктураАдреса); //  Индекс, КодРегион, Район, Город, Улица, Дом, Корп,
			Если СтруктураАдреса.Свойство("Регион") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.КодРегион = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
			КонецЕсли;
			Если СтруктураАдреса.Свойство("НаселенныйПункт") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.НаселПункт = СтруктураАдреса.НаселенныйПункт;
			КонецЕсли;
			Если СтруктураАдреса.Свойство("Квартира") Тогда 
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.Кварт = СтруктураАдреса.Квартира;
			КонецЕсли;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
			СтруктураАдреса = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
			НаборЗаписейФизЛицо.АдрИНО.Значение.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
			НаборЗаписейФизЛицо.АдрИНО.Значение.АдрТекст = СтруктураАдреса.Представление;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрИНО");
		КонецЕсли;
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(НалоговыйПериод, СтрокаВычетов.КодВычета);
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если Уведомления.Количество() > 0 И (ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код311, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код312, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код318, "КодВычета") <> Неопределено) Тогда
					Уведомление = НаборЗаписейВычет.УведИмущВыч.Значение;
					Уведомление.НомерУвед = Уведомления[0].НомерУведомления;
					Уведомление.ДатаУвед = Уведомления[0].ДатаУведомления;
					Уведомление.ИФНСУвед = Уведомления[0].КодНалоговогоОрганаУведомления;
				Иначе
					НаборЗаписейВычет.Удалить("УведИмущВыч");
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СГДНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				ОписаниеПолей = НаборЗаписейСведенияОДоходах.СГДНалПер.Поля;
				СтруктураСГДНалПер.Удалить("НалУдерж");
				СтруктураСГДНалПер.Удалить("НалПеречисл");
				СтруктураСГДНалПер.Удалить("НалУдержЛиш");
				СтрокаОписания = ОписаниеПолей.Найти("НалУдерж","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалПеречисл","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалУдержЛиш","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
			Иначе
				СтруктураСГДНалПер.НалУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалПеречисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалУдержЛиш = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML
	
КонецФункции

Функция ТекстВыходногоФайла2014(ИмяФайла)
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность,
											СоответствиеКодовДоходов, 
											СоответствиеКодовФНССтатусамНДФЛ);
	
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	СтруктураДанныхНА.Признак = ?(ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ,"2","1");
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2014XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	                                                              
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОрганаПолучателя,
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					КППОтправки,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеПрограммы());
	Атрибуты.Вставить("ВерсФорм", "5.03");

	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОбщСвСЧ.СвФЛ.Значение.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
	Иначе
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвЮЛ.Значение;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
	
	СтруктураОтбора = Новый Структура("Сотрудник");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
		
		ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
			СтрокаТЗ.КодВычетаСтрокой = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(НалоговыйПериод, СтрокаТЗ.КодВычета);
		КонецЦикла;
		
		СтруктураДанныхСправки = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СтрокаДанных.Фамилия;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СтрокаДанных.Имя;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СтрокаДанных.Отчество;
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.Статус.Значение = ?(Описание = Неопределено, "", Описание.КодФНС);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
		НаборЗаписейДокУдЛичности.КодУдЛичн = ?(Описание = Неопределено, "", Описание.КодМВД);
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Адреса
		Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
			СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,СтруктураАдреса); //  Индекс, КодРегион, Район, Город, Улица, Дом, Корп,
			Если СтруктураАдреса.Свойство("Регион") Тогда
				КодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
				Если КодРегиона <> Неопределено Тогда
					КодРегионаСтрокой = "";
					Если ТипЗнч(КодРегиона) = Тип("Число") Тогда
						КодРегионаСтрокой = Формат(КодРегиона, "ЧЦ=2; ЧВН=; ЧГ=");
					ИначеЕсли ТипЗнч(КодРегиона) = Тип("Строка") Тогда 
						КодРегионаСтрокой = КодРегиона;
					КонецЕсли;
				КонецЕсли;
				
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.КодРегион = КодРегионаСтрокой;
			КонецЕсли;
			Если СтруктураАдреса.Свойство("НаселенныйПункт") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.НаселПункт = СтруктураАдреса.НаселенныйПункт;
			КонецЕсли;
			Если СтруктураАдреса.Свойство("Квартира") Тогда 
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.Кварт = СтруктураАдреса.Квартира;
			КонецЕсли;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
			СтруктураАдреса = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
			НаборЗаписейФизЛицо.АдрИНО.Значение.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
			НаборЗаписейФизЛицо.АдрИНО.Значение.АдрТекст = СтруктураАдреса.Представление;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрИНО");
		КонецЕсли;
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = УчетНДФЛПовтИсп.КодВычетаДляНалоговойОтчетности(НалоговыйПериод, СтрокаВычетов.КодВычета);
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если Уведомления.Количество() > 0 И (ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код311, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код312, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код318, "КодВычета") <> Неопределено) Тогда
					Уведомление = НаборЗаписейВычет.УведИмущВыч.Значение;
					Уведомление.НомерУвед = Уведомления[0].НомерУведомления;
					Уведомление.ДатаУвед = Уведомления[0].ДатаУведомления;
					Уведомление.ИФНСУвед = Уведомления[0].КодНалоговогоОрганаУведомления;
				Иначе
					НаборЗаписейВычет.Удалить("УведИмущВыч");
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СГДНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				ОписаниеПолей = НаборЗаписейСведенияОДоходах.СГДНалПер.Поля;
				СтруктураСГДНалПер.Удалить("НалУдерж");
				СтруктураСГДНалПер.Удалить("НалПеречисл");
				СтруктураСГДНалПер.Удалить("НалУдержЛиш");
				СтрокаОписания = ОписаниеПолей.Найти("НалУдерж","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалПеречисл","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалУдержЛиш","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
			Иначе
				СтруктураСГДНалПер.НалУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалПеречисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалУдержЛиш = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML
	
КонецФункции

Функция ТекстВыходногоФайла2015(ИмяФайла)
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность,
											СоответствиеКодовДоходов, 
											СоответствиеКодовФНССтатусамНДФЛ);
	
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка03] = 3;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка06] = 6;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка07] = 7;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка12] = 12;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	СтруктураДанныхНА.Признак = ?(ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ,"2","1");
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2015XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОрганаПолучателя,
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					КППОтправки,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеПрограммы());
	Атрибуты.Вставить("ВерсФорм", "5.04");
	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2016Года КАК КодВычетаСтрокой,
	|	ВычетыНДФЛ.ГруппаВычета
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВычетыНДФЛ";
	
	Запрос.Текст = ?(НалоговыйПериод = 2015, СтрЗаменить(ТекстЗапроса, "2016", "2015"), ТекстЗапроса);
	СведенияИзКлассификатораВычетов = Запрос.Выполнить().Выгрузить();
	СведенияИзКлассификатораВычетов.Индексы.Добавить("Ссылка");
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.НомКорр.Значение = Формат(НомерКорректировки,"ЧЦ=2; ЧН=00; ЧВН="); 
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения о лице, подписавшем документ
	НаборЗаписейПодписант = ФорматСправка.Подписант.Значение;
	НаборЗаписейПодписант.ПрПодп.Значение = СтруктураДанныхНА.ТипПодписанта;
	Если СтруктураДанныхНА.ТипПодписанта = "2" Тогда
		// уполномоченный представитель
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.ФамилияПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.ИмяПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.ОтчествоПредставителя;
		НаборЗаписейПодписант.СвПред.Значение.НаимДок = СтруктураДанныхНА.ДокументПредставителя;
		Если СтруктураДанныхНА.ПредставительЮрЛицо Тогда
			НаборЗаписейПодписант.СвПред.Значение.НаимОрг = СтруктураДанныхНА.НаименованиеОрганизацииПредставителя;
		Иначе
			НаборЗаписейПодписант.СвПред.Значение.Удалить("НаимОрг");
			ОписаниеПолей = НаборЗаписейПодписант.СвПред.Поля;
			СтрокаОписания = ОписаниеПолей.Найти("НаимОрг","ИмяПоля");
			Если СтрокаОписания <> Неопределено Тогда
				ОписаниеПолей.Удалить(СтрокаОписания);
			КонецЕсли;
		КонецЕсли;
	Иначе
		// налоговый агент
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		НаборЗаписейПодписант.Удалить("СвПред");
	КонецЕсли;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОбщСвСЧ.СвФЛ.Значение.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
	Иначе
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвЮЛ.Значение;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = КППОтправки;
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
	
	СтруктураОтбора = Новый Структура("Сотрудник");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(УведомленияНОоПравеНаВычеты.НайтиСтроки(СтруктураОтбора));
		
		ДополнитьТаблицуСВычетами(ДоходыПоВидам, СведенияИзКлассификатораВычетов);
		ДополнитьТаблицуСВычетами(ВычетыПоВидам, СведенияИзКлассификатораВычетов);
		
		СтруктураДанныхСправки = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СокрЛП(СтрокаДанных.Фамилия);
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СокрЛП(СтрокаДанных.Имя);
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СокрЛП(СтрокаДанных.Отчество);
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		Если ПустаяСтрока(СтрокаДанных.ИННвСтранеГражданства) Или СтрокаДанных.Гражданство = Справочники.СтраныМира.Россия Тогда
			НаборЗаписейФизЛицо.Удалить("ИННИно");
		Иначе
			НаборЗаписейФизЛицо.ИННИно.Значение = СтрокаДанных.ИННвСтранеГражданства;
		КонецЕсли;
		
		Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.Статус.Значение = ?(Описание = Неопределено, "", Описание.КодФНС_2015);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
		НаборЗаписейДокУдЛичности.КодУдЛичн = ?(Описание = Неопределено, "", Описание.КодМВД_2015);
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Адреса
		Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
			СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,СтруктураАдреса); //  Индекс, КодРегион, Район, Город, Улица, Дом, Корп,
			Если СтруктураАдреса.Свойство("Регион") Тогда
				КодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
				Если КодРегиона <> Неопределено Тогда
					КодРегионаСтрокой = "";
					Если ТипЗнч(КодРегиона) = Тип("Число") Тогда
						КодРегионаСтрокой = Формат(КодРегиона, "ЧЦ=2; ЧВН=; ЧГ=");
					ИначеЕсли ТипЗнч(КодРегиона) = Тип("Строка") Тогда
						КодРегионаСтрокой = КодРегиона;
					КонецЕсли;
				КонецЕсли;
				
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.КодРегион = КодРегионаСтрокой;
			КонецЕсли;
			Если СтруктураАдреса.Свойство("НаселенныйПункт") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.НаселПункт = СтруктураАдреса.НаселенныйПункт;
			КонецЕсли;
			Если СтруктураАдреса.Свойство("Квартира") Тогда 
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.Кварт = СтруктураАдреса.Квартира;
			КонецЕсли;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
			СтруктураАдреса = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
			НаборЗаписейФизЛицо.АдрИНО.Значение.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
			НаборЗаписейФизЛицо.АдрИНО.Значение.АдрТекст = СтруктураАдреса.Представление;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрИНО");
		КонецЕсли;
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = СтрокаВычетов.КодВычетаСтрокой;
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные, "ГруппаВычета") <> Неопределено Тогда
					ТаблицаУведомлений = НаборЗаписейВычет.УведИмущВыч.Значение;
					СтрокиУведомлений = Уведомления.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Имущественные));
					Для каждого СтрокаУведомления Из СтрокиУведомлений Цикл
						Уведомление = ТаблицаУведомлений.Добавить();
						Уведомление.НомерУвед = СтрокаУведомления.НомерУведомления;
						Уведомление.ДатаУвед = СтрокаУведомления.ДатаУведомления;
						Уведомление.ИФНСУвед = СтрокаУведомления.КодНалоговогоОрганаУведомления;
					КонецЦикла;
				КонецЕсли;
				
				Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО, "ГруппаВычета") <> Неопределено Тогда
					ТаблицаУведомлений = НаборЗаписейВычет.УведСоцВыч.Значение;
					СтрокиУведомлений = Уведомления.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Социальные));
					Для каждого СтрокаУведомления Из СтрокиУведомлений Цикл
						Уведомление = ТаблицаУведомлений.Добавить();
						Уведомление.НомерУвед = СтрокаУведомления.НомерУведомления;
						Уведомление.ДатаУвед = СтрокаУведомления.ДатаУведомления;
						Уведомление.ИФНСУвед = СтрокаУведомления.КодНалоговогоОрганаУведомления;
					КонецЦикла;
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			ЗачтеноАвансовыхПлатежей =  УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ);
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СумИтНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			СтруктураСГДНалПер.АвансПлатФикс.Значение = ЗачтеноАвансовыхПлатежей;
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Тогда
				СтруктураСГДНалПер.НалУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалПеречисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалУдержЛиш.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			Если ЗачтеноАвансовыхПлатежей > 0 Тогда
				Уведомление = СтруктураСГДНалПер.УведФиксПлат.Значение;
				Уведомление.НомерУвед = СтрокаДанных.НомерУведомленияАвансовыеПлатежи;
				Уведомление.ДатаУвед = СтрокаДанных.ДатаУведомленияАвансовыеПлатежи;
				Уведомление.ИФНСУвед = СтрокаДанных.КодНалоговогоОрганаУведомленияАвансовыеПлатежи;
			Иначе
				СтруктураСГДНалПер.Удалить("УведФиксПлат");
			КонецЕсли;
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML
	
КонецФункции

Функция ТекстВыходногоФайла2018(ИмяФайла)
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность,
											СоответствиеКодовДоходов, 
											СоответствиеКодовФНССтатусамНДФЛ);
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка03] = 3;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка06] = 6;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка07] = 7;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка12] = 12;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
		СтруктураДанныхНА.Признак = "2"
	ИначеЕсли ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Тогда
		СтруктураДанныхНА.Признак = "1"
	ИначеЕсли ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
		СтруктураДанныхНА.Признак = "3"
	Иначе 	
		СтруктураДанныхНА.Признак = "4"
	КонецЕсли;
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
	СтруктураДанныхНА.Вставить("КППОтправки", КППОтправки);
	СтруктураДанныхНА.Вставить("ФормаРеорганизации", ФормаРеорганизации);
	СтруктураДанныхНА.Вставить("ИННРеорганизованнойОрганизации", ИННРеорганизованнойОрганизации);
	СтруктураДанныхНА.Вставить("КППРеорганизованнойОрганизации", КППРеорганизованнойОрганизации);
	Если ЗначениеЗаполнено(ФормаРеорганизации) Тогда
		СтруктураДанныхНА.НазваниеОрганизации = НаименованиеРеорганизованнойОрганизации
	КонецЕсли;
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2018XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОрганаПолучателя,
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					КППОтправки,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеПрограммы());
	Атрибуты.Вставить("ВерсФорм", "5.05");
	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2016Года КАК КодВычетаСтрокой,
	|	ВычетыНДФЛ.ГруппаВычета
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВычетыНДФЛ";
	
	Запрос.Текст = ?(НалоговыйПериод = 2015, СтрЗаменить(ТекстЗапроса, "2016", "2015"), ТекстЗапроса);
	СведенияИзКлассификатораВычетов = Запрос.Выполнить().Выгрузить();
	СведенияИзКлассификатораВычетов.Индексы.Добавить("Ссылка");
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	// Сведения о лице, подписавшем документ
	НаборЗаписейПодписант = НаборЗаписейОбщСвСЧ.Подписант.Значение;
	НаборЗаписейПодписант.ПрПодп.Значение = СтруктураДанныхНА.ТипПодписанта;
	Если СтруктураДанныхНА.ТипПодписанта = "2" Тогда
		// уполномоченный представитель
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.ФамилияПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.ИмяПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.ОтчествоПредставителя;
		НаборЗаписейПодписант.СвПред.Значение.НаимДок = СтруктураДанныхНА.ДокументПредставителя;
		Если СтруктураДанныхНА.ПредставительЮрЛицо Тогда
			НаборЗаписейПодписант.СвПред.Значение.НаимОрг = СтруктураДанныхНА.НаименованиеОрганизацииПредставителя;
		Иначе
			НаборЗаписейПодписант.СвПред.Значение.Удалить("НаимОрг");
			ОписаниеПолей = НаборЗаписейПодписант.СвПред.Поля;
			СтрокаОписания = ОписаниеПолей.Найти("НаимОрг","ИмяПоля");
			Если СтрокаОписания <> Неопределено Тогда
				ОписаниеПолей.Удалить(СтрокаОписания);
			КонецЕсли;
		КонецЕсли;
	Иначе
		// налоговый агент
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		НаборЗаписейПодписант.Удалить("СвПред");
	КонецЕсли;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.НомКорр.Значение = Формат(НомерКорректировки,"ЧЦ=2; ЧН=00; ЧВН="); 
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
		ФорматСправка.СвНА.Значение.СвНАФЛ.Значение = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейОтправитель);
		
	Иначе
		
		// Сведения об отправителе
		ЗаполнитьДанныеОтправителя(НаборЗаписейОбщСвСЧ.СвЮЛ.Значение, СтруктураДанныхНА);
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		ЗаполнитьДанныеОтправителя(НаборЗаписейОтправитель, СтруктураДанныхНА);
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
	
	СтруктураОтбора = Новый Структура("Сотрудник");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(УведомленияНОоПравеНаВычеты.НайтиСтроки(СтруктураОтбора));
		
		ДополнитьТаблицуСВычетами(ДоходыПоВидам, СведенияИзКлассификатораВычетов);
		ДополнитьТаблицуСВычетами(ВычетыПоВидам, СведенияИзКлассификатораВычетов);
		
		СтруктураДанныхСправки = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СокрЛП(СтрокаДанных.Фамилия);
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СокрЛП(СтрокаДанных.Имя);
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СокрЛП(СтрокаДанных.Отчество);
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		Если ПустаяСтрока(СтрокаДанных.ИННвСтранеГражданства) Или СтрокаДанных.Гражданство = Справочники.СтраныМира.Россия Тогда
			НаборЗаписейФизЛицо.Удалить("ИННИно");
		Иначе
			НаборЗаписейФизЛицо.ИННИно.Значение = СтрокаДанных.ИННвСтранеГражданства;
		КонецЕсли;
		
		Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.Статус.Значение = ?(Описание = Неопределено, "", Описание.КодФНС_2015);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
		НаборЗаписейДокУдЛичности.КодУдЛичн = ?(Описание = Неопределено, "", Описание.КодМВД_2015);
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = СтрокаВычетов.КодВычетаСтрокой;
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные, "ГруппаВычета") <> Неопределено Тогда
					ТаблицаУведомлений = НаборЗаписейВычет.УведИмущВыч.Значение;
					СтрокиУведомлений = Уведомления.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Имущественные));
					Для каждого СтрокаУведомления Из СтрокиУведомлений Цикл
						Уведомление = ТаблицаУведомлений.Добавить();
						Уведомление.НомерУвед = СтрокаУведомления.НомерУведомления;
						Уведомление.ДатаУвед = СтрокаУведомления.ДатаУведомления;
						Уведомление.ИФНСУвед = СтрокаУведомления.КодНалоговогоОрганаУведомления;
					КонецЦикла;
				КонецЕсли;
				
				Если ВычетыПоВидам.Найти(Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО, "ГруппаВычета") <> Неопределено Тогда
					ТаблицаУведомлений = НаборЗаписейВычет.УведСоцВыч.Значение;
					СтрокиУведомлений = Уведомления.НайтиСтроки(Новый Структура("ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Социальные));
					Для каждого СтрокаУведомления Из СтрокиУведомлений Цикл
						Уведомление = ТаблицаУведомлений.Добавить();
						Уведомление.НомерУвед = СтрокаУведомления.НомерУведомления;
						Уведомление.ДатаУвед = СтрокаУведомления.ДатаУведомления;
						Уведомление.ИФНСУвед = СтрокаУведомления.КодНалоговогоОрганаУведомления;
					КонецЦикла;
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			ЗачтеноАвансовыхПлатежей =  УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ);
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СумИтНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			СтруктураСГДНалПер.АвансПлатФикс.Значение = ЗачтеноАвансовыхПлатежей;
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
				СтруктураСГДНалПер.НалУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалПеречисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалУдержЛиш.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			Если ЗачтеноАвансовыхПлатежей > 0 Тогда
				Уведомление = СтруктураСГДНалПер.УведФиксПлат.Значение;
				Уведомление.НомерУвед = СтрокаДанных.НомерУведомленияАвансовыеПлатежи;
				Уведомление.ДатаУвед = СтрокаДанных.ДатаУведомленияАвансовыеПлатежи;
				Уведомление.ИФНСУвед = СтрокаДанных.КодНалоговогоОрганаУведомленияАвансовыеПлатежи;
			Иначе
				СтруктураСГДНалПер.Удалить("УведФиксПлат");
			КонецЕсли;
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML
	
КонецФункции

Функция ТекстВыходногоФайла2019(ИмяФайла)
	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность,
											СоответствиеКодовДоходов, 
											СоответствиеКодовФНССтатусамНДФЛ);
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка03] = 3;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка06] = 6;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка07] = 7;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка12] = 12;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
		СтруктураДанныхНА.Признак = "2"
	ИначеЕсли ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность Тогда
		СтруктураДанныхНА.Признак = "1"
	ИначеЕсли ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
		СтруктураДанныхНА.Признак = "3"
	Иначе 	
		СтруктураДанныхНА.Признак = "4"
	КонецЕсли;
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
	СтруктураДанныхНА.Вставить("КППОтправки", КППОтправки);
	СтруктураДанныхНА.Вставить("ФормаРеорганизации", ФормаРеорганизации);
	СтруктураДанныхНА.Вставить("ИННРеорганизованнойОрганизации", ИННРеорганизованнойОрганизации);
	СтруктураДанныхНА.Вставить("КППРеорганизованнойОрганизации", КППРеорганизованнойОрганизации);
	Если ЗначениеЗаполнено(ФормаРеорганизации) Тогда
		СтруктураДанныхНА.НазваниеОрганизации = НаименованиеРеорганизованнойОрганизации
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2016Года КАК КодВычетаСтрокой,
	|	ВычетыНДФЛ.ГруппаВычета
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВычетыНДФЛ";
	
	СведенияИзКлассификатораВычетов = Запрос.Выполнить().Выгрузить();
	СведенияИзКлассификатораВычетов.Индексы.Добавить("Ссылка");
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2019XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл");
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОрганаПолучателя,
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					КППОтправки,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеПрограммы());
	Атрибуты.Вставить("ВерсФорм", "5.06");
	
	УзелФайл = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	// Состав и структура документа
	ФорматДокумент = ФорматФайла.Документ.Значение;
	ФорматДокумент.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматДокумент.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматДокумент.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматДокумент.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	УзелДокумент = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФайл, "Документ", "", АтрибутыВыгружаемогоУзла(ФорматДокумент));
	
	// Данные о налоговом агенте
	НаборНалоговыйАгент = ФорматДокумент.СвНА.Значение;
	НаборНалоговыйАгент.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	НаборНалоговыйАгент.Тлф.Значение = СтруктураДанныхНА.Телефон;
	НаборНалоговыйАгент.Тлф.НеВыводитьВФайл = НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон);
	Если ОрганизацияЭтоФизЛицо Тогда
		НаборНалоговыйАгент.СвНАЮЛ.НеВыводитьВФайл = Истина;
		НаборЗаписейОтправитель = НаборНалоговыйАгент.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
	Иначе
		НаборНалоговыйАгент.СвНАФЛ.НеВыводитьВФайл = Истина;
		НаборЗаписейОтправитель = НаборНалоговыйАгент.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КППОтправки;
		Если ЗначениеЗаполнено(СтруктураДанныхНА.ФормаРеорганизации) Тогда
			ИНН_КПП_НеОбязателен = СтрНайти("1/2/3/5/6", СокрЛП(СтруктураДанныхНА.ФормаРеорганизации)) = 0;
			НаборЗаписейОРеорганизации = НаборЗаписейОтправитель.СвРеоргЮЛ.Значение;
			НаборЗаписейОРеорганизации.ФормРеорг.Значение = СтруктураДанныхНА.ФормаРеорганизации;
			НаборЗаписейОРеорганизации.ИННЮЛ.Значение = СтруктураДанныхНА.ИННРеорганизованнойОрганизации;
			НаборЗаписейОРеорганизации.ИННЮЛ.НеВыводитьВФайл = Не ЗначениеЗаполнено(СтруктураДанныхНА.ИННРеорганизованнойОрганизации) И ИНН_КПП_НеОбязателен;
			НаборЗаписейОРеорганизации.КПП.Значение = СтруктураДанныхНА.КППРеорганизованнойОрганизации;
			НаборЗаписейОРеорганизации.КПП.НеВыводитьВФайл = Не ЗначениеЗаполнено(СтруктураДанныхНА.КППРеорганизованнойОрганизации) И ИНН_КПП_НеОбязателен;
		Иначе
			НаборЗаписейОтправитель.СвРеоргЮЛ.НеВыводитьВФайл = Истина;
		КонецЕсли;
	КонецЕсли;
	Атрибуты = АтрибутыВыгружаемогоУзла(НаборНалоговыйАгент);
	УзелНалоговыйАгент = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелДокумент, "СвНА","", Атрибуты);
	ЗарплатаКадры.ДобавитьИнформациюВДеревоБезУдаленияАтрибутов(УзелНалоговыйАгент, НаборНалоговыйАгент);
	
	// Сведения о лице, подписавшем документ
	НаборЗаписейПодписант = ФорматДокумент.Подписант.Значение;
	НаборЗаписейПодписант.ПрПодп.Значение = СтруктураДанныхНА.ТипПодписанта;
	Если СтруктураДанныхНА.ТипПодписанта = "2" Тогда
		// уполномоченный представитель
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.ФамилияПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.ИмяПредставителя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.ОтчествоПредставителя;
		НаборЗаписейПодписант.СвПред.Значение.НаимДок = СтруктураДанныхНА.ДокументПредставителя;
		Если СтруктураДанныхНА.ПредставительЮрЛицо Тогда
			НаборЗаписейПодписант.СвПред.Значение.НаимОрг = СтруктураДанныхНА.НаименованиеОрганизацииПредставителя;
		Иначе
			НаборЗаписейПодписант.СвПред.Значение.НаимОрг = "";
		КонецЕсли;
	Иначе
		// налоговый агент
		НаборЗаписейПодписант.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейПодписант.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейПодписант.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		НаборЗаписейПодписант.СвПред.НеВыводитьВФайл = Истина;
	КонецЕсли;
	Атрибуты = АтрибутыВыгружаемогоУзла(НаборЗаписейПодписант);
	УзелПодписант = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелДокумент, "Подписант","", Атрибуты);
	ЗарплатаКадры.ДобавитьИнформациюВДеревоБезУдаленияАтрибутов(УзелПодписант, НаборЗаписейПодписант);
	
	// НДФЛ-2
	ОтборЗаписейРегистров = Новый Структура("ДокументОснование", Ссылка);
	СведенияОДоходахИВычетах = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ТаблицыДанныхОДоходахИВычетовДокументов(Ссылка);
	СведенияОДоходахФизическихЛиц = СведенияОДоходахИВычетах.СведенияОДоходах; 
	СведенияОВычетахФизическихЛиц = СведенияОДоходахИВычетах.СведенияОВычетах;
	
	СтруктураДанныхСправки = ФорматДокумент.НДФЛ__2.Значение;
	НаборЗаписейСведенияОДоходах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматДокумент.НДФЛ__2.Значение.СведДох.Значение);
	ФорматСведенияОВычетах = ОбщегоНазначения.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
	СтруктураДанныхСправки.Удалить("СведДох");
	
	СтруктураОтбора = Новый Структура("Сотрудник");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	
	Для Каждого СтрокаДанных Из Сотрудники Цикл 
		// НДФЛ-2
		СтруктураДанныхСправки.НомСпр.Значение = Формат(СтрокаДанных.НомерСправки, "ЧГ=");
		СтруктураДанныхСправки.НомКорр.Значение = Формат(НомерКорректировки,"ЧЦ=2; ЧН=00; ЧВН="); 
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейПолучателиДохода = СтруктураДанныхСправки.ПолучДох.Значение;
		НаборЗаписейПолучателиДохода.ИННФЛ.Значение = СтрокаДанных.ИНН;
		НаборЗаписейПолучателиДохода.ИННФЛ.НеВыводитьВФайл = ПустаяСтрока(СтрокаДанных.ИНН);
		
		Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейПолучателиДохода.Статус.Значение = ?(Описание = Неопределено, "", Описание.КодФНС_2015);
		НаборЗаписейПолучателиДохода.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейПолучателиДохода.Гражд.Значение = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
		// Фамилия, Имя, Отчество
		НаборЗаписейПолучателиДохода.ФИО.Значение.Фамилия = СокрЛП(СтрокаДанных.Фамилия);
		НаборЗаписейПолучателиДохода.ФИО.Значение.Имя = СокрЛП(СтрокаДанных.Имя);
		НаборЗаписейПолучателиДохода.ФИО.Значение.Отчество = СокрЛП(СтрокаДанных.Отчество);
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейПолучателиДохода.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
		НаборЗаписейДокУдЛичности.КодУдЛичн = ?(Описание = Неопределено, "", Описание.КодМВД_2015);
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		Атрибуты = АтрибутыВыгружаемогоУзла(СтруктураДанныхСправки);
		Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелДокумент, "НДФЛ-2", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДеревоБезУдаленияАтрибутов(Узел2НДФЛ, СтруктураДанныхСправки);
		
		// Сведения о доходах не заполняются если справка отменяющая
		Если НомерКорректировки = 99 Тогда
			Продолжить;
		КонецЕсли;
		
		// Сведения о доходах
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходахФизическихЛиц.Скопировать(СтруктураОтбора);
		ВычетыПоВидам = СведенияОВычетахФизическихЛиц.Скопировать(СтруктураОтбора);
		Уведомления = УведомленияНОоПравеНаВычеты.Выгрузить(СтруктураОтбора);
		
		
		ДополнитьТаблицуСВычетами(ДоходыПоВидам, СведенияИзКлассификатораВычетов);
		ДополнитьТаблицуСВычетами(ВычетыПоВидам, СведенияИзКлассификатораВычетов);
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			// Сведения о доходах физического лица(по ставке налога)(СведДох)
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			ЗачтеноАвансовыхПлатежей = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ЗачтеноАвансовыхПлатежей", СтавкаНДФЛ);
			
			// Общие суммы дохода и налога по итогам налогового перида(СумИтНалПер)
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СумИтНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			СтруктураСГДНалПер.АвансПлатФикс.Значение = ЗачтеноАвансовыхПлатежей;
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность 
				Или ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
				СтруктураСГДНалПер.НалУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалПеречисл.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				СтруктураСГДНалПер.НалУдержЛиш.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			Иначе
				СтруктураСГДНалПер.НалУдерж.Значение = 0;
				СтруктураСГДНалПер.НалПеречисл.Значение = 0;
				СтруктураСГДНалПер.НалУдержЛиш.Значение = 0;
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж.Значение = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			
			// Стандартные, социальные и имущественные налоговые вычеты(НалВычССИ)
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 
				Или ЗачтеноАвансовыхПлатежей > 0 Тогда
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				ТаблицаВычетов.Очистить();
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = СтрокаВычетов.КодВычетаСтрокой;
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				ТаблицаУведомлений = НаборЗаписейВычет.УведВыч.Значение;
				ТаблицаУведомлений.Очистить();
				Для Каждого СтрокаУведомления Из Уведомления Цикл
					КодВидУвед = "";
					Если СтрокаУведомления.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Имущественные Тогда
						КодВидУвед = "1";
					ИначеЕсли СтрокаУведомления.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Социальные Тогда
						КодВидУвед = "2";
					Иначе
						Продолжить;
					КонецЕсли;
					Уведомление = ТаблицаУведомлений.Добавить();
					Уведомление.КодВидУвед = КодВидУвед;
					Уведомление.НомерУвед = СтрокаУведомления.НомерУведомления;
					Уведомление.ДатаУвед = СтрокаУведомления.ДатаУведомления;
					Уведомление.НОУвед = СтрокаУведомления.КодНалоговогоОрганаУведомления;
				КонецЦикла;
				Если ЗачтеноАвансовыхПлатежей > 0 Тогда
					Уведомление = ТаблицаУведомлений.Добавить();
					Уведомление.КодВидУвед = "3";
					Уведомление.НомерУвед = СтрокаДанных.НомерУведомленияАвансовыеПлатежи;
					Уведомление.ДатаУвед = СтрокаДанных.ДатаУведомленияАвансовыеПлатежи;
					Уведомление.НОУвед = СтрокаДанных.КодНалоговогоОрганаУведомленияАвансовыеПлатежи;
				КонецЕсли;
				Если ТаблицаВычетов.Количество() = 0 Тогда
					НаборЗаписейВычет.ПредВычССИ.НеВыводитьВФайл = Истина;
				КонецЕсли;
				Если ТаблицаУведомлений.Количество() = 0 Тогда
					НаборЗаписейВычет.УведВыч.НеВыводитьВФайл = Истина;
				КонецЕсли;
				НаборЗаписейСведенияОДоходах.НалВычССИ.НеВыводитьВФайл = НаборЗаписейВычет.УведВыч.НеВыводитьВФайл И НаборЗаписейВычет.ПредВычССИ.НеВыводитьВФайл
			Иначе
				НаборЗаписейСведенияОДоходах.НалВычССИ.НеВыводитьВФайл = Истина;
			КонецЕсли;
			
			// Сведения о доходах и соответствующих вычетах по месяцам налогового периода (ДохВыч)
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			ТаблицаДоходов.Очистить();
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для Каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для Каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						НаборЗаписейСведенияОВычетах = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСведенияОВычетах);
						НаборЗаписейСведенияОВычетах.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", НаборЗаписейСведенияОВычетах);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Атрибуты = АтрибутыВыгружаемогоУзла(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДеревоБезУдаленияАтрибутов(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
		КонецЦикла;
	КонецЦикла;
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML
	
КонецФункции

Процедура ЗаполнитьДанныеОтправителя(НаборЗаписейОтправитель, СтруктураДанныхНА)
	
	НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
	НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КППОтправки;
	Если ЗначениеЗаполнено(СтруктураДанныхНА.ФормаРеорганизации) Тогда
		НаборЗаписейОРеорганизации = НаборЗаписейОтправитель.СвРеоргЮЛ.Значение;
		НаборЗаписейОРеорганизации.ФормРеорг.Значение = СтруктураДанныхНА.ФормаРеорганизации;
		Если ЗначениеЗаполнено(СтруктураДанныхНА.ИННРеорганизованнойОрганизации) Тогда
			НаборЗаписейОРеорганизации.ИННЮЛ.Значение = СтруктураДанныхНА.ИННРеорганизованнойОрганизации;
		Иначе
			НаборЗаписейОРеорганизации.Удалить("ИННЮЛ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанныхНА.КППРеорганизованнойОрганизации) Тогда
			НаборЗаписейОРеорганизации.КПП.Значение = СтруктураДанныхНА.КППРеорганизованнойОрганизации;
		Иначе
			НаборЗаписейОРеорганизации.Удалить("КПП");
		КонецЕсли;
	Иначе
		НаборЗаписейОтправитель.Удалить("СвРеоргЮЛ");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТаблицуСВычетами(ТаблицаСВычетами, Вычеты)
	
	ТаблицаСВычетами.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	ТаблицаСВычетами.Колонки.Добавить("ГруппаВычета", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыВычетовПоНДФЛ"));
	
	Для каждого СтрокаТЗ Из ТаблицаСВычетами Цикл
		СтрокаВычета = Вычеты.Найти(СтрокаТЗ.КодВычета, "Ссылка");
		Если СтрокаВычета <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, СтрокаВычета);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеВыгружаемыеКакАтрибуты(СтруктураДанных)
	
	Атрибуты = Новый Структура;
	Для каждого Поле Из СтруктураДанных Цикл
		Если Поле.Значение.ТипЭлемента = "А" Тогда
			Если Поле.Значение.НеВыводитьВФайл = Истина Тогда
				СтруктураДанных.Удалить(Поле.Ключ);
				Продолжить;
			КонецЕсли;
			
			Данные = Поле.Значение.Значение;
			Если Поле.Значение.ТипДанных = "ЧИСЛО" Тогда
				Данные = Формат(Данные,"ЧЦ=" + Поле.Значение.Размер + "; ЧДЦ=" + Поле.Значение.РазрядностьДробнойЧасти + "; ЧРД=.; ЧН=; ЧГ=0")
			ИначеЕсли Поле.Значение.ТипДанных = "ДАТА" Тогда
				Если Не ЗначениеЗаполнено(Данные) Тогда
					Данные = ""
				Иначе
					Данные = Формат(Данные,"ДЛФ=D");
				КонецЕсли;
			КонецЕсли;
			Атрибуты.Вставить(Поле.Ключ, Данные);
			СтруктураДанных.Удалить(Поле.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Атрибуты
	
КонецФункции

Функция АтрибутыВыгружаемогоУзла(СтруктураДанных, НеВыводитьАтрибуты = Истина)
	
	Атрибуты = Новый Структура;
	Для Каждого Поле Из СтруктураДанных Цикл
		Если Поле.Значение.ТипЭлемента = "А" Тогда
			Если Поле.Значение.НеВыводитьВФайл = Истина Тогда
				Продолжить;
			КонецЕсли;
			
			Данные = Поле.Значение.Значение;
			Если Поле.Значение.ТипДанных = "ЧИСЛО" Тогда
				Данные = Формат(Данные,"ЧЦ=" + Поле.Значение.Размер + "; ЧДЦ=" + Поле.Значение.РазрядностьДробнойЧасти + "; ЧРД=.; ЧН=; ЧГ=0")
			ИначеЕсли Поле.Значение.ТипДанных = "ДАТА" Тогда
				Если Не ЗначениеЗаполнено(Данные) Тогда
					Данные = ""
				Иначе
					Данные = Формат(Данные,"ДЛФ=D");
				КонецЕсли;
			КонецЕсли;
			Атрибуты.Вставить(Поле.Ключ, Данные);
			Поле.Значение.НеВыводитьВФайл = НеВыводитьАтрибуты;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Атрибуты
	
КонецФункции

#КонецОбласти

#КонецЕсли
