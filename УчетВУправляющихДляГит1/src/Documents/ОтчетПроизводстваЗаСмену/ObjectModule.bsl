#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда

		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		Комментарий   = Основание.Комментарий;
		Ответственный = Основание.Ответственный;

		ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат = Истина;

		Для Каждого ТекСтрокаУслуги Из Основание.Услуги Цикл
			НоваяСтрока = Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаУслуги);
			НоваяСтрока.Счет = ТекСтрокаУслуги.СчетУчета;
			НоваяСтрока.НоменклатурнаяГруппа = ТекСтрокаУслуги.Номенклатура.НоменклатурнаяГруппа;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ
//

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	Иначе
		ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат = Истина;
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	ЗаполнениеДокументов.ЗаполнитьПодразделениеЗатрат(ПодразделениеЗатрат, Организация);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если Материалы.Количество() > 0 Тогда
		МассивМатериалы = Новый Массив(Материалы.Количество());
		
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "Себестоимость");
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "ДокументОприходования");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если УчетнаяПолитика.СпособОценкиМПЗ(Организация, Дата) <> Перечисления.СпособыОценки.ФИФО
		И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов")
		И Материалы.Количество() > 0 Тогда
		
		Материалы.ЗагрузитьКолонку(Новый Массив(Материалы.Количество()), "ДокументОприходования");
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ОтчетПроизводстваЗаСмену.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	Документы.ОтчетПроизводстваЗаСмену.ДобавитьКолонкуСодержание(ПараметрыПроведения.ПлановаяСтоимостьПродукцииТаблица);

	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.СписаниеМатериаловТаблица,
		ПараметрыПроведения.СписаниеМатериаловРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеМатериалы);

	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИП = Документы.ОтчетПроизводстваЗаСмену.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.ВыпускПродукцииТаблица,
		ПараметрыПроведения.ВыпускУслугТаблица,
		ПараметрыПроведения.ВыпускОтходовТаблица,
		ПараметрыПроведения.Реквизиты);
	
	ТаблицыСписанияМПЗИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП.ТаблицаМатериалов, ПараметрыПроведения.СписаниеМатериаловРеквизиты, Отказ);
		
	ТаблицаПоступлениеПродукцииИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП.ПолученоПродукции,
		ПараметрыПроведения.СписаниеМатериаловРеквизиты);
		
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Выпуск продукции, полуфабрикатов, материалов, товаров
	УчетПроизводства.СформироватьДвиженияПлановаяСтоимостьВыпущеннойПродукции(
		ПараметрыПроведения.ПлановаяСтоимостьПродукцииТаблица,
		ПараметрыПроведения.ПлановаяСтоимостьПродукцииРеквизиты, Движения, Отказ);

	УчетПроизводства.СформироватьДвиженияВыпускПродукцииУслуг(
		ПараметрыПроведения.ВыпускПродукцииТаблица,
		ПараметрыПроведения.ВыпускПродукцииРеквизиты, Движения, Отказ);

	// Оказание услуг собственным производственным подразделениям
	УчетПроизводства.СформироватьДвиженияПлановаяСтоимостьВыпущенныхУслуг(
		ПараметрыПроведения.ПлановаяСтоимостьУслугТаблица,
		ПараметрыПроведения.ПлановаяСтоимостьУслугРеквизиты, Движения, Отказ);

	УчетПроизводства.СформироватьДвиженияВыпускПродукцииУслуг(
		ПараметрыПроведения.ВыпускУслугТаблица,
		ПараметрыПроведения.ВыпускУслугРеквизиты, Движения, Отказ);

	// Выпуск возвратных отходов
	УчетПроизводства.СформироватьДвиженияВыпускОтходов(
		ПараметрыПроведения.ВыпускОтходовТаблица,
		ПараметрыПроведения.ВыпускОтходовРеквизиты, Движения, Отказ);

	// Списание материалов на расходы производства
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.СписаниеМатериаловРеквизиты, Движения, Отказ);

	// Учет НДС
	// Оприходование готовой продукции
	УчетНДСБП.СформироватьДвиженияОприходованиеТоваров(
		ПараметрыПроведения.ПродукцияНДС, Неопределено,
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
	// Списание материалов на расходы
	УчетНДСБП.СформироватьДвиженияСписаниеТоваровНаРасходы(
		ПараметрыПроведения.МатериалыНДС, ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);
	// Оприходование возвратных отходов
	УчетНДСБП.СформироватьДвиженияОприходованиеТоваров(
		ПараметрыПроведения.ОтходыНДС, Неопределено,
		ПараметрыПроведения.РеквизитыНДС, Движения, Отказ);

	// УСН
	СуммаСторноРасхода = 0;
	УчетУСН.ПоступлениеРасходовУСН(ПараметрыПроведения.ПоступлениеРасходовУСНТаблицаРасходов,
		ПараметрыПроведения.ПоступлениеРасходовУСНРеквизиты, СуммаСторноРасхода, Движения, Отказ);

	Если НЕ Отказ И Движения.РасходыПриУСН.Количество()>0 Тогда
		Движения.РасходыПриУСН.Записать(Истина);
		Движения.РасходыПриУСН.Записывать = Ложь;
	КонецЕсли;
	
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
	
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП,
		ПараметрыПроведения.СписаниеМатериаловРеквизиты, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП,
		ТаблицыСписанияМПЗИП.СтоимостьПродукции,
		ПараметрыПроведения.СписаниеМатериаловРеквизиты, Движения, Отказ);
		
	// Регистрация в последовательности.
	ТаблицаТовары = РаботаСПоследовательностями.ПодготовитьТаблицуСчетовТоваровДляАнализа(
		ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.МПЗРегистрацияВПоследовательности);

	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект,
		Отказ,
		,
		ТаблицаТовары,
		Перечисления.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;

	Если Отказ Тогда
		Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Дата) Тогда
			ТекстСообщения = НСтр("ru = 'Не задана учетная политика организации %1 на %2.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, Организация, Формат(Дата, "ДФ=dd.MM.yyyy"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	РаздельныйУчетНДСДо2014Года = УчетнаяПолитика.РаздельныйУчетНДСДо2014Года(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСДо2014Года Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли; 

	Если НДСвСтоимостиТоваров <> Перечисления.ДействиеНДСВСтоимостиТоваров.ВключитьВСтоимость 
		ИЛИ ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетСписанияНДС");
	КонецЕсли; 

	Если Продукция.Количество() = 0 И ВозвратныеОтходы.Количество() = 0 И Материалы.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("Услуги.Количество");
	МассивНепроверяемыхРеквизитов.Добавить("Услуги.СуммаПлановая");
	
	// Документ без данных о выпущенных товарах, услугах или возвращенных отходах
	// считаем заполненным некорректно.
	ОбщегоНазначенияБП.ИсключитьИзПроверкиОсновныеТабличныеЧасти(ЭтотОбъект, "Продукция, Услуги, ВозвратныеОтходы", ПроверяемыеРеквизиты);
	
	Счет43 = ПланыСчетов.Хозрасчетный.ГотоваяПродукция;

	Для Каждого СтрокаТаблицы Из Услуги Цикл

		Префикс = "Услуги[" + Формат((СтрокаТаблицы.НомерСтроки - 1), "ЧН=0; ЧГ=") + "].";
		ИмяСписка = НСтр("ru = 'Услуги'");

		Если СтрокаТаблицы.Количество = 0 И СтрокаТаблицы.СуммаПлановая = 0 Тогда
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Колонка", ,
				НСтр("ru = 'Количество'"),
				Формат(СтрокаТаблицы.НомерСтроки, "ЧН=0; ЧГ="),
				ИмяСписка);
			Поле = Префикс + "Количество";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		
	КонецЦикла;
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СпособУчетаНДС");
	КонецЕсли;
	
	ИспользоватьПлановуюСебестоимость = ПолучитьФункциональнуюОпцию(
		"ИспользоватьПлановуюСебестоимость",
		Новый Структура("Период, Организация", Дата, Организация));
		
	Если НЕ ИспользоватьПлановуюСебестоимость Тогда	
		МассивНепроверяемыхРеквизитов.Добавить("Продукция.СуммаПлановая");
		МассивНепроверяемыхРеквизитов.Добавить("Услуги.СуммаПлановая");
	КонецЕсли;	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

#КонецЕсли
