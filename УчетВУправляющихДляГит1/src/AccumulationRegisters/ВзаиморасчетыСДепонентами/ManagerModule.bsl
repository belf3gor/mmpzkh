#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВедомость() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзаиморасчетыСДепонентами.Регистратор
		|ПОМЕСТИТЬ ВТРегистраторы
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
		|ГДЕ
		|	ВзаиморасчетыСДепонентами.Ведомость <> ВзаиморасчетыСДепонентами.УдалитьВедомость
		|	И ВзаиморасчетыСДепонентами.УдалитьВедомость В (&СписокПустыхСсылок)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыСДепонентами.Период,
		|	ВзаиморасчетыСДепонентами.Регистратор КАК Регистратор,
		|	ВзаиморасчетыСДепонентами.НомерСтроки,
		|	ВзаиморасчетыСДепонентами.Активность,
		|	ВзаиморасчетыСДепонентами.ВидДвижения,
		|	ВзаиморасчетыСДепонентами.Организация,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыСДепонентами.УдалитьВедомость В (&СписокПустыхСсылок)
		|			ТОГДА ВзаиморасчетыСДепонентами.УдалитьВедомость
		|		ИНАЧЕ ВзаиморасчетыСДепонентами.Ведомость
		|	КОНЕЦ КАК Ведомость,
		|	ВзаиморасчетыСДепонентами.ФизическоеЛицо,
		|	ВзаиморасчетыСДепонентами.Сумма,
		|	ВзаиморасчетыСДепонентами.УдалитьВедомость,
		|	ВзаиморасчетыСДепонентами.НомерПлатежногоДокумента
		|ИЗ
		|	ВТРегистраторы КАК ВТРегистраторы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
		|		ПО ВТРегистраторы.Регистратор = ВзаиморасчетыСДепонентами.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор";
		
	ТипыРеквизитаУдалитьВедомость = Метаданные.РегистрыНакопления.ВзаиморасчетыСДепонентами.Реквизиты.УдалитьВедомость.Тип.Типы();
	СписокПустыхСсылок = Новый Массив;
	Для каждого ТипРеквизита Из ТипыРеквизитаУдалитьВедомость Цикл
		СписокПустыхСсылок.Добавить(Новый (ТипРеквизита));
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СписокПустыхСсылок", СписокПустыхСсылок);
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			
			Набор = РегистрыНакопления.ВзаиморасчетыСДепонентами.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			Пока Выборка.Следующий() Цикл
				
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				
			КонецЦикла;
			
			Набор.ОбменДанными.Загрузка = Истина;
			Набор.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли