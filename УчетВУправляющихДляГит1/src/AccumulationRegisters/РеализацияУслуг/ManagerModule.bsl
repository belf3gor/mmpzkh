#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ТребуетсяСчетРасходовПоОказаниюУслуг(Период, Организация) Экспорт
	
	Если Не УчетнаяПолитика.ОказаниеУслуг(Организация, Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПорядокСписания = УчетнаяПолитика.ПорядокСписанияРасходовНаСебестоимостьУслуг(Организация, Период);
	
	Возврат ПорядокСписания = Перечисления.ПорядокСписанияРасходовНаСебестоимостьУслуг.СУчетомВыручки;
	
КонецФункции

Процедура ДобавитьДвижения(НаборЗаписей, Услуги, Выручка, Реквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(Услуги)
	 Или Не ЗначениеЗаполнено(Реквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	// Собственно добавление движений - в ДобавитьДвиженияПоВалидированнымДанным()
	// Здесь - только валидация исходных данных
	
	ОписаниеТаблиц = ОбщегоНазначенияБПВызовСервера.НовыйОписаниеТаблицПараметровПроведения();
	
	// Услуги
	Описание = ОбщегоНазначенияБПВызовСервера.ДобавитьОписаниеТаблицыПараметровПроведения(
		ОписаниеТаблиц,
		"Услуги", 
		Услуги);
	Если Выручка <> Неопределено Тогда
		Описание.Колонки.Добавить("ИмяСписка");
		Описание.Колонки.Добавить("НомерСтроки");
	КонецЕсли;
	Описание.Колонки.Добавить("НоменклатурнаяГруппа");
	Описание.Колонки.Добавить("СчетРасходов");
	Описание.Колонки.Добавить("Сумма");
	
	// Выручка
	Описание = ОбщегоНазначенияБПВызовСервера.ДобавитьОписаниеТаблицыПараметровПроведения(
		ОписаниеТаблиц,
		"Выручка", 
		Выручка);
	Описание.Колонки.Добавить("ИмяСписка");
	Описание.Колонки.Добавить("НомерСтроки");
	Описание.Колонки.Добавить("СуммаБУ");
	Описание.Колонки.Добавить("СуммаНДСРуб");
	
	// Реквизиты

	Описание = ОбщегоНазначенияБПВызовСервера.ДобавитьОписаниеТаблицыПараметровПроведения(
		ОписаниеТаблиц,
		"Реквизиты",
		Реквизиты);
	Описание.Колонки.Добавить("Период");        // <Дата> - период движений - дата документа
	Описание.Колонки.Добавить("Организация");   // <СправочникСсылка.Организации>
	Описание.Колонки.Добавить("Подразделение"); // <СправочникСсылка.ПодразделенияОрганизаций> - обособленное подразделение, по которому отражена выручка
	
	ОписаниеТаблиц.Добавить(Описание);
	
	// Компонуем вместе
	Параметры = ОбщегоНазначенияБПВызовСервера.ПодготовитьТаблицыПараметрыПроведения(ОписаниеТаблиц);

	// Собственно формирование движений
	ДобавитьДвиженияПоВалидированнымДанным(
		НаборЗаписей, 
		Параметры.Услуги, 
		Параметры.Выручка, 
		Параметры.Реквизиты[0]);
	
КонецПроцедуры

Процедура ДобавитьДвиженияПоВалидированнымДанным(НаборЗаписей, Услуги, Выручка, Реквизиты)
	
	// Уточним сумму выручки в соответствии с курсами аванса
	Если Выручка.Количество() > 0 Тогда
		КлючевыеПоля = "ИмяСписка, НомерСтроки";
		Услуги.Индексы.Добавить(КлючевыеПоля);
		Отбор = Новый Структура(КлючевыеПоля);
		Для Каждого СтрокаВыручка Из Выручка Цикл
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаВыручка);
			Для Каждого СтрокаУслуги Из Услуги.НайтиСтроки(Отбор) Цикл
				СтрокаУслуги.Сумма = СтрокаВыручка.СуммаБУ - СтрокаВыручка.СуммаНДСРуб;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
		
	// Дополним набор записей	
	Для Каждого СтрокаУслуги Из Услуги Цикл
	
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты,    "Период, Организация, Подразделение");
		ЗаполнитьЗначенияСвойств(Запись, СтрокаУслуги, "СчетРасходов, НоменклатурнаяГруппа, Сумма");
		
	КонецЦикла;
	
	НаборЗаписей.Записывать = Истина;
	
КонецПроцедуры

#КонецЕсли
