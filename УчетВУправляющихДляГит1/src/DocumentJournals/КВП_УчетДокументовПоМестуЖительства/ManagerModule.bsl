
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Печать

#Область Печать

// Функция формирует Таблицу документов для печати.
//
Функция СформироватьИтоговуюТаблицу(Список, Макет) Экспорт
	
	Построитель = Новый ПостроительЗапроса;
	
	Если Макет = "ПФ_MXL_Форма_13" Тогда
		
		Построитель.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Ссылка КАК ДокСсылка,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Дата,
			|	1 КАК ВидДокумента
			|ИЗ
			|	Документ.КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства КАК КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства
			|{ГДЕ
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Ссылка.*,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.ПометкаУдаления,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Номер,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Дата,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Проведен,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Организация.*,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.ЛицевойСчет.*,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Проживающий.*,
			|	КВП_ЗаявлениеОРегистрацииОСнятииСРегистрационногоУчетаПоМестуЖительства.Комментарий}
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Ссылка,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Дата,
			|	2
			|ИЗ
			|	Документ.КВП_СвидетельствоОРегистрацииПоМестуЖительства КАК КВП_СвидетельствоОРегистрацииПоМестуЖительства
			|{ГДЕ
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Ссылка.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.ПометкаУдаления,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Номер,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Дата,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Проведен,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Организация.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.ЛицевойСчет.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Проживающий.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуЖительства.Комментарий}";
			
	Иначе
			
		Построитель.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Ссылка КАК ДокСсылка,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Дата
			|ИЗ
			|	Документ.УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства КАК УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства
			|{ГДЕ
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Ссылка.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.ПометкаУдаления,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Номер,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Дата,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Проведен,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Организация.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.ЛицевойСчет.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Проживающий.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуЖительства.Комментарий}"
			
	КонецЕсли;
		
	Для Каждого ТекОтбор Из Список.Отбор.Элементы Цикл
			
		Если ТекОтбор.Использование И Не ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип") Тогда
			
			НовыйОтбор = Построитель.Отбор.Добавить(Строка(ТекОтбор.ЛевоеЗначение));
			НовыйОтбор.ВидСравнения  = ВидСравнения[Строка(ТекОтбор.ВидСравнения)];
			НовыйОтбор.Значение      = ТекОтбор.ПравоеЗначение;
			НовыйОтбор.Использование = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Принудительно добавляем отбор "ПометкаУдаления".
	НовыйОтбор = Построитель.Отбор.Добавить("ПометкаУдаления");
	НовыйОтбор.ВидСравнения  = ВидСравнения.Равно;
	НовыйОтбор.Значение      = Ложь;
	НовыйОтбор.Использование = Истина;
	
	Построитель.ЗаполнитьНастройки();
	
	Построитель.Выполнить();
	
	ТаблицаДок = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаДок;
	
КонецФункции

// Функция формирует табличный документ по форме №4.
//
Функция ПечатьФормы(МассивОбъектов, ОбъектыПечати, МакетПФ)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + МакетПФ;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет(МакетПФ);
	
	Страница1 = Макет.ПолучитьОбласть("Страница1");
	ОблСтрока = Макет.ПолучитьОбласть("Страница1_1");
	
	ТабДокумент.Вывести(Страница1);
	
	нпп = 1;
	
	СтруктураПараметровМакета = Новый Структура("НПП,СведенияОЗаявителе,ДатаПоступления,ДатаРегистрации,ДокУЛ,АдресМестаЖительства,АдресПребывания");
	
	Для Каждого ТекСтрока Из МассивОбъектов Цикл
		
		СведенияОЗаявителе = ТекСтрока.Проживающий.Наименование;
		
		Если ЗначениеЗаполнено(ТекСтрока.Проживающий.Физлицо.ДатаРождения) Тогда
			СведенияОЗаявителе = СведенияОЗаявителе + ", " + Формат(ТекСтрока.Проживающий.Физлицо.ДатаРождения, "ДФ=yyyy") + " г.р.";
		КонецЕсли;
		
		МестоРегистрации = ПолучитьАдрес(ТекСтрока.Проживающий.Владелец.Адрес.Владелец, Перечисления.КВП_ВидыАдресов.Здание, "Рег");
		ПредставлениеАдреса = ПолучитьАдресПомещения(МестоРегистрации.ПредставлениеРег, ТекСтрока.Проживающий.Владелец.Адрес);
		
		ПаспортныеДанные = ПолучитьПаспортныеДанныеПроживающего(ТекСтрока.Проживающий, ТекСтрока.Дата);
		
		СтруктураПараметровМакета.СведенияОЗаявителе   = СведенияОЗаявителе;
		СтруктураПараметровМакета.ДатаПоступления      = Формат(ТекСтрока.Дата, "ДЛФ=Д");
		
		Если МакетПФ = "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Форма_13" Тогда
			
			СтруктураПараметровМакета.ДатаРегистрации = ?(ТипЗнч(ТекСтрока) = Тип("ДокументСсылка.КВП_СвидетельствоОРегистрацииПоМестуЖительства"), Формат(ТекСтрока.Дата, "ДЛФ=Д"), "");
			СтруктураПараметровМакета.АдресМестаЖительства = ПредставлениеАдреса;
			
		Иначе	
			
			СтруктураПараметровМакета.ДатаПоступления = ТекСтрока.Номер + " от "+Формат(ТекСтрока.Дата, "ДЛФ=Д");
			СтруктураПараметровМакета.АдресПребывания = ПредставлениеАдреса;
			
		КонецЕсли;	
		
		// Если Документ - Свидетельство о рождении, тогда записываем данные в таблицу.
		Если ПаспортныеДанные.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении Тогда
			
			СтруктураПараметровМакета.ДокУЛ                = Строка(ПаспортныеДанные.ВидДокумента) 
											   + ?(ЗначениеЗаполнено(ПаспортныеДанные.СерияДокумента)," серии ", "") 
											   + Строка(ПаспортныеДанные.СерияДокумента) 
											   + ?(ЗначениеЗаполнено(ПаспортныеДанные.НомерДокумента), " номер ", "") 
											   + Строка(ПаспортныеДанные.НомерДокумента);
		КонецЕсли;
		
		СтруктураПараметровМакета.НПП = нпп;
		
		ОблСтрока.Параметры.Заполнить(СтруктураПараметровМакета);
		
		ТабДокумент.Вывести(ОблСтрока);
		
		нпп = нпп + 1;
		
	КонецЦикла;
	
	ТабДокумент.ПовторятьПриПечатиСтроки =ТабДокумент.Область(4, , 4);
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Форма_13") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Форма_13", "Форма №13", ПечатьФормы(МассивОбъектов, ОбъектыПечати, "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Форма_13"));
	КонецЕсли;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Реестр_по_пребыванию") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Реестр_по_пребыванию", "Реестр договоров безвоздмездного использования", ПечатьФормы(МассивОбъектов, ОбъектыПечати, "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Реестр_по_пребыванию"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли