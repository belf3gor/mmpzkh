
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Печать

#Область Печать

// Функция формирует Таблицу документов для печати.
//
Функция СформироватьИтоговуюТаблицу(Список, Макет) Экспорт
	
	Построитель = Новый ПостроительЗапроса;
	
	Если Макет = "ПФ_MXL_Форма_4" Тогда
		
		Построитель.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Ссылка КАК ДокСсылка,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Дата
			|ИЗ
			|	Документ.КВП_ЗаявлениеОРегистрацииПоМестуПребывания КАК КВП_ЗаявлениеОРегистрацииПоМестуПребывания
			|{ГДЕ
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Ссылка.*,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.ПометкаУдаления,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Номер,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Дата,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Проведен,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Организация.*,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.ЛицевойСчет.*,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Проживающий.*,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.Комментарий,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.ДатаНачалаРегистрации,
			|	КВП_ЗаявлениеОРегистрацииПоМестуПребывания.ДатаОкончанияРегистрации}
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Ссылка,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Дата
			|ИЗ
			|	Документ.КВП_СвидетельствоОРегистрацииПоМестуПребывания КАК КВП_СвидетельствоОРегистрацииПоМестуПребывания
			|{ГДЕ
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Ссылка.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.ПометкаУдаления,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Номер,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Дата,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Проведен,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Организация.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.ЛицевойСчет.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Проживающий.*,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.Комментарий,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.ДатаНачалаРегистрации,
			|	КВП_СвидетельствоОРегистрацииПоМестуПребывания.ДатаОкончанияРегистрации}";
		
	Иначе
		Построитель.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Ссылка КАК ДокСсылка,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Дата
			|ИЗ
			|	Документ.УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания КАК УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания
			|{ГДЕ
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Ссылка.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.ПометкаУдаления,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Номер,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Дата,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Проведен,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Организация.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.ЛицевойСчет.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Проживающий.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Проживающий.*,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.СрокПребывания,
			|	УПЖКХ_ДоговорБезвозмездногоПользованияПоМестуПребывания.Комментарий}"
	КонецЕсли;
			
	Для Каждого ТекОтбор Из Список.Отбор.Элементы Цикл
			
		Если ТекОтбор.Использование И Не ТекОтбор.ЛевоеЗначение = Новый  ПолеКомпоновкиДанных("Тип") Тогда
			
			НовыйОтбор = Построитель.Отбор.Добавить(Строка(ТекОтбор.ЛевоеЗначение));
			НовыйОтбор.ВидСравнения  = ВидСравнения[Строка(ТекОтбор.ВидСравнения)];
			НовыйОтбор.Значение      = ТекОтбор.ПравоеЗначение;
			НовыйОтбор.Использование = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Принудительно добавляем отбор "ПометкаУдаления".
	НовыйОтбор = Построитель.Отбор.Добавить("ПометкаУдаления");
	НовыйОтбор.ВидСравнения  = ВидСравнения.Равно;
	НовыйОтбор.Значение      = Ложь;
	НовыйОтбор.Использование = Истина;
			
	Построитель.ЗаполнитьНастройки();
		
	Построитель.Выполнить();
	ТаблицаДок = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаДок;
	
КонецФункции

// Функция формирует табличный документ по форме №4.
//
Функция ПечатьФормы(МассивОбъектов, ОбъектыПечати, МакетПФ)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + МакетПФ;
	
	Макет = УПЖКХ_ТиповыеМетодыСервер.ПолучитьМакет(МакетПФ);
	
	Страница1 = Макет.ПолучитьОбласть("Страница1");
	ОблСтрока = Макет.ПолучитьОбласть("Страница1_1");
	
	ТабДокумент.Вывести(Страница1);
	
	
	нпп = 1;
	
	СтруктураПараметровМакета = Новый Структура("НПП,СведенияОЗаявителе,ДатаПоступления,ДатаИСрокРегистрации,ДокУЛ,АдресПребывания,СрокПребывания");
	
	Для Каждого ТекСтрока Из МассивОбъектов Цикл
		
		СведенияОЗаявителе = ТекСтрока.Проживающий.Наименование;
		
		Если ЗначениеЗаполнено(ТекСтрока.Проживающий.Физлицо.ДатаРождения) Тогда
			СведенияОЗаявителе = СведенияОЗаявителе + ", " + Формат(ТекСтрока.Проживающий.Физлицо.ДатаРождения, "ДФ=yyyy") + " г.р.";
		КонецЕсли;
		
		МестоРегистрации = ПолучитьАдрес(ТекСтрока.Проживающий.Владелец.Адрес.Владелец, Перечисления.КВП_ВидыАдресов.Здание, "Рег");
		ПредставлениеАдреса = ПолучитьАдресПомещения(МестоРегистрации.ПредставлениеРег, ТекСтрока.Проживающий.Владелец.Адрес);
		
		ПаспортныеДанные = ПолучитьПаспортныеДанныеПроживающего(ТекСтрока.Проживающий, ТекСтрока.Дата);
		
		Если МакетПФ = "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Форма_4" Тогда
			
			СтруктураПараметровМакета.ДатаПоступления = Формат(ТекСтрока.Дата, "ДЛФ=Д");
			
			СтруктураПараметровМакета.ДатаИСрокРегистрации = ?(ЗначениеЗаполнено(ТекСтрока.ДатаНачалаРегистрации), "С "      + Строка(Формат(ТекСтрока.ДатаНачалаРегистрации, "ДЛФ=Д")), "")
														   + ?(ЗначениеЗаполнено(ТекСтрока.ДатаОкончанияРегистрации), " по " + Строка(Формат(ТекСтрока.ДатаОкончанияРегистрации, "ДЛФ=Д")), "");
		Иначе
	
			СтруктураПараметровМакета.ДатаПоступления = ТекСтрока.Номер + " от "+Формат(ТекСтрока.Дата, "ДЛФ=Д");
			СтруктураПараметровМакета.СрокПребывания = ТекСтрока.СрокПребывания;
			
		КонецЕсли;
		
		СокрВидДок = СтрЗаменить(ПаспортныеДанные.ВидДокумента.Наименование,"Российской Федерации","РФ");
		
		СтруктураПараметровМакета.ДокУЛ = СокрВидДок 
									    + ?(ЗначениеЗаполнено(ПаспортныеДанные.СерияДокумента)," серии ", "") 
									    + Строка(ПаспортныеДанные.СерияДокумента) 
									    + ?(ЗначениеЗаполнено(ПаспортныеДанные.НомерДокумента), " номер ", "") 
									    + Строка(ПаспортныеДанные.НомерДокумента);
		
		СтруктураПараметровМакета.АдресПребывания = ПредставлениеАдреса;
		СтруктураПараметровМакета.НПП = нпп;
		СтруктураПараметровМакета.СведенияОЗаявителе = СведенияОЗаявителе;
		
		ОблСтрока.Параметры.Заполнить(СтруктураПараметровМакета);
		
		ТабДокумент.Вывести(ОблСтрока);
		
		нпп = нпп + 1;
		
	КонецЦикла;
	
	ТабДокумент.ПовторятьПриПечатиСтроки =ТабДокумент.Область(4, , 4);
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Форма_4") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Форма_4", "Форма №4", ПечатьФормы(МассивОбъектов, ОбъектыПечати, "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Форма_4"));
	КонецЕсли;
	
	Если УПЖКХ_ТиповыеМетодыСервер.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Реестр_по_пребыванию") Тогда
		УПЖКХ_ТиповыеМетодыСервер.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Реестр_по_пребыванию", "Реестр договоров безвоздмездного использования", ПечатьФормы(МассивОбъектов, ОбъектыПечати, "Отчет.КВП_ФормыРегистрационногоУчета.ПФ_MXL_Реестр_по_пребыванию"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли