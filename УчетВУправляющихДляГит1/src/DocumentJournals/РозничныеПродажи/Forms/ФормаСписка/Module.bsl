
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеКассовойСменойДоступно = КассовыеСменыВызовСервераБП.ДоступноУправлениеКассовойСменой();
	ПодключениеКассыДоступно = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Справочники.ПодключаемоеОборудование)
		И ПравоДоступа("Чтение", Метаданные.Справочники.РабочиеМеста);
	
	НастроитьВидимостьЭлементовФормы();
	
	НастроитьПодменюУправленияКассовойСменой(Элементы);
	
	АдресХранилищаНастройкиДинСпискаДляРеестра = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = КассовыеСменыКлиентБП.СобытиеВыполняетсяОперацияКассовойСмены() Тогда
		Доступность = Ложь;
	ИначеЕсли ИмяСобытия = КассовыеСменыКлиентБП.СобытиеЗавершиласьОперацияКассовойСмены() Тогда
		Доступность = Истина;
	ИначеЕсли ИмяСобытия = КассовыеСменыКлиентБП.СобытиеОшибкаОткрытияСмены() Тогда
		ПроверитьНаличиеПодключеннойКассовойТехники();
	ИначеЕсли ИмяСобытия = "ИзменениеСтатусаКассовойСмены" Тогда
		НастроитьПодменюУправленияКассовойСменой(Элементы);
	ИначеЕсли ИмяСобытия = "ОбновитьБаннеры_РозничнаяТорговля" Тогда
		ОбновитьВидимостьБаннера(Элементы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ЗначениеЗаполнено(ОтборДокумент) Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ВыбранноеЗначение = "РозничнаяПродажа" Тогда
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ВидОперации",
				ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Возврат"));
			ЗначенияЗаполнения.Вставить("Основание", ОтборДокумент);
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			ПараметрыФормы.Вставить("ИзменитьВидОперации", Истина);
		Иначе
			ПараметрыФормы.Вставить("Основание", ОтборДокумент);
		КонецЕсли;
		
		ОтборДокумент = Неопределено;
		ОткрытьФорму("Документ." + ВыбранноеЗначение + ".ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыУправленияКассовойСменой

&НаКлиенте
Процедура ОткрытьКассовуюСмену(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		КассовыеСменыКлиентБП.НачатьОткрытиеКассовойСмены(УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		Доступность = Ложь;
		ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
		МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(ПараметрыОперации.Кассир, Истина);
		ОповещениеЗавершения = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(
			ОповещениеЗавершения, УникальныйИдентификатор, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетБезГашения(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		Доступность = Ложь;
		ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
		МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(ПараметрыОперации.Кассир, Истина);
		ОповещениеЗавершения = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьФормированиеОтчетаБезГашения(
			ОповещениеЗавершения, УникальныйИдентификатор, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьКассовуюСмену(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		КассовыеСменыКлиентБП.ЗакрытьСмену(УникальныйИдентификатор, Список.КомпоновщикНастроек);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СоздатьРозничнаяПродажаЧек(Команда)
	
	КлючеваяОперация = "СозданиеФормыРозничнаяПродажа";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	СтруктураОтбора.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Продажа"));
	ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаДокументаОбщая", Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратПоЧеку(Команда)
	
	КлючеваяОперация = "СозданиеФормыРозничнаяПродажа";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	ЗначенияЗаполнения = Новый Структура;
	
	ЗначенияЗаполнения.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Возврат"));
	Если ТекущаяСтрока <> Неопределено
		И ТекущаяСтрока.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Продажа") Тогда
		ЗначенияЗаполнения.Вставить("Основание", ТекущаяСтрока.Ссылка);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("ИзменитьВидОперации", Истина);
	
	ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаДокументаОбщая", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодключаемоеОборудование(Команда)
	
	// Предупреждающий баннер показываем в любом случае, пользователь должен знать, что для корректной работы
	// не хватает подключенного оборудования, даже если у него нет достаточных прав, чтобы самому выполнить подключение
	Если Не ПодключениеКассыДоступно Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'Недостаточно прав для выполнения операции'"));
	Иначе
		ОткрытьФорму("Справочник.ПодключаемоеОборудование.ФормаСписка", , , , , ,
			Новый ОписаниеОповещения("ОповещениеОбновленияБаннера", ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВидовОплат(Команда)
	
	ОткрытьФорму("Справочник.ВидыОплатОрганизаций.ФормаСписка", , , , , ,
		Новый ОписаниеОповещения("ОповещениеОбновленияБаннера", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОсновании(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",
		?(ПустаяСтрока(КлючНазначенияИспользования), "ДокументыРозничнойТорговли", КлючНазначенияИспользования));
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОтборДокумент = ТекущиеДанные.Ссылка;
		ПараметрыФормы.Вставить("Основание", ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ВыборТипаДокументаПоОснованию", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

#Область СлужебныеПроцедурыИФункцииБСП

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	Если Команда.Имя = "ПодменюПечатьОбычное_Реестр" Тогда
		НастройкиДинамическогоСписка();
	КонецЕсли;
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	ОбновитьДоступностьКомандыСоздатьНаОсновании();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКомандыСоздатьНаОсновании()
	
	Элементы.СоздатьНаОсновании.Доступность = Элементы.Список.ТекущаяСтрока <> Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеВидимостьюИДоступностьюЭлементовФормы

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы()
	
	ОбновитьВидимостьБаннера(Элементы);
	
	ДоступСозданиеРозничнойПродажи = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.РозничнаяПродажа);
	
	Если ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(Метаданные.Документы.РозничнаяПродажа) Тогда
		Элементы.ЧекСоздать.Видимость = ДоступСозданиеРозничнойПродажи;
		Элементы.ВозвратСоздать.Видимость = ДоступСозданиеРозничнойПродажи;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПодменюУправленияКассовойСменой(Элементы)
	
	Параметры = ПараметрыПодменюУправленияКассовойСменой();
	Если Параметры <> Неопределено Тогда
		ДоступныеКоманды = Параметры.ДоступныеКоманды;
		Для Каждого Команда Из Элементы.КассоваяСменаПодменю.ПодчиненныеЭлементы Цикл
			Команда.Доступность
				= ДоступныеКоманды.Найти(Команда.Имя) <> Неопределено;
		КонецЦикла;
		Элементы.КассоваяСменаПодменю.Картинка = Параметры.КартинкаСостоянияСмены;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьБаннера(Элементы)
	
	Баннер = ИмяВидимогоБаннераНаСервере();
	Если ЗначениеЗаполнено(Баннер)
		И Элементы.БаннерСтраницы.ПодчиненныеЭлементы.Найти(Баннер) <> Неопределено Тогда
		Элементы.БаннерСтраницы.ТекущаяСтраница = Элементы[Баннер];
	Иначе
		Элементы.БаннерСтраницы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Проверяет есть ли хоть один экземпляр подключенной контрольно-кассовой техники
// и в случае его отсутствия предлагает пользователю перейти к настройке
// подключаемого оборудования
//
&НаКлиенте
Процедура ПроверитьНаличиеПодключеннойКассовойТехники()
	
	ТипыКассовойТехники = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
	ПодключеннаяКассоваяТехника = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам(ТипыКассовойТехники);
	Если ПодключеннаяКассоваяТехника.Количество() = 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПерейтиКПодключаемомуОборудованиюЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru =
			|'Касса не подключена, работа с кассовой сменой недоступна.
			|Перейти к подключению оборудования?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Функция ДоступнаРаботаСКассовойСменой()
	
	Если Не УправлениеКассовойСменойДоступно Тогда
		ПоказатьПредупреждение( , НСтр("ru='Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	Возврат УправлениеКассовойСменойДоступно;
	
КонецФункции

&НаКлиенте
Процедура ОперацияЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Доступность = Истина;
	
	Если РезультатВыполнения <> Неопределено И Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОбновленияБаннера(Результат = Неопределено, Параметры = Неопределено) Экспорт
	
	Оповестить("ОбновитьБаннеры_РозничнаяТорговля");
	
КонецПроцедуры

&НаСервере
Процедура НастройкиДинамическогоСписка()
	
	Отчеты.РеестрДокументов.НастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыПодменюУправленияКассовойСменой()
	
	Параметры = НовыеПараметрыПодменюУправленияКассовойСменой();
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьФискальныйРегистратор") Тогда
		Параметры.ДоступныеКоманды = ДоступныеКомандыПодменюУправленияКассовойСменой(Неопределено);
		Параметры.КартинкаСостоянияСмены
			= КассовыеСменыВызовСервераБП.ПиктограммаСостоянияКассовойСмены(Истина);
		Возврат Параметры;
	КонецЕсли;
	
	СменаОткрыта = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ТипыОборудования = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
	СписокДоступныхУстройств = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам(ТипыОборудования);
	Для Каждого Устройство Из СписокДоступныхУстройств Цикл
		ОписаниеПоследнейСмены = КассовыеСменыВызовСервера.ОписаниеПоследнейКассовойСмены(Устройство.Ссылка);
		Если ОписаниеПоследнейСмены <> Неопределено
			И ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
			СменаОткрыта = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДоступныеКоманды = ДоступныеКомандыПодменюУправленияКассовойСменой(СменаОткрыта);
	Параметры.КартинкаСостоянияСмены
		= КассовыеСменыВызовСервераБП.ПиктограммаСостоянияКассовойСмены(СменаОткрыта);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Параметры;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяВидимогоБаннераНаСервере() Экспорт
	
	ИмяБаннера = ЖурналыДокументов.РозничныеПродажи.ИмяВидимогоБаннера_РозничнаяТорговля();
	Возврат ИмяБаннера;
	
КонецФункции

&НаСервереБезКонтекста
Функция НовыеПараметрыПодменюУправленияКассовойСменой()
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДоступныеКоманды");
	Параметры.Вставить("КартинкаСостоянияСмены");
	Возврат Параметры;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДоступныеКомандыПодменюУправленияКассовойСменой(СменаОткрыта)
	
	ИменаДоступныхКоманд = Новый Массив;
	Если СменаОткрыта = Истина Тогда
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОтчетОТекущемСостоянииРасчетов");
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОтчетБезГашения");
		ИменаДоступныхКоманд.Добавить("КассоваяСменаЗакрыть");
	ИначеЕсли СменаОткрыта = Ложь Тогда
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОткрыть");
	ИначеЕсли СменаОткрыта = Неопределено Тогда
		// Не используется подключаемое оборудование
		ИменаДоступныхКоманд.Добавить("КассоваяСменаЗакрыть");
	КонецЕсли;
	Возврат ИменаДоступныхКоманд;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиКПодключаемомуОборудованиюЗавершение(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОткрытьПодключаемоеОборудование(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

















