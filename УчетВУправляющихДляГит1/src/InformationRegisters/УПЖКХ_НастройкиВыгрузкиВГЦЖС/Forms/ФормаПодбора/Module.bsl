
#Область СлужебныеПроцедурыИФункции

&НаСервере
// Функция производит поиск элемента справочника "Виды документов удостоверяющих льготы" по коду.
Функция ПолучитьСсылкуНаЭлемент(КодЧисловой)
	
	Если Источник = "ДокументЛьготы" Тогда
		Возврат Справочники.КВП_ВидыДокументовУдостоверяющихЛьготы.НайтиПоКоду(КодЧисловой);
	ИначеЕсли Источник = "ЭлементЛьготы" Тогда
		Возврат Справочники.КВП_ЛьготныеКатегории.НайтиПоКоду(КодЧисловой);
	ИначеЕсли Источник = "СтепеньРодства" Тогда
		Возврат Справочники.КВП_ТипыРодственныхСвязей.НайтиПоКоду(КодЧисловой);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
Процедура ПолеДокументовЛьготОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Получение значений полей выбранной строки.
	ТабличныйДокумент = ДокументыЛьгот;
	ТекущаяОбласть    = ТабличныйДокумент.ТекущаяОбласть;
	
	ОбластьКодЧисловой  = ТабличныйДокумент.Области.КодЧисловой;
	ОбластьНаименование = ТабличныйДокумент.Области.Наименование;
	
	КодЧисловой  = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьКодЧисловой. Лево,
											 ТекущаяОбласть.Низ, ОбластьКодЧисловой. Право).Текст;
	Наименование = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьНаименование.Лево,
											 ТекущаяОбласть.Низ, ОбластьНаименование.Право).Текст;
	
	// Проверка наличия выбранного вида документа.
	Ссылка = ПолучитьСсылкуНаЭлемент(КодЧисловой);
	
	Если Ссылка <> Неопределено и Не Ссылка.Пустая() Тогда
		
		Если Источник = "ДокументЛьготы" Тогда
			
			ТекстВопроса = "В справочнике ""Виды документов, удостоверяющих льготы"" уже существует элемент с кодом """
						 + КодЧисловой + """! Открыть существующий?";
			
		ИначеЕсли Источник = "ЭлементЛьготы" Тогда
			
			ТекстВопроса = "В справочнике ""Льготные категории"" уже существует элемент с кодом """
						 + КодЧисловой + """! Открыть существующий?";
			
		ИначеЕсли Источник = "СтепеньРодства" Тогда
			
			ТекстВопроса = "В справочнике ""Типы родственных связей"" уже существует элемент с кодом """
						 + КодЧисловой + """! Открыть существующий?";
			
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Ссылка);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена);
		
	Иначе
		
		СоздатьНовыйВидаДокумента(Источник, Наименование, КодЧисловой);
		
	КонецЕсли;
	
КонецПроцедуры // ПолеДокументовЛьготОбработкаРасшифровки()

&НаКлиенте
// Асинхронный обработчик результата опроса пользовтеля.
//
Процедура ПослеЗакрытияВопроса(Ответ, Ссылка) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Отбор = Новый Структура("Ключ", Ссылка);
		
		Если Источник = "ДокументЛьготы" Тогда
			
			ОткрытьФорму("Справочник.КВП_ВидыДокументовУдостоверяющихЛьготы.ФормаОбъекта" , Отбор, ВладелецФормы);
			
		ИначеЕсли Источник = "ЭлементЛьготы" Тогда
			
			ОткрытьФорму("Справочник.КВП_ЛьготныеКатегории.ФормаОбъекта" , Отбор, ВладелецФормы);
			
		ИначеЕсли Источник = "СтепеньРодства" Тогда
			
			ОткрытьФорму("Справочник.КВП_ТипыРодственныхСвязей.ФормаОбъекта" , Отбор, ВладелецФормы);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПослеЗакрытияВопроса()

&НаКлиенте
// Создание нового вида документа.
Процедура СоздатьНовыйВидаДокумента(Источник, Наименование, КодЧисловой)
	
	Если Источник = "ДокументЛьготы" Тогда
		
		ФормаНовогоЭлемента = ПолучитьФорму("Справочник.КВП_ВидыДокументовУдостоверяющихЛьготы.ФормаОбъекта" , , ВладелецФормы);
		
	ИначеЕсли Источник = "ЭлементЛьготы" Тогда
		
		ФормаНовогоЭлемента = ПолучитьФорму("Справочник.КВП_ЛьготныеКатегории.ФормаОбъекта" , , ВладелецФормы);
		
		ФормаНовогоЭлемента.Объект.НаименованиеПолное = СтрПолучитьСтроку(Наименование, 1);
		
	ИначеЕсли Источник = "СтепеньРодства" Тогда
		
		ФормаНовогоЭлемента = ПолучитьФорму("Справочник.КВП_ТипыРодственныхСвязей.ФормаОбъекта" , , ВладелецФормы);
		
	КонецЕсли;
	
	ФормаНовогоЭлемента.Объект.Код          = КодЧисловой;
	ФормаНовогоЭлемента.Объект.Наименование = СтрПолучитьСтроку(Наименование, 1);
	ФормаНовогоЭлемента.Модифицированность  = Истина;
	
	ФормаНовогоЭлемента.Открыть();
	
КонецПроцедуры // СоздатьНовыйВидаДокумента()

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Источник", Источник);
	Если Источник = "ДокументЛьготы" Тогда
		Макет = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ПолучитьМакет("КодыЛьгот");
	ИначеЕсли Источник = "ЭлементЛьготы" Тогда
		Макет = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ПолучитьМакет("КодыЛьготныхКатегорий");
	ИначеЕсли Источник = "СтепеньРодства" Тогда
		Макет = РегистрыСведений.УПЖКХ_НастройкиВыгрузкиВГЦЖС.ПолучитьМакет("КодыСтепенейРодства");
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Макет.Параметры.Расшифровка = Истина; // чтобы работала расшифровка
	
	ТабличныйДокумент = ДокументыЛьгот;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Макет);
	
	Если Источник = "ДокументЛьготы" Тогда
		ТабличныйДокумент.ФиксацияСверху      = ТабличныйДокумент.Области.КодыЛьгот.Верх - 1;
	ИначеЕсли Источник = "ЭлементЛьготы" Тогда
		ТабличныйДокумент.ФиксацияСверху      = ТабличныйДокумент.Области.КодыЛьготныхКатегорий.Верх - 1;
	ИначеЕсли Источник = "СтепеньРодства" Тогда
		ТабличныйДокумент.ФиксацияСверху      = ТабличныйДокумент.Области.КодыСтепенейРодства.Верх - 1;
	КонецЕсли;
	
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриОткрытии" формы.
Процедура ПриОткрытии(Отказ)
	
	Если Источник = "ДокументЛьготы" Тогда
		ЭтотОбъект.Заголовок = "Подбор документов, дающих право на льготу";
	ИначеЕсли Источник = "ЭлементЛьготы" Тогда
		ЭтотОбъект.Заголовок = "Подбор льготных категорий";
	ИначеЕсли Источник = "СтепеньРодства" Тогда
		ЭтотОбъект.Заголовок = "Подбор степеней родства";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти