&НаКлиенте
Перем ЧекиДляФискализации;

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусЧека");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.СтатусЧекаККТВОчереди.Фискализирован;
	ЭлементОтбора.Использование = Истина;
	
	Кассир = "";
	ВыполненаОбработкаИмяКассира = Истина; 
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, ВыполненаОбработкаИмяКассира); 
	Кассир = ?(Не ВыполненаОбработкаИмяКассира, Кассир, НСтр("ru='Администратор'")); 
	
КонецПроцедуры

&НаКлиенте
Процедура ФискализироватьЧекНаККТ(Команда)
	
	ЧекиДляФискализации = ВыбранныеЧекиДляФискализации();
	
	ВыбратьФискальноеУстройство();
	
КонецПроцедуры

&НаКлиенте
Процедура ФискализироватьВсеЧекиНаККТ(Команда)
	
	ЧекиДляФискализации = ВсеЧекиДляФискализации();
	
	ВыбратьФискальноеУстройство();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьФискальноеУстройство()
	
	НомерСтроки = 0;
	
	ИдентификаторУстройстваККТ = Неопределено;
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ККТ");
	
	ПослеВыбратьУстройство = Новый ОписаниеОповещения("ВыбратьФискальноеУстройство_Завершение", ЭтотОбъект, Параметры);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ПослеВыбратьУстройство, ПоддерживаемыеТипыВО,
			НСтр("ru='Выберите фискальное устройство'"),
			НСтр("ru='Фискальное устройство не подключено.'"), 
			НСтр("ru='Фискальное устройство не выбрано.'"), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФискальноеУстройство_Завершение(ИдентификаторУстройства, Параметры) Экспорт
	
	Если ИдентификаторУстройства <> Неопределено Тогда
		ИдентификаторУстройстваККТ = ИдентификаторУстройства;
		Элементы.ФормаПробитьЧекиНаККТ.Доступность = Ложь;
		НачатьФискализациюЧеков();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Фискальное устройство не выбрано.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеЧекиДляФискализации()
	
	Результат = Новый Массив();
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для Каждого КлючЗаписи Из ВыделенныеСтроки Цикл
		Данные = МенеджерОборудованияВызовСервера.ДанныеЧекаВОчереди(КлючЗаписи.ИдентификаторЗаписи);
		ЧекДляфискализации = Новый Структура();
		ЧекДляфискализации.Вставить("ИдентификаторЗаписи", Данные.ИдентификаторЗаписи);
		ЧекДляфискализации.Вставить("СтатусЧека", Данные.СтатусЧека);
		Результат.Добавить(Данные);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВсеЧекиДляФискализации()
	
	Результат = Новый Массив();
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначений = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для Каждого Значение Из ТаблицаЗначений Цикл
		ЧекДляфискализации = Новый Структура();
		ЧекДляфискализации.Вставить("ИдентификаторЗаписи", Значение.ИдентификаторЗаписи);
		ЧекДляфискализации.Вставить("СтатусЧека", Значение.СтатусЧека);
		Результат.Добавить(ЧекДляфискализации);
	КонецЦикла;
	
	Возврат Результат;   

КонецФункции

&НаКлиенте
Процедура НачатьФискализациюЧеков()
	
	Если НомерСтроки < ЧекиДляФискализации.Количество() Тогда
		
		Данные = ЧекиДляФискализации[НомерСтроки];
		НомерСтроки = НомерСтроки + 1;
		
		Если Данные.СтатусЧека <> ПредопределенноеЗначение("Перечисление.СтатусЧекаККТВОчереди.Фискализирован") Тогда
			ОбщиеПараметры = МенеджерОборудованияВызовСервера.ДанныеЧекаВОчереди(Данные.ИдентификаторЗаписи).ДанныеЧека;
			ОбщиеПараметры.Кассир = Кассир;
			ОписаниеОповещения = Новый ОписаниеОповещения("НачатьФискализациюЧеков_Завершение", ЭтотОбъект, ОбщиеПараметры);
			МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(ОписаниеОповещения, УникальныйИдентификатор, ОбщиеПараметры, ИдентификаторУстройстваККТ);
		Иначе
			НачатьФискализациюЧеков();
		КонецЕсли;
		
	Иначе
		Элементы.ФормаПробитьЧекиНаККТ.Доступность = Истина;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьФискализациюЧеков_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
	    СтатусЧека = ПредопределенноеЗначение("Перечисление.СтатусЧекаККТВОчереди.Фискализирован");
		ТекстСообщения = "";
	Иначе
	    СтатусЧека = ПредопределенноеЗначение("Перечисление.СтатусЧекаККТВОчереди.Ошибка");
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	МенеджерОборудованияВызовСервера.ЗаписатьСтатусЧекаВОчереди(Параметры, СтатусЧека, ТекстСообщения);
	
	НачатьФискализациюЧеков()
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПробитыеПриИзменении(Элемент)
	
	Список.Отбор.Элементы[0].Использование = НЕ ПоказыватьФискализированные;
	
КонецПроцедуры

#КонецОбласти
