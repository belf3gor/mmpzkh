/////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ ФОРМЫ

// Открывает для просмотра текстовой документ
//  
&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Элемент, Кодировка, Заголовок)
	
	СтандартнаяОбработка = Ложь;
	
	ЗагрузитьФайлНаКлиенте(Элемент.ТекстРедактирования, Кодировка, Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлНаКлиенте(ИмяФайла, Кодировка, Заголовок)
	
	ДополнительныеПараметры = Новый Структура("ИмяФайла, Кодировка, Заголовок", ИмяФайла, Кодировка, Заголовок);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьФайлНаКлиентеСозданиеФайла", ЭтотОбъект, ДополнительныеПараметры);
	
	Файл = Новый Файл();
	Файл.НачатьИнициализацию(ОписаниеОповещения, ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлНаКлиентеСозданиеФайла(Файл, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Вставить("Файл", Файл);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьФайлНаКлиентеПроверкаСуществования", ЭтотОбъект, ДополнительныеПараметры);
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлНаКлиентеПроверкаСуществования(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Не найден файл!'"));
		Возврат;
		
	КонецЕсли;
	
	ПомещаемыеФайлы = Новый Массив;
	ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ДополнительныеПараметры.ИмяФайла));
	
	ПомещениеФайловЗавершение = Новый ОписаниеОповещения("ЗагрузитьФайлНаКлиентеЗавешениеПомещения", ЭтотОбъект, ДополнительныеПараметры);
	
	НачатьПомещениеФайлов(ПомещениеФайловЗавершение, ПомещаемыеФайлы, , Ложь, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлНаКлиентеЗавешениеПомещения(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы <> Неопределено 
		И ПомещенныеФайлы.Количество()>0 Тогда
		ОписаниеФайлов = ПомещенныеФайлы.Получить(0);
		АдресФайла     = ОписаниеФайлов.Хранение;
		
		Если АдресФайла = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Текст = ПолучитьТекстовыйДокументИзВременногоХранилищаФайла(АдресФайла, ДополнительныеПараметры.Кодировка);
		Текст.Показать(ДополнительныеПараметры.Заголовок, ДополнительныеПараметры.ИмяФайла);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстовыйДокументИзВременногоХранилищаФайла(АдресФайла, Кодировка)
	
	ИмяВременногоФайла  = ПолучитьИмяВременногоФайла("txt");
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	Текст = Новый ТекстовыйДокумент();
	Если Кодировка = "DOS" Тогда
		Кодир = "cp866";
	Иначе
		Кодир = "windows-1251";
	КонецЕсли;
	
	Текст.Прочитать(ИмяВременногоФайла, Кодир);
	
	Возврат Текст;
	
КонецФункции

&НаКлиенте
Процедура ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, Текст)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбора.Фильтр                      = НСтр("ru = 'Текстовый файл'")+" (*.txt)|*.txt";
	ДиалогВыбора.Заголовок                   = СтрЗаменить(НСтр("ru = 'Выберите файл для &текст& данных из клиента банка'"), "&текст&", Текст);
	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.Расширение                  = "txt";
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПолноеИмяФайла              = Элемент.ТекстРедактирования;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	
	ДополнительныеПараметры = Новый Структура("Текст", Текст);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаДляВыгрузкиИЗагрузкиЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено 
		И ВыбранныеФайлы.Количество()>0 Тогда
		
		ПолноеИмяФайла = ВыбранныеФайлы.Получить(0);
		
		Если ДополнительныеПараметры.Текст = НСтр("ru = 'загрузки'") Тогда
			Запись.ФайлЗагрузки = ПолноеИмяФайла;
		Иначе
			Запись.ФайлВыгрузки = ПолноеИмяФайла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, НСтр("ru = 'загрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, НСтр("ru = 'выгрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлДляПросмотра(Элемент, Запись.Кодировка, НСтр("ru = 'Файл загрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлДляПросмотра(Элемент, Запись.Кодировка, НСтр("ru = 'Файл выгрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		ОрганизацияПриИзмененииСервер(Запись.БанковскийСчет, Запись.Организация, ВалютаРегламентированногоУчета);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОрганизацияПриИзмененииСервер(БанковскийСчет,Организация, ВалютаРегламентированногоУчета)
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(БанковскийСчет,Организация, ВалютаРегламентированногоУчета);
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.БанковскийСчет) Тогда
		Запись.Организация = БанковскийСчетПриИзмененииСервер(Запись.БанковскийСчет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция БанковскийСчетПриИзмененииСервер(БанковскийСчет)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "Владелец");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Программа.СписокВыбора.ЗагрузитьЗначения(УчетДенежныхСредствБП.СписокСовместимыхПрограммКлиентовБанка(Истина));
	
	СписокКодировок = Элементы.Кодировка.СписокВыбора;
	СписокКодировок.Добавить("DOS");
	СписокКодировок.Добавить("Windows");
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если НЕ ЗначениеЗаполнено(Запись.Организация) Тогда
		Запись.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(Запись.Организация) Тогда
			ОрганизацияПриИзмененииСервер(Запись.БанковскийСчет, Запись.Организация, ВалютаРегламентированногоУчета);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
