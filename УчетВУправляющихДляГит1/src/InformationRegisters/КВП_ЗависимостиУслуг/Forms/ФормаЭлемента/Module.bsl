
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста 
// Устанавливает видимость элементов формы.
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	Элементы.Организация.Видимость = Форма.НачислениеЗависимыхУслугВРазрезеОрганизаций;
	Элементы.Объект.Видимость      = Форма.УказыватьЗависимостьУслугВРазрезеЗданий;
	
	Элементы.ГруппаКоэффициенты.Доступность                 = Запись.Действует;
	Элементы.ДополнительныеПараметрыЗависимости.Доступность = Запись.Действует;
	
	Элементы.РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДН.Доступность = Запись.НачислятьПриРаспределенииПоказаний;
	
КонецПроцедуры // УстановитьВидимостьЭлементов()

&НаКлиенте
// Проверка возможности начисления при распределении отрицательного расхода ОДН.
Процедура ПроверитьВозможностьНачисленияПриРаспределенииОтрицательногоРасходаОДН()
	
	Если Запись.РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДН
	   И Не Запись.УслугаОснование.Пустая()
	   И Не УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Запись.УслугаОснование, "РазрешитьРаспределениеОтрицательногоРасходаОПУ") Тогда
		ОповещениеОтветаНаВопрос = Новый ОписаниеОповещения("ЗавершитьОтветНаВопрос", ЭтаФорма);
		ПоказатьВопрос(ОповещениеОтветаНаВопрос, "Распределение отрицательного расхода ОДН услуги-основания запрещено!" + Символы.ПС
				 + "Все равно разрешить начисление при распределении отрицательного расхода ОДН?", РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОтветНаВопрос(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Запись.РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДН = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачислениеЗависимыхУслугВРазрезеОрганизаций = РегистрыСведений.КВП_ЗависимостиУслуг.ПолучитьЗначениеКонстантыНачислениеЗависимыхУслугВРазрезеОрганизаций();
	УказыватьЗависимостьУслугВРазрезеЗданий = РегистрыСведений.КВП_ЗависимостиУслуг.ПолучитьЗначениеКонстантыУказыватьЗависимостьУслугВРазрезеЗданий();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "ПриИзменении" флажка "НачислятьПриРаспределенииПоказаний".
Процедура НачислятьПриРаспределенииПоказанийПриИзменении(Элемент)
	
	Если Не Запись.НачислятьПриРаспределенииПоказаний
	  И Запись.РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДН Тогда
		Запись.РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДН = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" флажка "НачислятьПриРаспределенииПоказаний".
Процедура РазрешитьНачислениеПриРаспределенииОтрицательногоРасходаОДНПриИзменении(Элемент)
	
	ПроверитьВозможностьНачисленияПриРаспределенииОтрицательногоРасходаОДН();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" флажка "НачислятьПриРаспределенииПоказаний".
Процедура УслугаОснованиеПриИзменении(Элемент)
	
	ПроверитьВозможностьНачисленияПриРаспределенииОтрицательногоРасходаОДН();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" флажка "Действует".
Процедура ДействуетПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти