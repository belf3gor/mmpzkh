#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(СтруктурнаяЕдиница)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ИзменениеОбъектаРазрешено(СтруктурнаяЕдиница)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьПодчиненныеСтруктурныеЕдиницы(СтруктурныеЕдиницы, РежимОбновления = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Справочники.ПодразделенияОрганизаций.ТекстЗапросаСравненияНаборовСтруктурныхЕдиниц("ИсторияРегистрацийВНалоговомОргане", "РегистрацияВНалоговомОргане");
	
	Для Каждого СтрокаСтруктурныеЕдиницы Из СтруктурныеЕдиницы Цикл
		
		Запрос.УстановитьПараметр("ГоловнаяСтруктурнаяЕдиница", СтрокаСтруктурныеЕдиницы.Ключ);
		Запрос.УстановитьПараметр("ПодчиненныеСтруктурныеЕдиницы", СтрокаСтруктурныеЕдиницы.Значение);
		РезультатЗапросов = Запрос.ВыполнитьПакет();
		
		ОсновнойНабор = РезультатЗапросов[РезультатЗапросов.Количество() - 1].Выгрузить();
		Выборка = РезультатЗапросов[РезультатЗапросов.Количество() - 2].Выбрать();
		Пока Выборка.Следующий() Цикл
			НовыйНаборЗаписей = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
			НовыйНаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(Выборка.СтруктурнаяЕдиница);
			ОсновнойНабор.ЗаполнитьЗначения(Выборка.СтруктурнаяЕдиница, "СтруктурнаяЕдиница");
			НовыйНаборЗаписей.Загрузить(ОсновнойНабор);
			
			НовыйНаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			Если РежимОбновления Тогда
				НовыйНаборЗаписей.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			НовыйНаборЗаписей.Записать();
		КонецЦикла;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьИсториюРегистрацийВНалоговомОргане() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИсторияРегистрацийВНалоговомОргане.Период
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		ТекстЗапросаПоРегистрам = "";
		ОписанияРегистров = ЗарплатаКадры.ОписанияРегистровСодержащихРегистрацииВНалоговомОргане();
		
		Для каждого ОписаниеРегистра Из ОписанияРегистров Цикл
			
			Если НЕ ПустаяСтрока(ТекстЗапросаПоРегистрам) Тогда
				
				ТекстЗапросаПоРегистрам = ТекстЗапросаПоРегистрам + 
					"
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|";
				ТекстПоместить = "";
				
			Иначе
				ТекстПоместить = "ПОМЕСТИТЬ ВТВсеЗарегистрированныеПериоды";
			КонецЕсли;
			
			ТекстЗапросаПоРегистрам = ТекстЗапросаПоРегистрам
				+ "ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	НАЧАЛОПЕРИОДА(ВЫБОР КОГДА ИсследуемыйРегистр.Период < ДАТАВРЕМЯ(1900, 1, 1)
				|		ТОГДА ДАТАВРЕМЯ(1900, 1, 1)
				|		ИНАЧЕ ИсследуемыйРегистр.Период
				|	КОНЕЦ, МЕСЯЦ) КАК Период,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ИсследуемыйРегистр.Подразделение.ОбособленноеПодразделение, ЛОЖЬ)
				|			ТОГДА ИсследуемыйРегистр.Подразделение
				|		ИНАЧЕ ИсследуемыйРегистр.Организация
				|	КОНЕЦ КАК СтруктурнаяЕдиница,
				|	ИсследуемыйРегистр.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
				|" + ТекстПоместить + "
				|ИЗ
				|	&ИсследуемыйРегистр КАК ИсследуемыйРегистр";
			
			ТекстЗапросаПоРегистрам = СтрЗаменить(ТекстЗапросаПоРегистрам, "&ИсследуемыйРегистр", ОписаниеРегистра.ПолноеИмяРегистра);
			ТекстЗапросаПоРегистрам = СтрЗаменить(ТекстЗапросаПоРегистрам, "ИсследуемыйРегистр.Период", ОписаниеРегистра.ПутьКПолюПериод);
			
		КонецЦикла;
		
		Запрос.Текст = ТекстЗапросаПоРегистрам + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов() +
		"ВЫБРАТЬ
		|	Организации.Ссылка КАК СтруктурнаяЕдиница,
		|	Организации.РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ВТВсеВладельцыРегистрацийВНалоговомОргане
		|ИЗ
		|	Справочник.Организации КАК Организации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка,
		|	ПодразделенияОрганизаций.РегистрацияВНалоговомОргане
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.ОбособленноеПодразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеЗарегистрированныеПериоды.Период,
		|	ВсеЗарегистрированныеПериоды.СтруктурнаяЕдиница,
		|	МАКСИМУМ(ВсеЗарегистрированныеПериоды.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ВТВсеИспользуемыеПериоды
		|ИЗ
		|	ВТВсеЗарегистрированныеПериоды КАК ВсеЗарегистрированныеПериоды
		|ГДЕ
		|	ВсеЗарегистрированныеПериоды.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеЗарегистрированныеПериоды.Период,
		|	ВсеЗарегистрированныеПериоды.СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеИспользуемыеПериоды.Период,
		|	ВсеИспользуемыеПериоды.СтруктурнаяЕдиница,
		|	ВсеИспользуемыеПериоды.РегистрацияВНалоговомОргане,
		|	МИНИМУМ(ВсеИспользуемыеПериодыИзменений.Период) КАК ПериодИзменения
		|ПОМЕСТИТЬ ВТИспользуемыеПериодыСПериодомИзменения
		|ИЗ
		|	ВТВсеИспользуемыеПериоды КАК ВсеИспользуемыеПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеИспользуемыеПериоды КАК ВсеИспользуемыеПериодыИзменений
		|		ПО ВсеИспользуемыеПериоды.СтруктурнаяЕдиница = ВсеИспользуемыеПериодыИзменений.СтруктурнаяЕдиница
		|			И ВсеИспользуемыеПериоды.РегистрацияВНалоговомОргане <> ВсеИспользуемыеПериодыИзменений.РегистрацияВНалоговомОргане
		|			И ВсеИспользуемыеПериоды.Период < ВсеИспользуемыеПериодыИзменений.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеИспользуемыеПериоды.Период,
		|	ВсеИспользуемыеПериоды.СтруктурнаяЕдиница,
		|	ВсеИспользуемыеПериоды.РегистрацияВНалоговомОргане
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ИспользуемыеПериодыСПериодомИзменения.Период) КАК Период,
		|	ИспользуемыеПериодыСПериодомИзменения.СтруктурнаяЕдиница,
		|	ИспользуемыеПериодыСПериодомИзменения.РегистрацияВНалоговомОргане,
		|	ИспользуемыеПериодыСПериодомИзменения.ПериодИзменения
		|ПОМЕСТИТЬ ВТПериодыИзменений
		|ИЗ
		|	ВТИспользуемыеПериодыСПериодомИзменения КАК ИспользуемыеПериодыСПериодомИзменения
		|
		|СГРУППИРОВАТЬ ПО
		|	ИспользуемыеПериодыСПериодомИзменения.СтруктурнаяЕдиница,
		|	ИспользуемыеПериодыСПериодомИзменения.РегистрацияВНалоговомОргане,
		|	ИспользуемыеПериодыСПериодомИзменения.ПериодИзменения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеВладельцыРегистрацийВНалоговомОргане.СтруктурнаяЕдиница,
		|	ЕСТЬNULL(ПериодыИзменений.РегистрацияВНалоговомОргане, ВсеВладельцыРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане,
		|	ЕСТЬNULL(ПериодыИзменений.Период, &ПериодПоУмолчанию) КАК Период
		|ИЗ
		|	ВТВсеВладельцыРегистрацийВНалоговомОргане КАК ВсеВладельцыРегистрацийВНалоговомОргане
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыИзменений КАК ПериодыИзменений
		|		ПО ВсеВладельцыРегистрацийВНалоговомОргане.СтруктурнаяЕдиница = ПериодыИзменений.СтруктурнаяЕдиница
		|ГДЕ
		|	(ВсеВладельцыРегистрацийВНалоговомОргане.СтруктурнаяЕдиница ССЫЛКА Справочник.Организации
		|			ИЛИ ВсеВладельцыРегистрацийВНалоговомОргане.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
		|				И ВсеВладельцыРегистрацийВНалоговомОргане.СтруктурнаяЕдиница.ОбособленноеПодразделение)";
		
		Запрос.УстановитьПараметр("ПериодПоУмолчанию", НачалоМесяца(ТекущаяДатаСеанса()));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			ТаблицаНабора = РезультатЗапроса.Выгрузить();
			
			Набор = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
			Набор.Загрузить(ТаблицаНабора);
			Набор.ОбменДанными.Загрузка = Истина;
			Набор.Записать();
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ПодчиненныеСтруктурныеЕдиницы = Справочники.ПодразделенияОрганизаций.ПодчиненныеСтруктурныеЕдиницы(Выборка.СтруктурнаяЕдиница);
				ОбновитьПодчиненныеСтруктурныеЕдиницы(ПодчиненныеСтруктурныеЕдиницы);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИсториюРегистрацийВНалоговомОрганеНаДатуОтсчетаПериодическихСведенийСПериодомМесяц() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОтсчетаПериодическихСведений", ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведенийСПериодомМесяц());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница,
		|	МИНИМУМ(ИсторияРегистрацийВНалоговомОргане.Период) КАК Период
		|ПОМЕСТИТЬ ВТМинимальныеПериодыСтруктурныхЕдиниц
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&ДатаОтсчетаПериодическихСведений КАК Период,
		|	МинимальныеПериодыСтруктурныхЕдиниц.СтруктурнаяЕдиница,
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане
		|ИЗ
		|	ВТМинимальныеПериодыСтруктурныхЕдиниц КАК МинимальныеПериодыСтруктурныхЕдиниц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|		ПО МинимальныеПериодыСтруктурныхЕдиниц.СтруктурнаяЕдиница = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|			И МинимальныеПериодыСтруктурныхЕдиниц.Период = ИсторияРегистрацийВНалоговомОргане.Период
		|ГДЕ
		|	МинимальныеПериодыСтруктурныхЕдиниц.Период > &ДатаОтсчетаПериодическихСведений";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Набор = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
			Набор.Отбор.Период.Установить(Выборка.Период);
			Набор.Отбор.СтруктурнаяЕдиница.Установить(Выборка.СтруктурнаяЕдиница);
			
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			
			Набор.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			Набор.ОбменДанными.Загрузка = Истина;
			Набор.Записать();
			
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ДатаОтсчетаПериодическихСведений() Экспорт
	
	Возврат ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений();
	
КонецФункции

#КонецОбласти

#КонецЕсли