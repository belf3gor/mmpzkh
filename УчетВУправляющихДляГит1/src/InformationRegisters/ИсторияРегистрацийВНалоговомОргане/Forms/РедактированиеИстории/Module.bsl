
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВедущийОбъект", ВедущийОбъект);
	Если Не ЗначениеЗаполнено(ВедущийОбъект) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВладелецРегистрацииВНалоговомОргане", ВладелецРегистрацииВНалоговомОргане);
	Если Не ЗначениеЗаполнено(ВладелецРегистрацииВНалоговомОргане) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДатаОтсчетаПериодическихСведений = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ДатаОтсчетаПериодическихСведений();
	
	Если НЕ ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ИсторияРегистрацийВНалоговомОргане) Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	НаборЗаписей.Загрузить(Параметры.НаборЗаписей.Выгрузить());
	
	УстановитьПризнакПервоначальногоЗначения(НаборЗаписей, ДатаОтсчетаПериодическихСведений);
	УстановитьСобытиеСнятияСУчета(НаборЗаписей);
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Элементы.НаборЗаписей.ТекущаяСтрока = НаборЗаписей[НаборЗаписей.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			
			Элемент.ТекущиеДанные.СтруктурнаяЕдиница = ВедущийОбъект;
			Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане = ПредопределенноеЗначение("Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка");
			
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			
			Если НаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = НаборЗаписей.Получить(1).Период;
			Иначе
				ПоследнийПериод = '00010101000000';
			КонецЕсли;
			
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = НачалоДня(ПоследнийПериод + 60*60*24);
			КонецЕсли;
			
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			
			ЭтотОбъект.ТекущийЭлемент = Элементы.НаборЗаписейРегистрацияВНалоговомОргане;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(НаборЗаписей, ДатаОтсчетаПериодическихСведений);
	УстановитьСобытиеСнятияСУчета(НаборЗаписей);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если НаборЗаписей.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.СнятоСУчета Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	УдалитьСобытиеСнятияСУчета(НаборЗаписей);
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПослеУдаления(Элемент)
	УстановитьСобытиеСнятияСУчета(НаборЗаписей);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеИстории(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьСобытиеСнятияСУчета(НаборЗаписей);
	
	// Устанавливаем период самой первой записи на дату отсчета
	Если НаборЗаписей.Количество() > 0
		И НаборЗаписей[0].Период <> ДатаОтсчетаПериодическихСведений Тогда
		НаборЗаписей[0].Период = ДатаОтсчетаПериодическихСведений;
	КонецЕсли;
	
	ПараметрОповещения = Новый Структура(
		"ВедущийОбъект, ИмяРегистра, НаборЗаписей", 
		ВедущийОбъект, "ИсторияРегистрацийВНалоговомОргане", НаборЗаписей);
	Оповестить("ОтредактированаИстория", ПараметрОповещения, ВедущийОбъект);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории, ДатаОтсчетаПериодическихСведений)
	
	ТаблицаИстории.Сортировать("ПервоначальноеЗначение Убыв, СнятоСУчета, Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = ДатаОтсчетаПериодическихСведений;
	КонецЕсли;
		
КонецПроцедуры

// Добавляет в историю (в конец) служебную строку "Снято с учета" в том случае,
// если в актуальной (последней) регистрации указана дата снятия с учета 
//
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСобытиеСнятияСУчета(ТаблицаИстории)
	
	// Таблица уже отсортирована - см. УстановитьПризнакПервоначальногоЗначения().
	// Последняя строка должна быть актуальным значением, либо снятием с учета.
	
	КоличествоЗаписей = ТаблицаИстории.Количество();
	Если КоличествоЗаписей > 0 Тогда
		
		ПоследняяСтрока = ТаблицаИстории[КоличествоЗаписей-1];
		
		Если ПоследняяСтрока.СнятоСУчета Тогда
			
			// Событие снятия с учета уже есть, но после редактирование может потребоваться его удалить, либо редактировать.
			
			Если КоличествоЗаписей > 1 Тогда
				
				// Как минимум одна значимая запись в истории есть (кроме служебной строки "Снято с учета").
				// Обновим событие снятия с учета из предпоследней строки. 
				ПредпоследняяСтрока = ТаблицаИстории[КоличествоЗаписей-2];
				ДатаСнятияСУчета = ДатаСнятияСУчетаРегистрации(ПредпоследняяСтрока.РегистрацияВНалоговомОргане);
				Если ЗначениеЗаполнено(ДатаСнятияСУчета) Тогда
					// Обновим дату события снятия с учета.
					ПоследняяСтрока.Период = ДатаСнятияСУчета;
				Иначе
					// После редактирования истории в актуальном налоговом органе организация не снята с учета.
					// Нужно удалить служебную запись.
					УдалитьСобытиеСнятияСУчета(ТаблицаИстории);
				КонецЕсли;
				
			Иначе
				// В истории 1 запись, и это служебная запись СнятоСУчета.
				// Так не должно быть - удалим.
				УдалитьСобытиеСнятияСУчета(ТаблицаИстории);
			КонецЕсли;	
			
		Иначе
			
			// В истории нет события снятия с учета.
			// Добавим его, если в актуальном налоговом органе организация снята с учета.
			ДатаСнятияСУчета = ДатаСнятияСУчетаРегистрации(ПоследняяСтрока.РегистрацияВНалоговомОргане);
			Если ЗначениеЗаполнено(ДатаСнятияСУчета) Тогда
				НоваяСтрока = ТаблицаИстории.Добавить();
				НоваяСтрока.СнятоСУчета = Истина;
				НоваяСтрока.Период = ДатаСнятияСУчета;
			КонецЕсли;	
						
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьСобытиеСнятияСУчета(ТаблицаИстории)
	
	СтрокиСнятияСУчета = ТаблицаИстории.НайтиСтроки(Новый Структура("СнятосУчета", Истина));
	
	Если СтрокиСнятияСУчета.Количество() > 0 Тогда
		ТаблицаИстории.Удалить(СтрокиСнятияСУчета[0]);
	КонецЕсли; 
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаСнятияСУчетаРегистрации(РегистрацияВНалоговомОргане)
	
	Возврат РегистрацияВНалоговомОргане.ДатаСнятияСУчета;
	
КонецФункции	

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.СнятоСУчета Тогда
			Продолжить;
		КонецЕсли;	
		
		ИндексСтроки = НаборЗаписей.Индекс(Запись);
		ПрефиксСообщенияСтроки = "НаборЗаписей["+Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ=")+"].";
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И ИндексСтроки > 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.Период)
			И (Запись.Период < ДатаОтсчетаПериодическихСведений) Тогда
			
			СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Нельзя вводить записи с датой меньше %1'"),
									Формат(ДатаОтсчетаПериодическихСведений,"ДЛФ=D" ));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
			
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"Период", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.РегистрацияВНалоговомОргане) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Регистрация в налоговом органе"" не заполнено'");
			НомерСтроки = Формат(НаборЗаписей.Индекс(Запись), "ЧЦ=; ЧДЦ=; ЧГ=");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки+"РегистрацияВНалоговомОргане", , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти