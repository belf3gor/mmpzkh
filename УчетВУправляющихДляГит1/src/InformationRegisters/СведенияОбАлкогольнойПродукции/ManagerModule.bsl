#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
	
Процедура ПереносКодовПродукцииИзСправочника(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	СведенияОбАлкогольнойПродукции.Номенклатура,
	|	ВидыАлкогольнойПродукции.КодВидаПродукции,
	|	ВидыАлкогольнойПродукции.Наименование
	|ИЗ
	|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УдалитьВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СведенияОбАлкогольнойПродукции.УдалитьВидПродукции = ВидыАлкогольнойПродукции.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			Если Не ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Запись = РегистрыСведений.СведенияОбАлкогольнойПродукции.СоздатьМенеджерЗаписи();
            Запись.Номенклатура  = Выборка.Номенклатура;
			Запись.Прочитать();
			
			Если ПустаяСтрока(Запись.КодВида169) Тогда
			 	Запись.КодВида169 = Выборка.КодВидаПродукции;
				Запись.НаименованиеВида169 = Выборка.Наименование;
			КонецЕсли;
			
			Запись.УдалитьВидПродукции = Справочники.УдалитьВидыАлкогольнойПродукции.ПустаяСсылка();
			Запись.Записать(Истина);
									
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			// Если не удалось обработать какой-либо элемент, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось заполнить вид алкогольной продукции ""%1"" по причине:
				|%2'"), 
				Выборка.Номенклатура,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,, 
				Выборка.Номенклатура, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано + ПроблемныхОбъектов = 0 ИЛИ Выборка.Количество() < 1000 Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		
	Иначе
		
		Параметры.ОбработкаЗавершена = Ложь;
		
		Если ОбъектовОбработано = 0 Тогда
			ПараметрыПредметаИсчисления = НСтр("ru = 'элементе, элементах, элементах'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедуре СведенияОбАлкогольнойПродукции.ПереносКодовПродукцииИзСправочника
				|не удалось заполнить вид алкогольной продукции в %1 номенклатуры'"),
				СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(ПроблемныхОбъектов, ПараметрыПредметаИсчисления));
			ВызватьИсключение ТекстСообщения;
		Иначе
			ПараметрыПредметаИсчисления = НСтр("ru = 'элемент, элемента, элементов'");
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,,,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура СведенияОбАлкогольнойПродукции.ПереносКодовПродукцииИзСправочника
				|обработала очередную порцию номенклатуры: %1'"),
				СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(ОбъектовОбработано, ПараметрыПредметаИсчисления)));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список выбора у поля ввода вида продукции.
//
// Параметры:
//  СписокВыбора - СписокЗначений - сюда помещаются виды продукции из макета.
//
Процедура СписокВидовПродукции(СписокВыбора) Экспорт
	
	Макет169 = РегистрыСведений.СведенияОбАлкогольнойПродукции.ПолучитьМакет("Макет169");
	
	Область = Макет169.Области.ВидыПродукции;
	Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		
		Для НомСтр = Область.Верх По Область.Низ Цикл
			
			КодПоказателя = СокрП(Макет169.Область(НомСтр, 1).Текст);
			Если КодПоказателя <> "###" Тогда
				Представление = КодПоказателя + " - " + СокрП(Макет169.Область(НомСтр, 2).Текст);
				СписокВыбора.Добавить(КодПоказателя, Представление); 
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли