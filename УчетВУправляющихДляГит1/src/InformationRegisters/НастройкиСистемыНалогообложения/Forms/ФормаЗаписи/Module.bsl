#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастройкиСистемыНалогообложенияФормы.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ИспользуемыеСистемыНалогообложенияПередЗаписью", 
		РегистрыСведений.НастройкиСистемыНалогообложения.ИспользуемыеСистемыНалогообложения());

	ПараметрыЗаписи.Вставить("АдресХранилищаПереключениеОтложенногоПроведения",
		НастройкиУчетаВызовСервера.ПодготовитьДанныеДляПереключенияОтложенногоПроведения(УникальныйИдентификатор, ТекущийОбъект.Организация));

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Организация", НастройкиСистемыНалогообложения.Организация);
	ПараметрыЗаписи.Вставить("Период",      НастройкиСистемыНалогообложения.Период);
	НастройкиСистемыНалогообложенияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи);
	
	ПроведениеКлиент.ОжидатьПереключенияОтложенногоПроведения(ПараметрыЗаписи.РезультатЗаданияПереключенияОтложенногоПроведения);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ИспользуемыеСистемыНалогообложенияПослеЗаписи", 
		РегистрыСведений.НастройкиСистемыНалогообложения.ИспользуемыеСистемыНалогообложения());
	
	РезультатВыполнения = КалендарьБухгалтера.ЗапуститьЗаполнениеВФоне(УникальныйИдентификатор, ТекущийОбъект.Организация);
	ПараметрыЗаписи.Вставить("РезультатВыполненияЗаданияКалендаряБухгалтера", РезультатВыполнения);

	РезультатЗаданияПереключенияОтложенногоПроведения = НастройкиУчетаВызовСервера.ПроверитьОтложенноеПроведениеПослеИзмененияНастроек(
		УникальныйИдентификатор,
		ПараметрыЗаписи.АдресХранилищаПереключениеОтложенногоПроведения);
	ПараметрыЗаписи.Вставить("РезультатЗаданияПереключенияОтложенногоПроведения", РезультатЗаданияПереключенияОтложенногоПроведения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(НастройкиСистемыНалогообложения.ДатаИзменения) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Применяется с'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "НастройкиСистемыНалогообложения.ДатаИзменения", Отказ);
	КонецЕсли;
	
	ДатаНачалаПрименения = Перечисления.СистемыНалогообложения.ДатаНачалаПрименения(
		НастройкиСистемыНалогообложения.СистемаНалогообложения, НастройкиСистемыНалогообложения.ПрименяетсяУСНПатент);
	Если ДатаНачалаПрименения <> Неопределено И НастройкиСистемыНалогообложения.ДатаИзменения < ДатаНачалаПрименения Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Система налогообложения ""%1"" применяется с %2'"),
			НастройкиСистемыНалогообложения.СистемаНалогообложения,
			Формат(ДатаНачалаПрименения, "ДЛФ=D"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "НастройкиСистемыНалогообложения.ДатаИзменения", Отказ);
	КонецЕсли;
	
	НастройкиСистемыНалогообложенияФормы.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
	Если ЭтоЮрЛицо И НастройкиСистемыНалогообложения.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок") Тогда
		СистемаНалогообложенияПредставление = НастройкиСистемыНалогообложенияФормыКлиентСервер.ИндексСистемыНалогообложения(
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Общая"));
		НастройкиСистемыНалогообложенияФормыКлиент.СистемаНалогообложенияПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(НастройкиСистемыНалогообложения.ДатаИзменения) Тогда
		НастройкиСистемыНалогообложения.Период = НачалоМесяца(НастройкиСистемыНалогообложения.ДатаИзменения);
		ПериодОбработатьИзменение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияПредставлениеПриИзменении(Элемент)
	
	НастройкиСистемыНалогообложенияФормыКлиент.СистемаНалогообложенияПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложенияПереходногоПериодаУСНПриИзменении(Элемент)
	
	НастройкиСистемыНалогообложенияФормыКлиент.ПоложенияПереходногоПериодаУСНПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(НастройкиСистемыНалогообложения.Период));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(НастройкиСистемыНалогообложения.Период));
	ПараметрыВыбора.Вставить("ВидПериода",    ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НачалоПериода = НачалоМесяца(НастройкиСистемыНалогообложения.Период);
	КонецПериода  = КонецМесяца(НастройкиСистемыНалогообложения.Период);
	
	ВыборПериодаКлиент.ПериодОбработкаВыбора(
		Элемент,
		ВыбранноеЗначение,
		СтандартнаяОбработка,
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"),
		Период,
		НачалоПериода,
		КонецПериода);
	
	Модифицированность = Истина;
	
	НастройкиСистемыНалогообложения.Период = НачалоПериода;
	ПериодОбработатьИзменение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ВыборПериодаКлиент.ПериодАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка,
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"),
		Период,
		НачалоМесяца(НастройкиСистемыНалогообложения.Период),
		КонецМесяца(НастройкиСистемыНалогообложения.Период));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	НастройкиУчета.ПодготовитьФормуНаСервере(ЭтотОбъект, НастройкиСистемыНалогообложения);
	Период = ПолучитьПредставлениеПериода(НастройкиСистемыНалогообложения.Период);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	НастройкиСистемыНалогообложения = Форма.НастройкиСистемыНалогообложения;
	
	ИспользоватьДатуИзменения = НастройкиСистемыНалогообложенияФормыВызовСервера.ИспользуетсяДатаИзменения(
		НастройкиСистемыНалогообложения.Организация,
		НастройкиСистемыНалогообложения.СистемаНалогообложения);
	Элементы.ДатаИзменения.Видимость = ИспользоватьДатуИзменения;
	Элементы.Период.Видимость = Не ИспользоватьДатуИзменения;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеПериода(Период)
	
	Возврат БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(Период),
		КонецМесяца(Период),
		Истина);
	
КонецФункции

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(НастройкиСистемыНалогообложения.Организация);
	НастройкиСистемыНалогообложенияФормы.ПодготовитьФормуНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗавершениеВыбора(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		Модифицированность = Истина;
		НастройкиСистемыНалогообложения.Период = РезультатВыбора.НачалоПериода;
		ПериодОбработатьИзменение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработатьИзменение()
	
	Период = ПолучитьПредставлениеПериода(НастройкиСистемыНалогообложения.Период);
	
	Если НачалоМесяца(НастройкиСистемыНалогообложения.ДатаИзменения) <> НастройкиСистемыНалогообложения.Период Тогда
		НастройкиСистемыНалогообложения.ДатаИзменения = НастройкиСистемыНалогообложения.Период;
	КонецЕсли;
	
	НастройкиСистемыНалогообложенияФормыКлиентСервер.ЗаполнитьСписокВыбораСистемНалогообложения(ЭтотОбъект);
	НастройкиСистемыНалогообложенияФормыКлиентСервер.УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

