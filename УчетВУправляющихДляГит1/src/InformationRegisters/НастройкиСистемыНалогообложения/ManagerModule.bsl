#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура устанавливает значения констант, отвечающих за командный интерфейс
//
// Параметры:
//   ТребуетсяСоздатьПоставляемыеВидыНалогов - Булево - признак того, что требуется заполнить справочник налогов
//
Процедура ОбновитьИспользуемыеСистемыНалогообложения(ТребуетсяСоздатьПоставляемыеВидыНалогов = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользуемыеСистемыНалогообложения = ИспользуемыеСистемыНалогообложения();
	
	ЕстьИзменения = Ложь;
	
	Если Константы.ИспользуетсяОСНО.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяОСНО Тогда
		Константы.ИспользуетсяОСНО.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяОСНО);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяУСН.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяУСН Тогда
		Константы.ИспользуетсяУСН.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяУСН);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяНДФЛИП.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяНДФЛИП Тогда
		Константы.ИспользуетсяНДФЛИП.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяНДФЛИП);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяУСНПатент.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНПатент Тогда
		Константы.ИспользуетсяУСНПатент.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНПатент);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяЕНВД.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяЕНВД Тогда
		Константы.ИспользуетсяЕНВД.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяЕНВД);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.УплачиваетсяТорговыйСбор.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяТорговыйСбор Тогда
		Константы.УплачиваетсяТорговыйСбор.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяТорговыйСбор);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяРаздельныйУчетНДС.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС Тогда
		Константы.ИспользуетсяРаздельныйУчетНДС.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяНалогНаПрофессиональныйДоход.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяНалогНаПрофессиональныйДоход Тогда
		Константы.ИспользуетсяНалогНаПрофессиональныйДоход.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяНалогНаПрофессиональныйДоход);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если ЕстьИзменения Тогда
		НастройкиУчета.ПослеОбновленияИспользуемыхСистемНалогообложения();
	КонецЕсли;
	
	Если ТребуетсяСоздатьПоставляемыеВидыНалогов И ЕстьИзменения Тогда
		Справочники.ВидыНалоговИПлатежейВБюджет.СоздатьПоставляемыеЭлементы();
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает список всех используемых в информационной базе систем налогообложения
//
// Возвращаемое значение:
//  Структура - где ключ - название системы налогообложения, значение - Истина или Ложь
//
Функция ИспользуемыеСистемыНалогообложения() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СистемыНалогообложения = Новый Структура();
	СистемыНалогообложения.Вставить("ИспользуетсяОСНО", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСН", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНДоходы", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНДоходыМинусРасходы", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяНДФЛИП", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНПатент", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяЕНВД", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяТорговыйСбор", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяРаздельныйУчетНДС", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяНалогНаПрофессиональныйДоход", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяОСНО), ЛОЖЬ) КАК ИспользуетсяОСНО,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСН), ЛОЖЬ) КАК ИспользуетсяУСН,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНДоходы), ЛОЖЬ) КАК ИспользуетсяУСНДоходы,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНДоходыМинусРасходы), ЛОЖЬ) КАК ИспользуетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяНДФЛИП), ЛОЖЬ) КАК ИспользуетсяНДФЛИП,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНПатент), ЛОЖЬ) КАК ИспользуетсяУСНПатент,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяЕНВД), ЛОЖЬ) КАК ИспользуетсяЕНВД,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ПлательщикТорговогоСбора), ЛОЖЬ) КАК ИспользуетсяТорговыйСбор,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС), ЛОЖЬ) КАК ИспользуетсяРаздельныйУчетНДС,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход), ЛОЖЬ) КАК ИспользуетсяНалогНаПрофессиональныйДоход
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НастройкиСистемыНалогообложения.ПлательщикНалогаНаПрибыль КАК ИспользуетсяОСНО,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСН КАК ИспользуетсяУСН,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы КАК ИспользуетсяУСНДоходы,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходыМинусРасходы КАК ИспользуетсяУСНДоходыМинусРасходы,
	|		НастройкиСистемыНалогообложения.ПлательщикНДФЛ КАК ИспользуетсяНДФЛИП,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНПатент КАК ИспользуетсяУСНПатент,
	|		НастройкиСистемыНалогообложения.ПлательщикЕНВД КАК ИспользуетсяЕНВД,
	|		НастройкиСистемыНалогообложения.ПлательщикТорговогоСбора КАК ПлательщикТорговогоСбора,
	|		ЛОЖЬ КАК ИспользуетсяРаздельныйУчетНДС,
	|		НастройкиСистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход КАК ПрименяетсяНалогНаПрофессиональныйДоход
	|	ИЗ
	|		РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|	ГДЕ
	|		НЕ НастройкиСистемыНалогообложения.Организация.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		НастройкиУчетаНДС.СложныйУчетНДС,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ГДЕ
	|		НЕ НастройкиУчетаНДС.Организация.ПометкаУдаления) КАК СистемыНалогообложения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СистемыНалогообложения, Выборка);
	КонецЕсли;
	
	Если Не СистемыНалогообложения.ИспользуетсяУСН Тогда
		СистемыНалогообложения.ИспользуетсяУСНДоходы             = Ложь;
		СистемыНалогообложения.ИспользуетсяУСНДоходыМинусРасходы = Ложь;
	КонецЕсли;
	
	Возврат СистемыНалогообложения;
	
КонецФункции

// Функция возвращает список всех используемых в информационной базе систем налогообложения
//
// Параметры:
//  ВидОрганизации         - Строка - имя вида организации
//  СистемаНалогообложения - Строка - имя системы налогообложения
//  ПлательщикЕНВД         - Булево - признак плательщика ЕНВД
//
// Возвращаемое значение:
//  Структура - где ключ - имя ресурса регистра настройки учета
//
Функция СтруктураУчетнойПолитики(ВидОрганизации, СистемаНалогообложения, ПлательщикЕНВД = Ложь, ПрименяетсяУСНПатент = Ложь) Экспорт
	
	СтруктураУчетнойПолитики = НастройкиУчета.ОписаниеСтруктурыУчетнойПолитики();
	
	СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", ПлательщикЕНВД);
	СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", ПрименяетсяУСНПатент);
	
	Если СистемаНалогообложения = "УпрощеннаяДоходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.Доходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",       Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "УпрощеннаяДоходыМинусРасходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",                   Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ФИФО"));
		
	ИначеЕсли СистемаНалогообложения = "Патентная" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Истина);
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "ЕНВД" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "НалогНаПрофессиональныйДоход" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.НалогНаПрофессиональныйДоход"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Истина);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	Иначе
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Общая"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикНДС", Истина);
		Если ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
			СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ФИФО"));
		Иначе
			СтруктураУчетнойПолитики.Вставить("ПлательщикНалогаНаПрибыль", Истина);
			СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		КонецЕсли;
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		
	КонецЕсли;
	
	Возврат СтруктураУчетнойПолитики;
	
КонецФункции

// Процедура устанавливает значения регистра по умолчанию
//
// Параметры:
//   Запись           - РегистрСведенийЗапись - запись регистра
//   ДанныеЗаполнения - Структура - где ключ - имя ресурса
//
Процедура УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения) Экспорт
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Период",
		НачалоГода(ТекущаяДатаСеанса()));
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Организация",
		БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	
	ЭтоФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Организация, "ЮридическоеФизическоеЛицо")
		= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	// Общие сведения
	ОсновнаяСистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсновнаяСистемаНалогообложения();
	Если Не ЭтоФизЛицо И ОсновнаяСистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсобыйПорядок Тогда
		ОсновнаяСистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	КонецЕсли;
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"СистемаНалогообложения",
		ОсновнаяСистемаНалогообложения);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПлательщикЕНВД",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПрименяетсяУСНПатент",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПлательщикТорговогоСбора",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ДатаИзменения",
		НачалоМесяца(Запись.Период));
	
	Если Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		
		ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Если ДанныеЗаполнения.Свойство("ОбъектНалогообложенияУСН") Тогда
			ОбъектНалогообложенияУСН = ДанныеЗаполнения.ОбъектНалогообложенияУСН;
		КонецЕсли;
		
		Запись.ПрименяетсяУСН                          = Истина;
		Запись.ПрименяетсяУСНДоходы                    = ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ОбъектНалогообложенияУСН                = ОбъектНалогообложенияУСН;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
	ИначеЕсли Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсобыйПорядок Тогда
		Если Запись.ПлательщикЕНВД Тогда
			// Только ЕНВД
			Запись.ПрименяетсяУСНПатент                = Ложь;
		Иначе
			// Только Патент
			Запись.ПлательщикЕНВД                      = Ложь;
			Запись.ПрименяетсяУСНПатент                = Истина;
		КонецЕсли;
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Истина;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
	ИначеЕсли Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.НалогНаПрофессиональныйДоход Тогда
		Запись.ПлательщикЕНВД                          = Ложь;
		Запись.ПрименяетсяУСНПатент                    = Ложь;
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Истина;
	Иначе
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = НЕ ЭтоФизЛицо;
		Запись.ПлательщикНДС                           = Истина;
		Запись.ПлательщикНДФЛ                          = ЭтоФизЛицо;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПлательщикФиксированныхВзносов(Запись) Экспорт
	
	Возврат ЗначениеЗаполнено(Запись.Организация) И Не ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Запись.Организация)
		И (Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент);
	
КонецФункции

Функция ВозможнаРеализацияАлкогольнойПродукции(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможнаРеализацияПодакцизныхТоваров(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможенЕСХН(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможенНДПИ(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ПрименяетсяЕдинаяУпрощеннаяДекларация(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Организация.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	| ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	| ЗначениеРазрешено(ЭтотСписок.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обработка обновления ИБ.
//
Процедура ЗаполнитьДатуИзменения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ПустаяДатаИзменения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.НастройкиСистемыНалогообложения.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Не ЗначениеЗаполнено(Запись.ДатаИзменения) Тогда
			Запись.ДатаИзменения = Запись.Период;
		КонецЕсли;
	КонецЦикла;
	
	Если НаборЗаписей.Количество() > 0 Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
