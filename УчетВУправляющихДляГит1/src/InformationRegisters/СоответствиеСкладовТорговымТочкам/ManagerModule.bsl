
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает массив торговых точек, соответствующих складу.
//
// Параметры:
//  Склад - СправочникСсылка.Склады - Склад, для которого выполняется поиск связанных торговых точек.
//
// Возвращаемое значение:
//  Массив - Массив торговых точек, соответствующих складу.
//
Функция ТорговыеТочкиСклада(Склад) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТорговыеТочкиСклада.Организация КАК Организация,
	|	ТорговыеТочкиСклада.ТорговаяТочка КАК ТорговаяТочка,
	|	ТорговыеТочки.Наименование
	|ИЗ
	|	РегистрСведений.СоответствиеСкладовТорговымТочкам КАК ТорговыеТочкиСклада
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТорговыеТочки КАК ТорговыеТочки
	|		ПО ТорговыеТочкиСклада.Организация = ТорговыеТочки.Организация
	|		И ТорговыеТочкиСклада.ТорговаяТочка = ТорговыеТочки.Ссылка
	|ГДЕ
	|	ТорговыеТочкиСклада.Склад = &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТорговыеТочки.Наименование";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	ТорговыеТочки = Запрос.Выполнить().Выгрузить();
	
	Возврат ТорговыеТочки.ВыгрузитьКолонку("ТорговаяТочка");
	
КонецФункции

// Возвращает массив складов, которые соответствуют торговой точке.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, которой принадлежит торговая точка.
//  ТорговаяТочка - СправочникСсылка.ТорговыеТочки - Торговая точка, для которой выполняется поиск связанных складов.
//
// Возвращаемое значение:
//  Массив - Массив складов, соответствующих торговой точке.
//
Функция СкладыТорговойТочки(Организация, ТорговаяТочка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СкладыТорговойТочки.Склад КАК Склад,
	|	Склады.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.СоответствиеСкладовТорговымТочкам КАК СкладыТорговойТочки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО СкладыТорговойТочки.Склад = Склады.Ссылка
	|ГДЕ
	|	СкладыТорговойТочки.Организация = &Организация
	|	И СкладыТорговойТочки.ТорговаяТочка = &ТорговаяТочка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склады.Наименование";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	
	Склады = Запрос.Выполнить().Выгрузить();
	
	Возврат Склады.ВыгрузитьКолонку("Склад");
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьИзмененияВСоответствииСкладовТорговойТочке(Организация, ТорговаяТочка, СкладыТорговойТочки) Экспорт
	
	НаборЗаписей = РегистрыСведений.СоответствиеСкладовТорговымТочкам.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ТорговаяТочка.Установить(ТорговаяТочка);
	
	Для Каждого Склад Из СкладыТорговойТочки Цикл
		Запись = НаборЗаписей.Добавить();
		Запись.Организация   = Организация;
		Запись.ТорговаяТочка = ТорговаяТочка;
		Запись.Склад         = Склад;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаписатьИзмененияВСоответствииТорговыхТочекСкладу(Склад, НовыеТорговыеТочки) Экспорт
	
	НаборЗаписей = РегистрыСведений.СоответствиеСкладовТорговымТочкам.СоздатьНаборЗаписей();
	
	ДоступныеТорговыеТочки = ТорговыеТочкиСклада(Склад);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеТорговыеТочки, НовыеТорговыеТочки, Истина);
	
	НаборЗаписей.Отбор.Склад.Установить(Склад);
	
	РеквизитыТорговыхТочек = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДоступныеТорговыеТочки, "Организация");
	Для Каждого ТорговаяТочка Из ДоступныеТорговыеТочки Цикл
		
		РеквизитыТорговойТочки = РеквизитыТорговыхТочек[ТорговаяТочка];
		Если РеквизитыТорговойТочки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей.Отбор.ТорговаяТочка.Установить(ТорговаяТочка);
		
		Если НовыеТорговыеТочки.Найти(ТорговаяТочка) <> Неопределено Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Организация   = РеквизитыТорговойТочки.Организация;
			Запись.ТорговаяТочка = ТорговаяТочка;
			Запись.Склад         = Склад;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления 3.0.52.9
// Устанавливается соответствие между складами и торговыми точками организаций,
// применяющих УСН (Доходы) с уплатой торгового сбора.
//
// Если значение константы "ИспользоватьНесколькоСкладов" равно "Ложь",
// то склад устанавливается в соответствие всем торговым точкам организаций.
//
// Если значение константы "ИспользоватьНесколькоСкладов" равно "Истина",
// то для организаций с одной торговой точкой устанавливается соответствие со складами,
// указанными в документах с флагом "ДеятельностьНаТорговомСборе".
//
Процедура ЗаполнитьСоответствиеМеждуСкладамиИТорговымиТочками() Экспорт
	
	// Проверим, есть ли организации на УСН (Доходы) с торговыми точками
	// и заполнен ли регистр сведений "СоответствиеСкладовТорговымТочкам".
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ИспользоватьНесколькоСкладов", Справочники.Склады.ИспользуетсяНесколькоСкладов());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТорговыеТочки.Организация КАК Организация,
	|	ТорговыеТочки.Ссылка КАК ТорговаяТочка
	|ПОМЕСТИТЬ ВТ_ТорговыеТочки
	|ИЗ
	|	Справочник.ТорговыеТочки КАК ТорговыеТочки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТорговыеТочки.Организация КАК ОтборОрганизация
	|ПОМЕСТИТЬ ВТ_ОрганизацииСОднойТорговойТочкой
	|ИЗ
	|	ВТ_ТорговыеТочки КАК ТорговыеТочки
	|
	|СГРУППИРОВАТЬ ПО
	|	Организация
	|ИМЕЮЩИЕ 
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТорговаяТочка) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СкладыТорговыхТочек.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.СоответствиеСкладовТорговымТочкам КАК СкладыТорговыхТочек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТорговыеТочки.ТорговаяТочка
	|ИЗ
	|	ВТ_ТорговыеТочки КАК ТорговыеТочки
	|ГДЕ
	|	НЕ &ИспользоватьНесколькоСкладов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТорговыеТочки.ОтборОрганизация
	|ИЗ
	|	ВТ_ОрганизацииСОднойТорговойТочкой КАК ТорговыеТочки
	|ГДЕ
	|	&ИспользоватьНесколькоСкладов";
	
	Результаты = Запрос.ВыполнитьПакет();
	Если НЕ Результаты[2].Пустой() ИЛИ Результаты[3].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// Получим данные сопоставления складов с торговыми точками. 
	// Выбираются склады, которые участвовали в операциях по деятельности на торговом сборе.
	// Если в документе был установлен флаг "ДеятельностьНаТорговомСборе", то считаем, 
	// что выручка от продаж на складе относится к деятельности на торговом сборе
	// и склад необходимо сопоставить с торговой точкой, принадлежащей организации документа.
	// Если константа ИспользуетсяНесколькоСкладов равна Ложь,
	// то склад привязываем ко всем торговым точкам организации.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровОтПокупателя.Организация,
	|	ВозвратТоваровОтПокупателя.Склад
	|ПОМЕСТИТЬ ВТ_СкладыСТорговымСборомВДокументах
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОрганизацииСОднойТорговойТочкой КАК ОтборПоОрганизациям
	|		ПО ВозвратТоваровОтПокупателя.Организация = ОтборПоОрганизациям.ОтборОрганизация
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.ДеятельностьНаТорговомСборе
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОплатаПлатежнойКартой.Организация,
	|	ОплатаПлатежнойКартой.Контрагент
	|ИЗ
	|	Документ.ОплатаПлатежнойКартой КАК ОплатаПлатежнойКартой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОрганизацииСОднойТорговойТочкой КАК ОтборПоОрганизациям
	|		ПО ОплатаПлатежнойКартой.Организация = ОтборПоОрганизациям.ОтборОрганизация
	|ГДЕ
	|	ОплатаПлатежнойКартой.ДеятельностьНаТорговомСборе
	|	И ОплатаПлатежнойКартой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОплатаПлатежнойКартой.РозничнаяВыручка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетОРозничныхПродажах.Организация,
	|	ОтчетОРозничныхПродажах.Склад
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОрганизацииСОднойТорговойТочкой КАК ОтборПоОрганизациям
	|		ПО ОтчетОРозничныхПродажах.Организация = ОтборПоОрганизациям.ОтборОрганизация
	|ГДЕ
	|	ОтчетОРозничныхПродажах.ДеятельностьНаТорговомСборе
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходныйКассовыйОрдер.Организация,
	|	ПриходныйКассовыйОрдер.Контрагент
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОрганизацииСОднойТорговойТочкой КАК ОтборПоОрганизациям
	|		ПО ПриходныйКассовыйОрдер.Организация = ОтборПоОрганизациям.ОтборОрганизация
	|ГДЕ
	|	ПриходныйКассовыйОрдер.ДеятельностьНаТорговомСборе
	|	И ПриходныйКассовыйОрдер.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.РозничнаяВыручка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Склад
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОрганизацииСОднойТорговойТочкой КАК ОтборПоОрганизациям
	|		ПО РеализацияТоваровУслуг.Организация = ОтборПоОрганизациям.ОтборОрганизация
	|ГДЕ
	|	РеализацияТоваровУслуг.ДеятельностьНаТорговомСборе
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТорговыеТочки.Организация,
	|	ТорговыеТочки.ТорговаяТочка,
	|	Склады.Ссылка КАК Склад
	|ИЗ
	|	ВТ_ТорговыеТочки КАК ТорговыеТочки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ &ИспользоватьНесколькоСкладов
	|	И НЕ Склады.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТорговыеТочки.Организация,
	|	ТорговыеТочки.ТорговаяТочка,
	|	Документы.Склад
	|ИЗ
	|	ВТ_ТорговыеТочки КАК ТорговыеТочки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СкладыСТорговымСборомВДокументах КАК Документы
	|		ПО ТорговыеТочки.Организация = Документы.Организация
	|ГДЕ
	|	&ИспользоватьНесколькоСкладов";
	
	НаборЗаписей = РегистрыСведений.СоответствиеСкладовТорговымТочкам.СоздатьНаборЗаписей();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
