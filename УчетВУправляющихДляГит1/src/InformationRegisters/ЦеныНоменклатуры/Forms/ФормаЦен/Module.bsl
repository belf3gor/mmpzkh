#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ЦеныНоменклатуры) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДатаЦены = ОбщегоНазначения.ТекущаяДатаПользователя(); 
	ЗаполнитьТаблицуЦен();
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.Документы.УстановкаЦенНоменклатуры) Тогда
		// Нет доступа к чтению документов установки цен номенклатуры,
		// поэтому прячем колонку, которая его выводит.
		Элементы.ЦеныНоменклатурыДокумент.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Документы.УстановкаЦенНоменклатуры) Тогда
		// Не можем изменять цены номенклатуры, поэтому запрещаем редактирование цен.
		Элементы.ЦеныНоменклатуры.ТолькоПросмотр = Истина;
		Элементы.ЗаписатьЦены.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаЦенПриИзменении(Элемент)
    ЗаполнитьТаблицуЦен()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЦеныНоменклатуры

&НаКлиенте
Процедура ЦеныНоменклатурыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
    
    // После редактировании строки автоматически установим в этой строке флажок "Записать".
    Элементы.ЦеныНоменклатуры.ТекущиеДанные.Записать = Не ОтменаРедактирования;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура ЗаписатьЦены(Команда)
	
	СтрокиДляЗаписи = ЦеныНоменклатуры.НайтиСтроки(Новый Структура("Записать", Истина));
	
	ТекстСообщения = "";
	НачалоПредупреждения = "Не указано значение цены для записи (тип цен ";
	Для Каждого Строка Из СтрокиДляЗаписи Цикл
		Если Не ЗначениеЗаполнено(Строка.Цена) Тогда
			ТекстСообщения = ТекстСообщения + НачалоПредупреждения + Строка.ТипЦен + ")
			|";
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ПоказатьПредупреждение( , ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ЗаписатьЦеныНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЦены(Команда)
    ЗаполнитьТаблицуЦен()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЗаполнитьЦены(НоменклатураЦен,ДатаЦен)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ДатаЦен);
	Запрос.УстановитьПараметр("Ссылка", НоменклатураЦен);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Если есть право чтения на документ "Установка цен номенклатуры",
	// то получаем сведения о том документе, который установил цены.
	// Если права чтения на этот документ нет, то пользователю не нужно показывать,
	// какой документ эти цены установил.
	Если ПравоДоступа("Чтение", Метаданные.Документы.УстановкаЦенНоменклатуры) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(УстановкаЦенНоменклатуры.Дата) КАК Дата,
		|	ЦеныНоменклатуры.ТипЦен КАК ТипЦен
		|ПОМЕСТИТЬ ТипыЦенНаДату
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
		|		ПО ЦеныНоменклатуры.Регистратор = УстановкаЦенНоменклатуры.Ссылка
		|ГДЕ
		|	ЦеныНоменклатуры.Период <= &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатуры.ТипЦен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Дата,
		|	ТипЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТипыЦенНаДату.ТипЦен КАК ТипЦен,
		|	МАКСИМУМ(УстановкаЦенНоменклатуры.Ссылка) КАК Регистратор
		|ПОМЕСТИТЬ ТипЦенПоРегистраторуНаДату
		|ИЗ
		|	ТипыЦенНаДату КАК ТипыЦенНаДату
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
		|		ПО ТипыЦенНаДату.Дата = УстановкаЦенНоменклатуры.Дата
		|			И ТипыЦенНаДату.ТипЦен = УстановкаЦенНоменклатуры.ТипЦен
		|
		|СГРУППИРОВАТЬ ПО
		|	ТипыЦенНаДату.ТипЦен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТипЦен,
		|	Регистратор;";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ТипыЦенНоменклатуры.ПустаяСсылка) КАК ТипЦен,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор
		|ПОМЕСТИТЬ ТипЦенПоРегистраторуНаДату
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТипЦен,
		|	Регистратор;";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыЦенНоменклатуры.Ссылка КАК ТипЦен,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЛОЖЬ КАК Записать,
	|	ВЫБОР
	|		КОГДА ЦеныНоменклатурыСрезПоследних.Валюта ЕСТЬ NULL 
	|			ТОГДА ТипыЦенНоменклатуры.ВалютаЦены
	|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ЦеныНоменклатурыСрезПоследних.Регистратор ЕСТЬ NULL 
	|			ТОГДА ТипЦенПоРегистраторуНаДату.Регистратор
	|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Регистратор
	|	КОНЕЦ КАК Документ
	|ИЗ
	|	Справочник.ТипыЦенНоменклатуры КАК ТипыЦенНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, Номенклатура = &Ссылка) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.ТипЦен = ТипыЦенНоменклатуры.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипЦенПоРегистраторуНаДату КАК ТипЦенПоРегистраторуНаДату
	|		ПО (ТипЦенПоРегистраторуНаДату.ТипЦен = ТипыЦенНоменклатуры.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТипыЦенНоменклатуры.Ссылка,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ВЫБОР
	|		КОГДА ЦеныНоменклатурыСрезПоследних.Регистратор ЕСТЬ NULL 
	|			ТОГДА ТипЦенПоРегистраторуНаДату.Регистратор
	|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Регистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЦеныНоменклатурыСрезПоследних.Валюта ЕСТЬ NULL 
	|			ТОГДА ТипыЦенНоменклатуры.ВалютаЦены
	|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Валюта
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипыЦенНоменклатуры.Наименование";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СоздатьДокументЦен(ДатаЦены, Строка, Номенклатура)
	ДокументОбъект = Строка.Документ;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект) Или НЕ НачалоДня(ДатаЦены) = НачалоДня(ДокументОбъект.Дата) Тогда
		ДокументОбъект = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		ДокументОбъект.Дата = НачалоДня(ДатаЦены);
		ДокументОбъект.ТипЦен = Строка.ТипЦен;
		СтрокаДокумента = ДокументОбъект.Товары.Добавить();
	Иначе
		ДокументОбъект = Строка.Документ.ПолучитьОбъект();
		Если ДокументОбъект.Товары.Найти(Номенклатура) = НЕОПРЕДЕЛЕНО Тогда
			СтрокаДокумента = ДокументОбъект.Товары.Добавить();
		Иначе
			СтрокаДокумента = ДокументОбъект.Товары.Найти(Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
	СтрокаДокумента.Номенклатура = Номенклатура;
	СтрокаДокумента.Цена = Строка.Цена;
	СтрокаДокумента.Валюта = Строка.Валюта;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		
			ШаблонСообщения = НСтр("ru = 'Не удалось %1 документ для установки цен типа ""%2""
		                        |%3'");
		ТекстСообщения = СтрШаблон(
			ШаблонСообщения, 
			?(ЗначениеЗаполнено(Строка.Документ), "записать", "создать"),
			Строка.ТипЦен, 
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

		ТекстСообщения = СтрШаблон(
			ШаблонСообщения, 
			?(ЗначениеЗаполнено(Строка.Документ), "записать", "создать"),
			Строка.ТипЦен, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

		ОписаниеОшибки = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Установка цен номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.УстановкаЦенНоменклатуры,
			?(ЗначениеЗаполнено(Строка.Документ), Строка.Документ, ""), 
			ОписаниеОшибки.Описание);

	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЦеныНаСервере()
	
	СтрокиДляЗаписи = ЦеныНоменклатуры.НайтиСтроки(Новый Структура("Записать", Истина));
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Для Каждого Строка Из СтрокиДляЗаписи Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Валюта) Тогда
			Строка.Валюта = ВалютаРегламентированногоУчета;
		КонецЕсли;
		ДанныеСтроки = Новый Структура("ТипЦен,Цена,Валюта,Документ",Строка.ТипЦен,Строка.Цена,Строка.Валюта,Строка.Документ);
		СоздатьДокументЦен(ДатаЦены, ДанныеСтроки, Параметры.НоменклатураЦен);
	КонецЦикла;
	
	ЗаполнитьТаблицуЦен();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЦен()
	
	Результат = ЗаполнитьЦены(Параметры.НоменклатураЦен, ДатаЦены);
	Результат.Колонки.Добавить("Отступ");
	ЗначениеВРеквизитФормы(Результат,"ЦеныНоменклатуры");
	
КонецПроцедуры

#КонецОбласти