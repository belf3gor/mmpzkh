#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(СтруктурнаяЕдиница)
	|	ИЛИ ЗначениеРазрешено(СтруктурнаяЕдиница.Владелец)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьПодчиненныеСтруктурныеЕдиницы(СтруктурныеЕдиницы, РежимОбновления = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Справочники.ПодразделенияОрганизаций.ТекстЗапросаСравненияНаборовСтруктурныхЕдиниц("ТерриториальныеУсловияПФР", "ТерриториальныеУсловияПФР");
	
	Для Каждого СтрокаСтруктурныеЕдиницы Из СтруктурныеЕдиницы Цикл
		
		Запрос.УстановитьПараметр("ГоловнаяСтруктурнаяЕдиница", СтрокаСтруктурныеЕдиницы.Ключ);
		Запрос.УстановитьПараметр("ПодчиненныеСтруктурныеЕдиницы", СтрокаСтруктурныеЕдиницы.Значение);
		РезультатЗапросов = Запрос.ВыполнитьПакет();
		
		ОсновнойНабор = РезультатЗапросов[РезультатЗапросов.Количество() - 1].Выгрузить();
		Выборка = РезультатЗапросов[РезультатЗапросов.Количество() - 2].Выбрать();
		Пока Выборка.Следующий() Цикл
			НовыйНаборЗаписей = РегистрыСведений.ТерриториальныеУсловияПФР.СоздатьНаборЗаписей();
			НовыйНаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(Выборка.СтруктурнаяЕдиница);
			ОсновнойНабор.ЗаполнитьЗначения(Выборка.СтруктурнаяЕдиница, "СтруктурнаяЕдиница");
			НовыйНаборЗаписей.Загрузить(ОсновнойНабор);
			
			НовыйНаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			Если РежимОбновления Тогда
				НовыйНаборЗаписей.ОбменДанными.Загрузка = Истина;
			КонецЕсли;
			НовыйНаборЗаписей.Записать();
		КонецЦикла;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли