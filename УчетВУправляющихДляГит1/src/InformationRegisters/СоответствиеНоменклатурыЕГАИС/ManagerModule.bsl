#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	Возврат ИнтеграцияИС.ИменаРеквизитовДляЗаполненияПараметровУказанияСерий(Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС);
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  (см. ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерий) - параметры указания серий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	Возврат ИнтеграцияИС.ПараметрыУказанияСерий(Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС, Объект);
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//Параметры:
//   ПараметрыУказанияСерий - (см. ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерий) - параметры указания серий
// Возвращаемое значение:
//   Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Возврат ИнтеграцияИС.ТекстЗапросаЗаполненияСтатусовУказанияСерий(Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС, ПараметрыУказанияСерий);

КонецФункции

Функция СопоставленнаяАлкогольнойПродукцииНоменклатура(АлкогольнаяПродукция, РезультатВТаблице = Ложь) Экспорт;

	ДанныеСопоставления = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура   КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ НоменлатураХарактеристики
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменлатураХарактеристики.Номенклатура   КАК Номенклатура,
	|	НоменлатураХарактеристики.Характеристика КАК Характеристика
	|ИЗ
	|	НоменлатураХарактеристики КАК НоменлатураХарактеристики";
	
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Если РезультатВТаблице Тогда
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + "
		                               |ИТОГИ ПО
		                               |	Номенклатура";
		
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
		
			МассивХарактеристик = Новый Массив;
			
			ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать();
			
			Пока ВыборкаХарактеристики.Следующий() Цикл
				
				Если ЗначениеЗаполнено(ВыборкаХарактеристики.Характеристика) Тогда
					МассивХарактеристик.Добавить(ВыборкаХарактеристики.Характеристика);
				КонецЕсли;
				
			КонецЦикла;
			
			ДанныеСопоставления.Вставить(ВыборкаНоменклатура.Номенклатура, МассивХарактеристик);
		
		КонецЦикла;
		
		Возврат ДанныеСопоставления;
	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Серия КАК Серия,
	|	СоответствиеНоменклатурыЕГАИС.Справка2 КАК Справка2,
	|	СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.УдалитьАлкогольнаяПродукция <> ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметрыОтметкиОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметкиОбработки.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметрыОтметкиОбработки.ПолноеИмяРегистра = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Результат, ДополнительныеПараметрыОтметкиОбработки);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	
	ВыборкаПоИзмерениям = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
							Параметры.Очередь, ПолноеИмяОбъекта);
							
	Пока ВыборкаПоИзмерениям.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", ВыборкаПоИзмерениям.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", ВыборкаПоИзмерениям.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Серия", ВыборкаПоИзмерениям.Серия);
			ЭлементБлокировки.УстановитьЗначение("АлкогольнаяПродукция", ВыборкаПоИзмерениям.АлкогольнаяПродукция);
			ЭлементБлокировки.УстановитьЗначение("Справка2", ВыборкаПоИзмерениям.Справка2);
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторУпаковки", ВыборкаПоИзмерениям.ИдентификаторУпаковки);
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаПоИзмерениям.Номенклатура); 
			НаборЗаписей.Отбор.Характеристика.Установить(ВыборкаПоИзмерениям.Характеристика); 
			НаборЗаписей.Отбор.Серия.Установить(ВыборкаПоИзмерениям.Серия); 
			НаборЗаписей.Отбор.Справка2.Установить(ВыборкаПоИзмерениям.Справка2);
			НаборЗаписей.Отбор.ИдентификаторУпаковки.Установить(ВыборкаПоИзмерениям.ИдентификаторУпаковки); 
			НаборЗаписей.Прочитать();
			
			Для каждого ЗаписьРегистра Из НаборЗаписей Цикл
				ЗаписьРегистра.АлкогольнаяПродукция = ЗаписьРегистра.УдалитьАлкогольнаяПродукция;
				ЗаписьРегистра.УдалитьАлкогольнаяПродукция = Неопределено;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать регистр СоответствиеНоменклатурыЕГАИС по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,,
									ТекстСообщения);
									
 		КонецПопытки;
	
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюЗаполнениеСправок2(Параметры) Экспорт
	
	Возврат
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюЗаполнениеСправок2(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Документ.ТТНВходящаяЕГАИС") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2.ДокументОснование КАК Справка2ДокументОснование
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|ГДЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.КоличествоОстаток > 0
	|	И ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтОстатки.Справка2 КАК Справка2,
	|	ТИПЗНАЧЕНИЯ(ВтОстатки.Справка2ДокументОснование) КАК ТипДокумента,
	|	ВтОстатки.Справка2ДокументОснование КАК ДокументОснование
	|ИЗ
	|	ВтОстатки КАК ВтОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ВтОстатки.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И ВтОстатки.Справка2 = СоответствиеНоменклатурыЕГАИС.Справка2
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Справка2 ЕСТЬ NULL
	|ИТОГИ ПО
	|	ВтОстатки.Справка2ДокументОснование
	|";
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			Если ВыборкаДокументы.ТипДокумента = ТИП("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.АктПостановкиНаБалансЕГАИС");
			ИначеЕсли ВыборкаДокументы.ТипДокумента = ТИП("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНВходящаяЕГАИС");
			Иначе
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументы.ДокументОснование);
			Блокировка.Заблокировать();
			
			МассивСправок2 = Новый Массив;
			ВыборкаСправка2 = ВыборкаДокументы.Выбрать();
			Пока ВыборкаСправка2.Следующий() Цикл
				МассивСправок2.Добавить(ВыборкаСправка2.Справка2);
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДокументЕГАИС.Номенклатура КАК Номенклатура,
			|	ДокументЕГАИС.Характеристика КАК Характеристика,
			|	ДокументЕГАИС.Серия КАК Серия,
			|	ДокументЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
			|	ДокументЕГАИС.Справка2 КАК Справка2,
			|	ДокументЕГАИС.ИдентификаторУпаковки КАК ИдентификаторУпаковки
			|ПОМЕСТИТЬ ВтТовары
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС.Товары КАК ДокументЕГАИС
			|ГДЕ
			|	ДокументЕГАИС.Ссылка = &ДокументОснование
			|	И ДокументЕГАИС.Справка2 В(&МассивСправок2)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДокументЕГАИС.Номенклатура,
			|	ДокументЕГАИС.Характеристика,
			|	ДокументЕГАИС.Серия,
			|	ДокументЕГАИС.АлкогольнаяПродукция,
			|	ДокументЕГАИС.Справка2,
			|	""""
			|ИЗ
			|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ДокументЕГАИС
			|ГДЕ
			|	ДокументЕГАИС.Ссылка = &ДокументОснование
			|	И ДокументЕГАИС.Справка2 В(&МассивСправок2)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика,
			|	Таблица.Серия КАК Серия,
			|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
			|	Таблица.Справка2 КАК Справка2,
			|	Таблица.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
			|	МАКСИМУМ(ЕСТЬNULL(СопоставленоПорядок.Порядок, 0)) КАК Порядок
			|ИЗ
			|	ВтТовары КАК Таблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Сопоставлено
			|		ПО (Сопоставлено.Номенклатура = Таблица.Номенклатура)
			|			И (Сопоставлено.Характеристика = Таблица.Характеристика)
			|			И (Сопоставлено.АлкогольнаяПродукция = Таблица.АлкогольнаяПродукция)
			|			И (Сопоставлено.ИдентификаторУпаковки = Таблица.ИдентификаторУпаковки)
			|			И (Сопоставлено.Справка2 = Таблица.Справка2)
			|			И (Сопоставлено.Серия = Таблица.Серия)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СопоставленоПорядок
			|		ПО (СопоставленоПорядок.Номенклатура = Таблица.Номенклатура)
			|			И (СопоставленоПорядок.Характеристика = Таблица.Характеристика)
			|ГДЕ
			|	Сопоставлено.Справка2 ЕСТЬ NULL
			|	И Таблица.Номенклатура <> &ПустаяНоменклатура
			|
			|СГРУППИРОВАТЬ ПО
			|	Таблица.АлкогольнаяПродукция,
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Серия,
			|	Таблица.ИдентификаторУпаковки,
			|	Таблица.Справка2";
			Запрос.УстановитьПараметр("МассивСправок2", МассивСправок2);
			Запрос.УстановитьПараметр("ДокументОснование", ВыборкаДокументы.ДокументОснование);
			Запрос.УстановитьПараметр("ПустаяНоменклатура", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Номенклатура"));
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура, Истина);
				НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика, Истина);
				НаборЗаписей.Отбор.Серия.Установить(Выборка.Серия, Истина);
				НаборЗаписей.Отбор.АлкогольнаяПродукция.Установить(Выборка.АлкогольнаяПродукция, Истина);
				НаборЗаписей.Отбор.ИдентификаторУпаковки.Установить(Выборка.ИдентификаторУпаковки, Истина);
				НаборЗаписей.Отбор.Справка2.Установить(Выборка.Справка2, Истина);
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Номенклатура          = Выборка.Номенклатура;
				НоваяЗапись.Характеристика        = Выборка.Характеристика;
				НоваяЗапись.Серия                 = Выборка.Серия;
				НоваяЗапись.АлкогольнаяПродукция  = Выборка.АлкогольнаяПродукция;
				НоваяЗапись.ИдентификаторУпаковки = Выборка.ИдентификаторУпаковки;
				НоваяЗапись.Справка2              = Выборка.Справка2;
				НоваяЗапись.Порядок               = Выборка.Порядок + 1;
				
				НаборЗаписей.Записать();
			КонецЦикла;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать регистр СоответствиеНоменклатурыЕГАИС по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,,
									ТекстСообщения);
			Параметры.ОбработкаЗавершена = Ложь;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
