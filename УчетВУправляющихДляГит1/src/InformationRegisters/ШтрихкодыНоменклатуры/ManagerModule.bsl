#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция вычисляет контрольный символ кода EAN
//
// Параметры:
//  Штрихкод     - штрихкод (без контрольной цифры)
//  Тип          - тип штрихкода: 13 - EAN13, 8 - EAN8
//
// Возвращаемое значение:
//  Контрольный символ штрихкода
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции

Функция НоменклатураПоШтрихкоду(Штрихкод) Экспорт
	ТаблицаНоменклатурыПоШтрихкоду  = НовыйТаблицаНоменклатурыПоШтрихкоду();
	
	Если ПустаяСтрока(Штрихкод) Тогда
		Возврат ТаблицаНоменклатурыПоШтрихкоду;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Штрихкод,
	|	Штрихкоды.Номенклатура.Наименование КАК ПредставлениеНоменклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод ПОДОБНО &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", СокрЛП(Штрихкод) + "%");
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ШрифтВыделения = Новый Шрифт(,,Истина);
	ЦветВыделения  = ЦветаСтиля.ЦветУспешногоПоиска;
	ФорматВыделяемаяСтрока = Новый ФорматированнаяСтрока(Штрихкод, ШрифтВыделения, ЦветВыделения);
	
	Пока РезультатЗапроса.Следующий() Цикл
		СтрокаНоменклатураПоШтрихкоду = ТаблицаНоменклатурыПоШтрихкоду.Добавить();
	
		ПредставлениеСтроки = Новый Массив;
		ПредставлениеСтроки.Добавить(ФорматВыделяемаяСтрока);
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(Прав(РезультатЗапроса.Штрихкод, СтрДлина(РезультатЗапроса.Штрихкод) - СтрДлина(Штрихкод))));
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(" (%1)", РезультатЗапроса.ПредставлениеНоменклатура)));
		
		СтрокаНоменклатураПоШтрихкоду.Штрихкод      = РезультатЗапроса.Штрихкод;
		СтрокаНоменклатураПоШтрихкоду.Номенклатура  = РезультатЗапроса.Номенклатура;
		СтрокаНоменклатураПоШтрихкоду.Представление = Новый ФорматированнаяСтрока(ПредставлениеСтроки);
	КонецЦикла;
	
	Возврат ТаблицаНоменклатурыПоШтрихкоду;
КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// штучного товара
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодEAN13(Номенклатура) Экспорт

	ПрефиксШтучногоТовара = "0";
	ПрефиксВнутреннегоШтрихкода = "01";
	
	Код = Мин(ПоследнийКодШтучногоТовара(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, 13) + 1,
		МаксимальныйКодШтучногоТовара(13));

	НовыйШтрихкод = ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, 13);
	
	ЗаписьРегистра = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Штрихкод = НовыйШтрихкод;
	ЗаписьРегистра.Номенклатура = Номенклатура;
	ЗаписьРегистра.Записать(Истина);
	
	Возврат НовыйШтрихкод;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйТаблицаНоменклатурыПоШтрихкоду()
	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура", Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.Ресурсы.Номенклатура.Тип);
	ТаблицаНоменклатуры.Колонки.Добавить("Штрихкод", Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.Измерения.Штрихкод.Тип);
	ТаблицаНоменклатуры.Колонки.Добавить("Представление", Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("ФорматированнаяСтрока"))));
	
	Возврат ТаблицаНоменклатуры;
КонецФункции

Функция ПоследнийКодШтучногоТовара(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, EAN) Экспорт
	
	Запрос = Новый Запрос;
	
	Если EAN = 8 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 2, 6)) КАК Код
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ШаблонШтрихкод";
		ШаблонШтрихкод = "2_______";
	ИначеЕсли EAN = 13 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 5, 8)) КАК Код
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ШаблонШтрихкод";
		ШаблонШтрихкод = СтрШаблон("2%1%2_________", ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);
	Иначе
		ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ШаблонШтрихкод", ШаблонШтрихкод);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	Результат = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Код);
	
	Возврат Результат;
	
КонецФункции 

Функция ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, EAN) Экспорт
	
	Если EAN = 8 Тогда
		Штрихкод = СтрШаблон("2%1", Формат(Код, "ЧЦ=6; ЧВН=; ЧГ="));
	ИначеЕсли EAN = 13 Тогда
		Штрихкод = СтрШаблон("2%1%2%3", ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, Формат(Код, "ЧЦ=8; ЧВН=; ЧГ="));
	Иначе
		ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'")
	КонецЕсли;
	Результат = СтрШаблон("%1%2", Штрихкод, КонтрольныйСимволEAN(ШтрихКод, EAN));
	
	Возврат Результат;

КонецФункции

Функция МаксимальныйКодШтучногоТовара(EAN) Экспорт
	
	Если EAN = 13 Тогда
		Возврат 99999999;
	КонецЕсли;
	
	Если EAN = 8 Тогда
		Возврат 999999;
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'");
	
КонецФункции


#КонецОбласти

#КонецЕсли