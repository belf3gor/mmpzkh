
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

&НаСервере
// Функция определяет необходимость обновления площадей здания и оповещения о пересчете.
//
Процедура ПроверитьОбновитьОбщуюПлощадьЗданияНаСервере()
	
	НеобходимоПересчитыватьОбщиеПлощадиЗдания = Справочники.КВП_Здания.ПолучитьНастройкуАвтоматическогоПересчетаПлощадейЗданий();
	Если НеобходимоПересчитыватьОбщиеПлощадиЗдания И ВидПлощади = Справочники.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь Тогда
		ВладелецОбъекта = Объект.Владелец;
		ОповеститьОПерерасчетеПлощадиЗдания = Справочники.КВП_Здания.ОбновитьОбщиеПлощадиЗданияПриНеобходимости(ВладелецОбъекта);
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПлощадиЗданияПриНеобходимости()

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отбор = УПЖКХ_ТиповыеМетодыКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "Отбор", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	Если Параметры.Свойство("ОтборОбъект") Тогда
		
		ОтборОбъект = Параметры.ОтборОбъект;
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(Отбор, "Объект", ОтборОбъект,
																ВидСравненияКомпоновкиДанных.Равно, , ,
																РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВидПлощади") Тогда
		
		ОтборВидПлощади = Параметры.ВидПлощади;
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(Отбор, "ВидПлощади", ОтборВидПлощади,
																ВидСравненияКомпоновкиДанных.Равно, , ,
																РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Процедура сохраняет в реквизитах формы Текущие данные.
//
Процедура СписокПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		Объект     = ТекущиеДанные.Объект;
		ВидПлощади = ТекущиеДанные.ВидПлощади;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик "СписокПослеУдаления".
//
Процедура СписокПослеУдаления(Элемент)
	
	ПроверитьОбновитьОбщуюПлощадьЗданияНаСервере();
	
	Если ОповеститьОПерерасчетеПлощадиЗдания Тогда
		
		ПоказатьОповещениеПользователя("Выполнен пересчет площадей здания:",
									   ПолучитьНавигационнуюСсылку(ВладелецОбъекта),
									   Строка(ВладелецОбъекта),
									   БиблиотекаКартинок.Информация32);
		
		ОповеститьОПерерасчетеПлощадиЗдания = Ложь;
		
	КонецЕсли;
	
	Оповестить("ОбновитьПредставлениеПлощадей");
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик "СписокПередНачаломДобавления".
//
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ОтборОбъект.Пустая() Тогда
		
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОтборОбъект", ОтборОбъект);
		ПараметрыФормы.Вставить("ВидПлощади",  ОтборВидПлощади);
		
		ОткрытьФорму("РегистрСведений.КВП_ПлощадьПомещения.ФормаЗаписи", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти