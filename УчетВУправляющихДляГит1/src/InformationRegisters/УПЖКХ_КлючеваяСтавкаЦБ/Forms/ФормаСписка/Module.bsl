
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЕ

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиентеНаСервереБезКонтекста
// Процедура управляет доступностью настройки расписания.
//
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Доступность = Форма.ИспользуетсяРегламентноеЗаданиеОбновленияКлючевойСтавкиЦБ;
	
КонецПроцедуры

&НаСервере
// Процедура получения расписнания регламентого задания.
Процедура ПолучитьСведенияОРегламентномЗадании()
	
	ИспользуетсяРегламентноеЗаданиеОбновленияКлючевойСтавкиЦБ = УПЖКХ_ОбщегоНазначенияСервер.ПроверитьИспользованиеРегламентногоЗаданияОбновленияКлючевойСтавкиЦБ();
	РасписаниеРегламентногоЗадания  = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьРасписаниеРегламентногоЗаданияОбновленияКлючевойСтавкиЦБ();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Процедура обновления представления расписания.
//
Процедура ОбновитьПредставлениеРасписания(Форма)
	
	Элементы = Форма.Элементы;
	
	ПредставлениеРасписания = Строка(Форма.РасписаниеРегламентногоЗадания);
	
	Если ПредставлениеРасписания = Строка(Новый РасписаниеРегламентногоЗадания) Тогда
		
		ПредставлениеРасписания = НСтр("ru = 'Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры

&НаСервере
// Процедура для установки использования регламентого задания.
Процедура УстановитьИспользованиеРегламентногоЗаданияНаСервере()
	
	// Устанавливаем привилегированный режим для работы с данным РЗ,
	// так как настройки обновления предоставляем также пользователям
	// с правами на подсистему "Учет в ЖКХ".
	УстановитьПривилегированныйРежим(Истина);
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьИспользованиеРегламентногоЗадания(Метаданные.РегламентныеЗадания.УПЖКХ_ОбновлениеКлючевойСтавкиЦБРФ, ИспользуетсяРегламентноеЗаданиеОбновленияКлючевойСтавкиЦБ);
	
КонецПроцедуры

&НаСервере
// Процедура для установки расписания регламентого задания.
Процедура УстановитьРасписаниеРегламентногоЗаданияНаСервере()
	
	// Устанавливаем привилегированный режим для работы с данным РЗ,
	// так как настройки обновления предоставляем также пользователям
	// с правами на подсистему "Учет в ЖКХ".
	УстановитьПривилегированныйРежим(Истина);
	
	УПЖКХ_ТиповыеМетодыСервер.УстановитьРасписаниеРегламентногоЗадания(Метаданные.РегламентныеЗадания.УПЖКХ_ОбновлениеКлючевойСтавкиЦБРФ, РасписаниеРегламентногоЗадания);
	
КонецПроцедуры

// СхемыУчета
&НаКлиенте
// Подключаемый обработчик команды перехода к схеме учета.
Процедура Подключаемый_ОткрытьСхемуУчета(Команда)
	
	ОТР_СхемыУчетаКлиент.Подключаемый_ОткрытьСхемуУчета(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры
// Конец СхемыУчета

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ТолькоПросмотр = ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме");
	
	ПолучитьСведенияОРегламентномЗадании();
	ОбновитьПредставлениеРасписания(ЭтаФорма);
	
	УправлениеФормой(ЭтотОбъект);
	
	// СхемыУчета
	ОТР_СхемыУчетаСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СхемыУчета
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик изменения флажка "ИспользоватьРегламентноеЗадание".
//
Процедура ИспользоватьРегламентноеЗаданиеПриИзменении(Элемент)
	
	УстановитьИспользованиеРегламентногоЗаданияНаСервере();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
// Обработчик команды "НастроитьРасписаниеРегламентногоЗадания".
//
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	// Начало редактирования расписания регламентного задания.
	
	// Если расписание не инициализировано в форме на сервере, то создаем новое
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// открываем диалог для редактирования Расписания
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРасписанияРегламентногоЗаданияЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
// Обработчик завершения редактирования регламентного задания.
//
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Расписание;
		
		// Установка нового расписания в настройки регламентного задания.
		УстановитьРасписаниеРегламентногоЗаданияНаСервере();
		
		// Обновляем представление расписания.
		ОбновитьПредставлениеРасписания(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик обновления ключевой ставки.
Процедура ОбновитьКлючевуюСтавкуЦБ(Команда)
	
	// Пытаемся получить ключевую ставку с веб-сервиса.
	Если УПЖКХ_ОбщегоНазначенияСервер.ОбновлениеКлючевойСтавкиЦБ() Тогда
		
		// Если успешно, обновляем списов и показываем предупреждение пользователю.
		Элементы.Список.Обновить();
		ПоказатьПредупреждение(, "Обновление ключевой ставки выполнено успешно!");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
