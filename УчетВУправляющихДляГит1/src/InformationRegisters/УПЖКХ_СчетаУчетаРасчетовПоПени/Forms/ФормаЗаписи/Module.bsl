////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПрочиеПроцедурыИФункции

&НаКлиенте
// Процедура устанавливает отборы при выборе субконто, такие как Организация, Контрагент и др.
//
// Параметры:
//  Элемент              - элемент управления, для которого устанавливается отбор.
//  СтандартнаяОбработка - Булево, признак стандартной обработки выбора в элементе формы.
//  СписокПараметров     - СписокЗначений, в котором передаются параметры отбора.
//
Процедура ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, Организация, СписокПараметров = Неопределено)
	
	ТипЭлемента = ТипЗнч(Запись[Элемент.Имя]);
	
	ТипыОграничения = Элемент.ОграничениеТипа.Типы();
	Если ТипЭлемента = Тип("Неопределено") И ТипыОграничения.Количество() = 1 Тогда
		ТипЭлемента = ТипыОграничения[0];
	КонецЕсли;
	
	Если ТипЭлемента = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		
		СтандартнаяОбработка = Ложь;
		СтруктураОтбора = Новый Структура("Владелец", Организация);
		ФормаВыбора = ПолучитьФорму("Справочник.БанковскиеСчета.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора),Элемент);
		
	ИначеЕсли ТипЭлемента = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		
		СтандартнаяОбработка = Ложь;
		СтруктураОтбора = Новый Структура("Владелец", Организация);
		ФормаВыбора = ПолучитьФорму("Справочник.ПодразделенияОрганизаций.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора),Элемент);
		
	ИначеЕсли ТипЭлемента = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		СтандартнаяОбработка = Ложь;
		СтруктураОтбора = Новый Структура("Организация", УПЖКХ_ТиповыеМетодыВызовСервера.ГоловнаяОрганизация(Организация));
		
		Если ТипЗнч(СписокПараметров) = Тип("Структура") Тогда
			
			Если СписокПараметров.Свойство("Контрагент") Тогда
				
				Если ТипЗнч(СписокПараметров.Контрагент) =  Тип("СправочникСсылка.Контрагенты") Тогда
					
					СтруктураОтбора.Вставить("Владелец", СписокПараметров.Контрагент);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ФормаВыбора = ПолучитьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора),Элемент);
		
	КонецЕсли;
	
	Если НЕ СтандартнаяОбработка Тогда 
		ФормаВыбора.Открыть();
	КонецЕсли;

КонецПроцедуры // ОбработатьВыборСубконто()

&НаКлиенте
// Процедура управления видимостью элементов формы.
//
Процедура УстановитьВидимость()
	
	СтруктураСубконто = Новый Структура;
	ПолучитьСписокСубконтоНаСервере(СтруктураСубконто, Запись.СчетУчетаДоходов);
	Для НомерСубконто = 1 по 3 Цикл
		Если Не СтруктураСубконто["Видимость" + НомерСубконто] = Ложь Тогда
			ЭтаФорма.Элементы["Субконто"+НомерСубконто].Заголовок       = СтруктураСубконто["Заголовок" + НомерСубконто];
			ЭтаФорма.Элементы["Субконто"+НомерСубконто].Видимость       = Истина;
			ЭтаФорма.Элементы["Субконто"+НомерСубконто].ОграничениеТипа = СтруктураСубконто["ОграничениеТипа" + НомерСубконто];
		Иначе
			ЭтаФорма.Элементы["Субконто"+НомерСубконто].Видимость       = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьВидимость()

&НаСервереБезКонтекста
// Процедура получения списка субконто на сервере.
//
Процедура ПолучитьСписокСубконтоНаСервере(СтруктураСубконто, Счет)
	
	Для НомерСубконто = 1 По 3 Цикл
		Если ЗначениеЗаполнено(Счет) И Не Счет.ВидыСубконто.Количество() < НомерСубконто Тогда
			СтруктураСубконто.Вставить("Заголовок" + НомерСубконто, Строка(Счет.ВидыСубконто[НомерСубконто-1].ВидСубконто));
			СтруктураСубконто.Вставить("Видимость" + НомерСубконто, Истина);
			СтруктураСубконто.Вставить("ОграничениеТипа" + НомерСубконто, Счет.ВидыСубконто[НомерСубконто-1].ВидСубконто.ТипЗначения);
		Иначе
			СтруктураСубконто.Вставить("Видимость" + НомерСубконто, Ложь);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура обработчик события "ПриСозданииНаСервере" формы.
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Запись.Организация = Параметры.Организация;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоСчетаДляКапРемонта") Тогда
		Запись.ЭтоСчетаДляКапРемонта = Параметры.ЭтоСчетаДляКапРемонта;
	КонецЕсли;
	
	Автозаголовок = Ложь;
	Заголовок     = "Счета учета расчетов по пеням" + ?(Запись.ЭтоСчетаДляКапРемонта, " за капитальный ремонт", "");
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПослеЗаписи" формы.
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// В УП меняется заголовок гиперссылки перехода к счетам учета по пени.
	Оповестить("ИзмененыСчетаУчетаПоПени");
	
КонецПроцедуры

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "СубконтоДт1".
//
Процедура СубконтоДтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, Запись.Организация);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ПриИзменении" поля "СчетУчетаДоходов".
//
Процедура СчетУчетаДоходовПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	Для НомерСубконто = 1 По 3 Цикл
		Если НЕ Запись["Субконто" + НомерСубконто] = Неопределено Тогда
			Запись["Субконто" + НомерСубконто] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 
