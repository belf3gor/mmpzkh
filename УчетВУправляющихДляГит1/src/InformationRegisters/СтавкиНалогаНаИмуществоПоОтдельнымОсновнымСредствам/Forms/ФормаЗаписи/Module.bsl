#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураСохраняемыхРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Ключ.Пустой() Тогда
		
		Запись.Период = НачалоГода(ОбщегоНазначения.ТекущаяДатаПользователя());
		Если Запись.Организация.Пустая() Тогда
			Запись.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		КонецЕсли;
		
		ПодготовитьФормуНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененОбъектОС" Тогда
		
		Если Параметр.Ссылка = Запись.ОсновноеСредство Тогда
			ЗаполнитьДанныеПоОсновномуСредству();
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Запись.НеоблагаемаяКадастроваяСтоимость > Запись.КадастроваяСтоимость Тогда
		ТекстСообщения = НСтр("ru = 'Необлагаемая кадастровая стоимость не может превышать кадастровую стоимость'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.НеоблагаемаяКадастроваяСтоимость", "", Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ДатаПрекращенияПраваСобственности)
		И Запись.ДатаПрекращенияПраваСобственности < Запись.ДатаРегистрацииПраваСобственности Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата прекращения права собственности не может быть меньше даты регистрации права собственности'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДатаПрекращенияПраваСобственности", "", Отказ);
		
	КонецЕсли;
	
	Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		Если ПустаяСтрока(КодПоОКТМО_ДругойКод) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код по ОКТМО'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодПоОКТМО_ДругойКод", "", Отказ);
		КонецЕсли;
		Если ПустаяСтрока(КодПоОКАТО_ДругойКод) И Год(Запись.Период) < 2014 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код по ОКАТО'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодПоОКАТО_ДругойКод", "", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		Если Запись.НалоговыйОрган.Пустая() Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Налоговый орган'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НалоговыйОрган", "Запись", Отказ);
		КонецЕсли;
		Если ПустаяСтрока(КодПоОКТМО_ДругойНалоговыйОрган) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код по ОКТМО'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодПоОКТМО_ДругойНалоговыйОрган", "", Отказ);
		КонецЕсли;
		Если ПустаяСтрока(КодПоОКАТО_ДругойНалоговыйОрган) И Год(Запись.Период) < 2014 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код по ОКАТО'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодПоОКАТО_ДругойНалоговыйОрган", "", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если Запись.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость Тогда
		Если Запись.КадастроваяСтоимость = 0 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Кадастровая стоимость'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КадастроваяСтоимость", "Запись", Отказ);
		КонецЕсли;
		Если ПустаяСтрока(Запись.КадастровыйНомер) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Кадастровый номер здания (строения, сооружения)'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КадастровыйНомер", "Запись", Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.ДатаРегистрацииПраваСобственности) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Дата регистрации права собственности'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаРегистрацииПраваСобственности", "Запись", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если Запись.ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения Тогда
		Если ПустаяСтрока(Запись.КодНалоговойЛьготыОсвобождениеОтНалогообложения) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код налоговой льготы'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодНалоговойЛьготыОсвобождениеОтНалогообложения", "Запись", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если Запись.КодВидаИмущества = "06" ИЛИ Запись.КодВидаИмущества = "08" ИЛИ Запись.КодВидаИмущества = "10" Тогда
		Если ПустаяСтрока(Запись.КБК) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'КБК'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КБК", "Запись", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если КадастроваяСтоимостьОпределенаПоПлощади И Запись.ДоляПлощадиЧислитель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан числитель дроби - Доля площади'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляПлощадиЧислитель", "Запись", Отказ);
	КонецЕсли;
	Если КадастроваяСтоимостьОпределенаПоПлощади И Запись.ДоляПлощадиЗнаменатель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан знаменатель дроби - Доля площади'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляПлощадиЗнаменатель", "Запись", Отказ);
	КонецЕсли;
	Если Запись.ДоляПлощадиЧислитель <> 0
	   И Запись.ДоляПлощадиЗнаменатель <> 0
	   И Запись.ДоляПлощадиЧислитель > Запись.ДоляПлощадиЗнаменатель Тогда
		ТекстСообщения = НСтр("ru = 'Доля площади: числитель дроби больше знаменателя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляПлощадиЧислитель", "Запись", Отказ);
	КонецЕсли;
	
	Если ОбщаяСобственность И Запись.ДоляВПравеОбщейСобственностиЧислитель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан числитель дроби - Доля в праве на объект'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляВПравеОбщейСобственностиЧислитель", "Запись", Отказ);
	КонецЕсли;
	Если ОбщаяСобственность И Запись.ДоляВПравеОбщейСобственностиЗнаменатель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан знаменатель дроби - Доля в праве на объект'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляВПравеОбщейСобственностиЗнаменатель", "Запись", Отказ);
	КонецЕсли;
	Если Запись.ДоляВПравеОбщейСобственностиЧислитель <> 0
	   И Запись.ДоляВПравеОбщейСобственностиЗнаменатель <> 0
	   И Запись.ДоляВПравеОбщейСобственностиЧислитель > Запись.ДоляВПравеОбщейСобственностиЗнаменатель Тогда
		ТекстСообщения = НСтр("ru = 'Доля в праве на объект: числитель дроби больше знаменателя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляВПравеОбщейСобственностиЧислитель", "Запись", Отказ);
	КонецЕсли;
	
	Если ИмуществоНаТерриторииРазныхСубъектовРФ И Запись.ДоляСтоимостиЧислитель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан числитель дроби - Доля стоимости объекта на территории субъекта РФ'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляСтоимостиЧислитель", "Запись", Отказ);
	КонецЕсли;
	Если ИмуществоНаТерриторииРазныхСубъектовРФ И Запись.ДоляСтоимостиЗнаменатель = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не указан знаменатель дроби - Доля стоимости объекта на территории субъекта РФ'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляСтоимостиЗнаменатель", "Запись", Отказ);
	КонецЕсли;
	Если Запись.ДоляСтоимостиЧислитель <> 0
	   И Запись.ДоляСтоимостиЗнаменатель <> 0
	   И Запись.ДоляСтоимостиЧислитель > Запись.ДоляСтоимостиЗнаменатель Тогда
		ТекстСообщения = НСтр("ru = 'Доля стоимости объекта на территории субъекта РФ: числитель дроби больше знаменателя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДоляСтоимостиЧислитель", "Запись", Отказ);
	КонецЕсли;
	
	Если ОбъектПриродопользования Тогда
		ТекстСообщения = НСтр("ru = 'Земельные участки и иные объекты природопользования не признаются объектами налогообложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ОсновноеСредство", "Запись", Отказ);
	ИначеЕсли Запись.Период >= '20190101' И Не ОбъектНедвижимогоИмущества Тогда
		ТекстСообщения = НСтр("ru = 'С 2019 года движимое имущество не признается объектом налогообложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Период", "Запись", Отказ);
	КонецЕсли;
	
	ТекущийКодПоОКТМО = ПолучитьКодПоОКТМО();

	Если НЕ Отказ И ((НЕ ТекущийОбъект.Выбран()) ИЛИ (ТекущийКодПоОКТМО <> КодПоОКТМО_Исходный)) Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           Запись.Период);
		Запрос.УстановитьПараметр("Организация",      Запись.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", Запись.ОсновноеСредство);
		Запрос.УстановитьПараметр("КодПоОКТМО",       ТекущийКодПоОКТМО);

		Запрос.Текст = "
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство КАК ОсновноеСредство
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период = &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство = &ОсновноеСредство
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКТМО = &КодПоОКТМО
			|";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() > 0 Тогда
			Выборка.Следующий();
			ТекстСообщения = НСтр("ru = 'На %1 по основному средству %2 уже есть запись с кодом ОКТМО %3 в организации %4'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				Формат(Запись.Период, "ДФ=dd.MM.yyyy"),
				СокрЛП(Запись.ОсновноеСредство),
				СокрЛП(ТекущийКодПоОКТМО),
				СокрЛП(Запись.Организация));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", "Запись", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Год(ТекущийОбъект.Период) < 2014 Тогда
	
		ТекущийКодПоОКАТО = ПолучитьКодПоОКАТО();

		Если НЕ Отказ И ((НЕ ТекущийОбъект.Выбран()) ИЛИ (ТекущийКодПоОКАТО <> КодПоОКАТО_Исходный)) Тогда

			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Период",           Запись.Период);
			Запрос.УстановитьПараметр("Организация",      Запись.Организация);
			Запрос.УстановитьПараметр("ОсновноеСредство", Запись.ОсновноеСредство);
			Запрос.УстановитьПараметр("КодПоОКАТО",       ТекущийКодПоОКАТО);

			Запрос.Текст = "
				|ВЫБРАТЬ
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство КАК ОсновноеСредство
				|ИЗ
				|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
				|ГДЕ
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период = &Период
				|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
				|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство = &ОсновноеСредство
				|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКАТО = &КодПоОКАТО
				|";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество() > 0 Тогда
				Выборка.Следующий();
				ТекстСообщения = НСтр("ru = 'На %1 по основному средству %2 уже есть запись с кодом ОКАТО %3 в организации %4'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
					Формат(Запись.Период, "ДФ=dd.MM.yyyy"),
					СокрЛП(Запись.ОсновноеСредство),
					СокрЛП(ТекущийКодПоОКАТО),
					СокрЛП(Запись.Организация));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", "Запись", Отказ);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		ТекущийОбъект.КодПоОКТМО = ПолучитьКодПоОКТМО();
		
		Если Год(ТекущийОбъект.Период) < 2014 Тогда
			ТекущийОбъект.КодПоОКАТО = ПолучитьКодПоОКАТО();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Год(ТекущийОбъект.Период) >= 2014 Тогда
		КодПоОКАТО = "";
	КонецЕсли;
	
	// Данные информационной базы, влияющие на список КБК
	Если (ТекущийОбъект.КодВидаИмущества = "01" ИЛИ ТекущийОбъект.КБК = "18210602020021000110")
	  И Не Перечисления.УсловияПримененияТребованийЗаконодательства.ЕстьИмуществоЕСГС() Тогда
		ПараметрыЗаписи.Вставить("ПоявилосьИмуществоЕСГС", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ПоявилосьИмуществоЕСГС") Тогда
		// в связи с записанными данными необходимо добавить КБК
		Справочники.ВидыНалоговИПлатежейВБюджет.СоздатьПоставляемыеЭлементы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзмененаИнформацияОС");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ПериодПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)

	ЗаполнитьДанныеПоОсновномуСредству();

КонецПроцедуры

&НаКлиенте
Процедура НеПодлежитНалогообложениюПриИзменении(Элемент)
	
	Если НеПодлежитНалогообложению Тогда
		
		СохранитьЗначениеРеквизитаФормы("ПорядокНалогообложения", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		
		Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению");
		
	Иначе
		
		ВосстановитьЗначениеРеквизитаФормы("ПорядокНалогообложения", Запись, СтруктураСохраняемыхРеквизитов);
		
		Если Не ЗначениеЗаполнено(Запись.ПорядокНалогообложения) 
			ИЛИ Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению") Тогда
			Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены");
		КонецЕсли;
		
		Если Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
			ВосстановитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", Запись, СтруктураСохраняемыхРеквизитов);
		КонецЕсли;

		Если Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке") Тогда
			ВосстановитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", Запись, СтруктураСохраняемыхРеквизитов);
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаИмуществаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Запись.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость") Тогда
		НазваниеМакета = "КодыВидаИмуществаРаздел3";
	Иначе
		НазваниеМакета = "КодыВидаИмуществаРаздел2";
	КонецЕсли;
	
	ВыборКода("КодВидаИмущества", НазваниеМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура КБКПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КБКНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборКода("КБК", "КБК");
	
КонецПроцедуры

&НаКлиенте
Процедура КадастроваяСтоимостьОпределенаПоПлощадиПриИзменении(Элемент)
	
	Если КадастроваяСтоимостьОпределенаПоПлощади Тогда
		ВосстановитьЗначениеРеквизитаФормы("ДоляПлощадиЧислитель",   Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("ДоляПлощадиЗнаменатель", Запись, СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьЗначениеРеквизитаФормы("ДоляПлощадиЧислитель",   ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("ДоляПлощадиЗнаменатель", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщаяСобственностьПриИзменении(Элемент)
	
	Если ОбщаяСобственность Тогда
		ВосстановитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЧислитель",   Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЗнаменатель", Запись, СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЧислитель",   ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("ДоляВПравеОбщейСобственностиЗнаменатель", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмуществоНаТерриторииРазныхСубъектовРФПриИзменении(Элемент)
	
	Если ИмуществоНаТерриторииРазныхСубъектовРФ Тогда
		ВосстановитьЗначениеРеквизитаФормы("ДоляСтоимостиЧислитель",   Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("ДоляСтоимостиЗнаменатель", Запись, СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьЗначениеРеквизитаФормы("ДоляСтоимостиЧислитель",   ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("ДоляСтоимостиЗнаменатель", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговаяБазаПриИзменении(Элемент)
	
	Если Запись.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость") Тогда
		ВосстановитьЗначениеРеквизитаФормы("НалоговаяСтавка", Запись, СтруктураСохраняемыхРеквизитов);
		Запись.КодВидаИмущества = "11";
	Иначе
		СохранитьЗначениеРеквизитаФормы("НалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		Запись.КодВидаИмущества = "03";
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НеоблагаемаяКадастроваяСтоимостьПриИзменении(Элемент)
	
	Если Запись.НеоблагаемаяКадастроваяСтоимость > Запись.КадастроваяСтоимость Тогда
		
		ТекстСообщения = НСтр("ru = 'Необлагаемая кадастровая стоимость не может превышать кадастровую стоимость'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.НеоблагаемаяКадастроваяСтоимость");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаРегистрацииПраваСобственностиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ДатаПрекращенияПраваСобственности)
		И Запись.ДатаРегистрацииПраваСобственности > Запись.ДатаПрекращенияПраваСобственности Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата регистрации права собственности не может быть больше даты прекращения права собственности'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДатаРегистрацииПраваСобственности");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПрекращенияПраваСобственностиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ДатаПрекращенияПраваСобственности)
		И Запись.ДатаПрекращенияПраваСобственности < Запись.ДатаРегистрацииПраваСобственности Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата прекращения права собственности не может быть меньше даты регистрации права собственности'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДатаПрекращенияПраваСобственности");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоляСтоимостиЧислительПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ДоляСтоимостиЗнаменательПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)

	Если Запись.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане") Тогда
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("НалоговыйОрган", Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("НалоговаяСтавка", Запись, СтруктураСохраняемыхРеквизитов);
	ИначеЕсли Запись.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО") Тогда
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтотОбъект, ЭтотОбъект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура НалоговыйОрганПриИзменении(Элемент)

	НалоговыйОрганПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура НалоговаяСтавкаПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПорядокНалогообложенияПриИзменении(Элемент)

	Если Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены") Тогда
		СохранитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
	ИначеЕсли Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
		СохранитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", Запись, СтруктураСохраняемыхРеквизитов);
	ИначеЕсли Запись.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке") Тогда
		СохранитьЗначениеРеквизитаФормы("КодНалоговойЛьготыОсвобождениеОтНалогообложения", ЭтотОбъект, Запись, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("СниженнаяНалоговаяСтавка", Запись, СтруктураСохраняемыхРеквизитов);
	КонецЕсли;

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыОсвобождениеОтНалогообложенияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыОсвобождениеОтНалогообложенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ВыборКода("КодНалоговойЛьготыОсвобождениеОтНалогообложения", "ЛьготыПоНалогуНаИмущество");

КонецПроцедуры

&НаКлиенте
Процедура СниженнаяНалоговаяСтавкаПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ДоляПлощадиЧислительПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ДоляПлощадиЗнаменательПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ДоляВПравеОбщейСобственностиЧислительПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ДоляВПравеОбщейСобственностиЗнаменательПриИзменении(Элемент)

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере();
	
	Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		КодПоОКТМО_ДругойКод = Запись.КодПоОКТМО;
		КодПоОКАТО_ДругойКод = Запись.КодПоОКАТО;
	ИначеЕсли Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		КодПоОКТМО_ДругойНалоговыйОрган = Запись.КодПоОКТМО;
		КодПоОКАТО_ДругойНалоговыйОрган = Запись.КодПоОКАТО;
	КонецЕсли;
	КодПоОКТМО_Исходный = Запись.КодПоОКТМО;
	КодПоОКАТО_Исходный = Запись.КодПоОКАТО;
	
	ИмуществоНаТерриторииРазныхСубъектовРФ = Запись.ДоляСтоимостиЧислитель > 0 ИЛИ Запись.ДоляСтоимостиЗнаменатель > 0;
	КадастроваяСтоимостьОпределенаПоПлощади = Запись.ДоляПлощадиЧислитель > 0 ИЛИ Запись.ДоляПлощадиЗнаменатель > 0;
	ОбщаяСобственность = Запись.ДоляВПравеОбщейСобственностиЧислитель > 0 ИЛИ Запись.ДоляВПравеОбщейСобственностиЗнаменатель > 0;
	
	НеПодлежитНалогообложению = Запись.ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению;
	
	УстановитьРеквизитОбъектНедвижимогоИмущества();
	УстановитьГоловнуюОрганизацию(ЭтотОбъект);
	УстановитьРеквизитСовмещениеОСНОиЕНВД(ЭтотОбъект);
	
	КодыВидовИмущества = ПолучитьКодыВидовИмущества(Запись.Период);
	КодыНалоговойЛьготы = ПолучитьКодыНалоговойЛьготы(Запись.Период);
	КБК = ПолучитьКБК();
	
	// Установить видимость/доступность реквизитов и заголовков колонок.
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Запись;
	Элементы = Форма.Элементы;

	ПоказыватьКодПоОКАТО = Год(Объект.Период) < 2014;
	
	ПостановкаНаУчетСДругимКодомПоОКАТО = Объект.ПостановкаНаУчетВНалоговомОргане 
		= ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО");

	Элементы.КодПоОКТМО_ДругойКод.Видимость                 = ПостановкаНаУчетСДругимКодомПоОКАТО;
	Элементы.КодПоОКТМО_ДругойКод.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
	Элементы.КодПоОКТМО_ДругойКод.ОтметкаНезаполненного     = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(Форма.КодПоОКТМО_ДругойКод);
	
	Элементы.КодПоОКАТО_ДругойКод.Видимость                 = ПостановкаНаУчетСДругимКодомПоОКАТО И ПоказыватьКодПоОКАТО;
	Элементы.КодПоОКАТО_ДругойКод.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
	Элементы.КодПоОКАТО_ДругойКод.ОтметкаНезаполненного     = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(Форма.КодПоОКАТО_ДругойКод);

	ПостановкаНаУчетВДругомНалоговомОргане = Объект.ПостановкаНаУчетВНалоговомОргане 
		= ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане");
	
	Элементы.НалоговыйОрган.Видимость                 = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.НалоговыйОрган.Доступность               = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.НалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.НалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И Объект.НалоговыйОрган.Пустая();

	Элементы.КодПоОКТМО_ДругойНалоговыйОрган.Видимость                 = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.КодПоОКТМО_ДругойНалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.КодПоОКТМО_ДругойНалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(Форма.КодПоОКТМО_ДругойНалоговыйОрган);
	
	Элементы.КодПоОКАТО_ДругойНалоговыйОрган.Видимость                 = ПостановкаНаУчетВДругомНалоговомОргане И ПоказыватьКодПоОКАТО;
	Элементы.КодПоОКАТО_ДругойНалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
	Элементы.КодПоОКАТО_ДругойНалоговыйОрган.ОтметкаНезаполненного     = ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(Форма.КодПоОКАТО_ДругойНалоговыйОрган);

	ОпределениеНалоговойБазыПоКадастровойСтоимости = Объект.НалоговаяБаза = 
		ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость");
	
	Элементы.НалоговаяБаза.Видимость = Форма.ОбъектНедвижимогоИмущества И Объект.Период >= '20140101';
	Элементы.КадастровыйНомер.Видимость = Форма.ОбъектНедвижимогоИмущества;
	Элементы.КадастровыйНомерПомещения.Видимость = Форма.ОбъектНедвижимогоИмущества;
	Элементы.УсловныйНомер.Видимость = Форма.ОбъектНедвижимогоИмущества И Не ОпределениеНалоговойБазыПоКадастровойСтоимости;
	
	Элементы.НеоблагаемаяКадастроваяСтоимость.Видимость  = Форма.ОбъектНедвижимогоИмущества И ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ДатаРегистрацииПраваСобственности.Видимость = Форма.ОбъектНедвижимогоИмущества И ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ДатаПрекращенияПраваСобственности.Видимость = Форма.ОбъектНедвижимогоИмущества И ОпределениеНалоговойБазыПоКадастровойСтоимости;
	
	Элементы.НалоговаяСтавка.Видимость = ПостановкаНаУчетВДругомНалоговомОргане ИЛИ ОпределениеНалоговойБазыПоКадастровойСтоимости;
	
	Элементы.КадастроваяСтоимость.Видимость                 = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.КадастроваяСтоимость.АвтоОтметкаНезаполненного = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.КадастроваяСтоимость.ОтметкаНезаполненного     = ОпределениеНалоговойБазыПоКадастровойСтоимости И Объект.КадастроваяСтоимость = 0;
	
	Элементы.КадастроваяСтоимостьОпределенаПоПлощади.Видимость  = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ГруппаДоляПлощади.Видимость                        = ОпределениеНалоговойБазыПоКадастровойСтоимости
	                                                            И Форма.КадастроваяСтоимостьОпределенаПоПлощади;
	Элементы.ДоляПлощадиЧислитель.АвтоОтметкаНезаполненного     = Форма.КадастроваяСтоимостьОпределенаПоПлощади;
	Элементы.ДоляПлощадиЧислитель.ОтметкаНезаполненного         = Форма.КадастроваяСтоимостьОпределенаПоПлощади
	                                                            И Объект.ДоляПлощадиЧислитель = 0;
	Элементы.ДоляПлощадиЗнаменатель.АвтоОтметкаНезаполненного   = Форма.КадастроваяСтоимостьОпределенаПоПлощади;
	Элементы.ДоляПлощадиЗнаменатель.ОтметкаНезаполненного       = Форма.КадастроваяСтоимостьОпределенаПоПлощади
	                                                            И Объект.ДоляПлощадиЗнаменатель = 0;
	
	Элементы.ОбщаяСобственность.Видимость                                      = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ГруппаДоляВОбщейСобственности.Видимость                           = ОпределениеНалоговойБазыПоКадастровойСтоимости
	                                                                           И Форма.ОбщаяСобственность;
	Элементы.ДоляВПравеОбщейСобственностиЧислитель.АвтоОтметкаНезаполненного   = Форма.ОбщаяСобственность;
	Элементы.ДоляВПравеОбщейСобственностиЧислитель.ОтметкаНезаполненного       = Форма.ОбщаяСобственность
	                                                                           И Объект.ДоляВПравеОбщейСобственностиЧислитель = 0;
	Элементы.ДоляВПравеОбщейСобственностиЗнаменатель.АвтоОтметкаНезаполненного = Форма.ОбщаяСобственность;
	Элементы.ДоляВПравеОбщейСобственностиЗнаменатель.ОтметкаНезаполненного     = Форма.ОбщаяСобственность
	                                                                           И Объект.ДоляВПравеОбщейСобственностиЗнаменатель = 0;
	
	Элементы.КадастровыйНомер.АвтоОтметкаНезаполненного = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.КадастровыйНомер.ОтметкаНезаполненного     = ОпределениеНалоговойБазыПоКадастровойСтоимости
	                                                    И ПустаяСтрока(Объект.КадастровыйНомер);
	
	Элементы.ДатаРегистрацииПраваСобственности.АвтоОтметкаНезаполненного = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ДатаРегистрацииПраваСобственности.ОтметкаНезаполненного     = ОпределениеНалоговойБазыПоКадастровойСтоимости 
	                                                                     И НЕ ЗначениеЗаполнено(Объект.ДатаРегистрацииПраваСобственности);
	
	ОсвобождениеОтНалогообложения = 
	 (Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения"));

	Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.Видимость                 = ОсвобождениеОтНалогообложения;
	Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.АвтоОтметкаНезаполненного = ОсвобождениеОтНалогообложения;
	Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.ОтметкаНезаполненного     = ОсвобождениеОтНалогообложения И ПустаяСтрока(Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения);

	ОблагаетсяПоСниженнойСтавке = (Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке"));

	Элементы.СниженнаяНалоговаяСтавка.Видимость = ОблагаетсяПоСниженнойСтавке;

	Если Объект.КодВидаИмущества = "02" Тогда
		Форма.ИмуществоНаТерриторииРазныхСубъектовРФ = Истина;
	КонецЕсли;
	
	Если Не Объект.КодВидаИмущества = "02" И Не ОпределениеНалоговойБазыПоКадастровойСтоимости Тогда
		Форма.ИмуществоНаТерриторииРазныхСубъектовРФ = Ложь;
	КонецЕсли;

	Элементы.ИмуществоНаТерриторииРазныхСубъектовРФ.Видимость   = ОпределениеНалоговойБазыПоКадастровойСтоимости ИЛИ Объект.КодВидаИмущества = "02";
	Элементы.ИмуществоНаТерриторииРазныхСубъектовРФ.Доступность = ОпределениеНалоговойБазыПоКадастровойСтоимости;
	Элементы.ГруппаДоляСтоимости.Видимость                      = (ОпределениеНалоговойБазыПоКадастровойСтоимости ИЛИ Объект.КодВидаИмущества = "02")
	                                                            И Форма.ИмуществоНаТерриторииРазныхСубъектовРФ;
	Элементы.ДоляСтоимостиЧислитель.АвтоОтметкаНезаполненного     = Форма.ИмуществоНаТерриторииРазныхСубъектовРФ;
	Элементы.ДоляСтоимостиЧислитель.ОтметкаНезаполненного         = Форма.ИмуществоНаТерриторииРазныхСубъектовРФ И Объект.ДоляСтоимостиЧислитель = 0;
	Элементы.ДоляСтоимостиЗнаменатель.АвтоОтметкаНезаполненного   = Форма.ИмуществоНаТерриторииРазныхСубъектовРФ;
	Элементы.ДоляСтоимостиЗнаменатель.ОтметкаНезаполненного       = Форма.ИмуществоНаТерриторииРазныхСубъектовРФ И Объект.ДоляСтоимостиЗнаменатель = 0;
	
	ДоступныеГруппыОС = Новый Массив;
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.Здания"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.Сооружения"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.МноголетниеНасаждения"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ОфисноеОборудование"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.РабочийСкот"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ПродуктивныйСкот"));
	ДоступныеГруппыОС.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыОС.ДругиеВидыОсновныхСредств"));
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ГруппаОС", Новый ФиксированныйМассив(ДоступныеГруппыОС)));
	Если Объект.Период >= '20190101' Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.НедвижимоеИмущество", Истина));
	КонецЕсли;
	Элементы.ОсновноеСредство.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
	Элементы.ГруппаПараметрыРегистрации.Видимость = Не Форма.НеПодлежитНалогообложению;
	
	Элементы.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД.Видимость = Форма.СовмещениеОСНОиЕНВД
	                                                                 И Форма.ОбъектНедвижимогоИмущества
	                                                                 И ОпределениеНалоговойБазыПоКадастровойСтоимости;

	Элементы.ДвижимоеИмуществоПодлежащееНалогообложению.Видимость = Не Форма.ОбъектНедвижимогоИмущества;
	
	ТребуетсяКБК = Объект.КодВидаИмущества = "06" ИЛИ Объект.КодВидаИмущества = "08" ИЛИ Объект.КодВидаИмущества = "10";
	Элементы.КБК.Видимость = ТребуетсяКБК;
	Элементы.КБК.АвтоОтметкаНезаполненного = ТребуетсяКБК;
	Элементы.КБК.ОтметкаНезаполненного = ТребуетсяКБК И ПустаяСтрока(Объект.КБК);
	
	Элементы.КодВидаИмущества.РасширеннаяПодсказка.Заголовок =
		Форма.КодыВидовИмущества.Получить(Объект.КодВидаИмущества);
	Элементы.КБК.РасширеннаяПодсказка.Заголовок =
		Форма.КБК.Получить(Объект.КБК);
	Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.РасширеннаяПодсказка.Заголовок =
		Форма.КодыНалоговойЛьготы.Получить(Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитОбъектНедвижимогоИмущества()
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ОсновноеСредство, "ГруппаОС, НедвижимоеИмущество");
	
	ОбъектНедвижимогоИмущества = Реквизиты.НедвижимоеИмущество;
	ОбъектПриродопользования = Реквизиты.ГруппаОС = Перечисления.ГруппыОС.ОбъектыПриродопользования
		ИЛИ Реквизиты.ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьГоловнуюОрганизацию(Форма)
	
	Форма.ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Форма.Запись.Организация);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьРеквизитСовмещениеОСНОиЕНВД(Форма)
	
	Запись = Форма.Запись;
	
	Если Запись.Период >= '20140701' И Запись.Период < '20150101' Тогда
		Форма.СовмещениеОСНОиЕНВД = ЕстьСовмещениеОСНОиЕНВД(Запись.Организация, Запись.Период);
	Иначе
		Форма.СовмещениеОСНОиЕНВД = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьСовмещениеОСНОиЕНВД(Организация, Период)
	
	СовмещениеОСНОиЕНВД = 
		УчетнаяПолитика.СистемаНалогообложения(Организация, Период) = Перечисления.СистемыНалогообложения.Общая
		И УчетнаяПолитика.ПлательщикЕНВД(Организация, Период);
		
	Возврат СовмещениеОСНОиЕНВД;
	
КонецФункции

&НаКлиенте
Процедура СохранитьЗначениеРеквизитаФормы(ИмяРеквизита, Форма, Данные, СтруктураРеквизитов)

	Если НЕ Форма.Элементы[ИмяРеквизита].Доступность Тогда
		Возврат;
	КонецЕсли;

	СтруктураРеквизитов.Вставить(ИмяРеквизита, Данные[ИмяРеквизита]);

	Данные[ИмяРеквизита] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Данные[ИмяРеквизита]));

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьЗначениеРеквизитаФормы(ИмяРеквизита, Данные, СтруктураРеквизитов)

	Если СтруктураРеквизитов.Свойство(ИмяРеквизита) Тогда
		Данные[ИмяРеквизита] = СтруктураРеквизитов[ИмяРеквизита];
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьКодПоОКТМО()

	Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		Возврат КодПоОКТМО_ДругойКод;
	ИначеЕсли Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		Возврат КодПоОКТМО_ДругойНалоговыйОрган;
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПолучитьКодПоОКАТО()

	Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		Возврат КодПоОКАТО_ДругойКод;
	ИначеЕсли Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		Возврат КодПоОКАТО_ДругойНалоговыйОрган;
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПоОсновномуСредству()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",           Запись.Период);
	Запрос.УстановитьПараметр("Организация",      Запись.Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Запись.ОсновноеСредство);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяБаза,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НеоблагаемаяКадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаРегистрацииПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаПрекращенияПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДвижимоеИмуществоПодлежащееНалогообложению,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.УсловныйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КБК,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляПлощадиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляПлощадиЗнаменатель
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних";
	ВыборкаСтавок = Запрос.Выполнить().Выбрать();

	Если ВыборкаСтавок.Количество() > 0 Тогда
		ВыборкаСтавок.Следующий();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаСтавок);
		// Код по ОКАТО.
		Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
			КодПоОКАТО_ДругойКод            = Запись.КодПоОКАТО;
			КодПоОКАТО_ДругойНалоговыйОрган = "";
		ИначеЕсли Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			КодПоОКАТО_ДругойКод            = "";
			КодПоОКАТО_ДругойНалоговыйОрган = Запись.КодПоОКАТО;
		Иначе
			КодПоОКАТО_ДругойКод            = "";
			КодПоОКАТО_ДругойНалоговыйОрган = "";
		КонецЕсли;
	КонецЕсли;

	УстановитьРеквизитОбъектНедвижимогоИмущества();
	
	Если Не ОбъектНедвижимогоИмущества Тогда
		Запись.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость;
		Запись.КадастровыйНомер = "";
		Запись.КадастровыйНомерПомещения = "";
		Запись.КадастроваяСтоимость = 0;
		Запись.НеоблагаемаяКадастроваяСтоимость = 0;
		Запись.ДатаРегистрацииПраваСобственности = Дата(1,1,1);
		Запись.ДатаПрекращенияПраваСобственности = Дата(1,1,1);
		Запись.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД = Ложь;
		ИмуществоНаТерриторииРазныхСубъектовРФ = Ложь;
		ОбщаяСобственность = Ложь;
		КадастроваяСтоимостьОпределенаПоПлощади = Ложь;
		Запись.ДоляСтоимостиЧислитель = 0;
		Запись.ДоляСтоимостиЗнаменатель = 0;
		ДоляВПравеОбщейСобственностиЧислитель = 0;
		ДоляВПравеОбщейСобственностиЗнаменатель = 0;
		ДоляПлощадиЧислитель = 0;
		ДоляПлощадиЗнаменатель = 0;
		УсловныйНомер = "";
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура НалоговыйОрганПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Запись.НалоговыйОрган) Тогда 
		КодПоОКТМО_ДругойНалоговыйОрган = Запись.НалоговыйОрган.КодПоОКТМО;
		КодПоОКАТО_ДругойНалоговыйОрган = Запись.НалоговыйОрган.КодПоОКАТО;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКода(ИмяКода, НазваниеМакета)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"РегистрСведений");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам");
	ПараметрыФормы.Вставить("НазваниеМакета",	НазваниеМакета);
	ПараметрыФормы.Вставить("ТекущийПериод",	Запись.Период);
	ПараметрыФормы.Вставить("ТекущийКод",		Запись[ИмяКода]);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКода", ИмяКода);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборКодаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораКода", ПараметрыФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКодаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ИмяКода = ДополнительныеПараметры.ИмяКода;
	
	ВыбранныйКод = РезультатЗакрытия;
	
	Если ВыбранныйКод <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Запись[ИмяКода] = ВыбранныйКод;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодыВидовИмущества(Период)

	КодыВидовИмущества = Новый Соответствие;
	
	Для Сч = 2 По 3 Цикл
		
		ИмяМакета = "КодыВидаИмуществаРаздел" + Строка(Сч);
		
		Макет = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПолучитьМакет(ИмяМакета);
		
		Если Сч = 2 Тогда
			Если Период < '20110101' Тогда
				ИмяОбласти = "Область2008";
			ИначеЕсли Период < '20120101' Тогда
				ИмяОбласти = "Область2011";
			ИначеЕсли Период < '20140101' Тогда
				ИмяОбласти = "Область2012";
			ИначеЕсли Период < '20150101' Тогда
				ИмяОбласти = "Область2014";
			ИначеЕсли Период < '20170101' Тогда
				ИмяОбласти = "Область2015";
			Иначе
				ИмяОбласти = "Область2017";
			КонецЕсли;
		Иначе
			ИмяОбласти = "Область2017";
		КонецЕсли;
		ТекущаяОбласть = Макет.Области.Найти(ИмяОбласти);
	
		Если ТекущаяОбласть = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				КодыВидовИмущества.Вставить(КодПоказателя, Название);
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(КодыВидовИмущества);

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКБК()

	КБК = Новый Соответствие;
	
	Макет = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПолучитьМакет("КБК");
	ТекущаяОбласть = Макет.Области.Найти("Область2008");

	Если ТекущаяОбласть <> Неопределено Тогда

		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				КБК.Вставить(КодПоказателя, Название);
			КонецЕсли;

		КонецЦикла;
	
	КонецЕсли;
	
	Возврат Новый ФиксированноеСоответствие(КБК);

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКодыНалоговойЛьготы(Период)

	КодыНалоговойЛьготы = Новый Соответствие;
	
	Макет = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПолучитьМакет("ЛьготыПоНалогуНаИмущество");
	
	Если Период < '20110101' Тогда
		ИмяОбласти = "Область2008";
	ИначеЕсли Период < '20150101' Тогда
		ИмяОбласти = "Область2011";
	Иначе
		ИмяОбласти = "Область2015";
	КонецЕсли;
	ТекущаяОбласть = Макет.Области.Найти(ИмяОбласти);
	
	Если ТекущаяОбласть <> Неопределено Тогда
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Название = ВРег(Лев(Название, 1)) + Сред(Название, 2);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				КодыНалоговойЛьготы.Вставить(КодПоказателя, Название);
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Новый ФиксированноеСоответствие(КодыНалоговойЛьготы);

КонецФункции

&НаКлиенте
Процедура КодПоОКТМО_ДругойКодПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойКодПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМО_ДругойНалоговыйОрганПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойНалоговыйОрганПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМО_ДругойКодОчистка(Элемент, СтандартнаяОбработка)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойКодОчистка(Элемент, СтандартнаяОбработка)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМО_ДругойНалоговыйОрганОчистка(Элемент, СтандартнаяОбработка)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойНалоговыйОрганОчистка(Элемент, СтандартнаяОбработка)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	
	Если Запись.Период < '20140101' Тогда
		Запись.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость;
	КонецЕсли;
	
	УстановитьРеквизитСовмещениеОСНОиЕНВД(ЭтотОбъект);
	
	КодыВидовИмущества = ПолучитьКодыВидовИмущества(Запись.Период);
	КодыНалоговойЛьготы = ПолучитьКодыНалоговойЛьготы(Запись.Период);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьРеквизитСовмещениеОСНОиЕНВД(ЭтотОбъект);
	УстановитьГоловнуюОрганизацию(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

СтруктураСохраняемыхРеквизитов = Новый Структура; // Пустая структура

#КонецОбласти