#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получает представление настройки для строки настройки форм статистики.
// Параметры:
//	ОбъектНаблюдения - СправочникСсылка.ОбъектыСтатистическогоНаблюдения - 
//	 Объект наблюдения для которого предназначена настройка.
//	Детализировать - Булево - Признак детализации по классификатору.
//	Детализация - ПеречислениеСсылка.ВидыСвободныхСтрокФормСтатистики - 
//	 Указывает на классификатор по которому должна выполняться детализация.
// Возвращаемое значение:
// Строка - Представление настройки.
//
Функция ПредставлениеОбъектаНастройки(ОбъектНаблюдения, Детализировать = Ложь, Детализация = Неопределено) Экспорт
	
	ПараметрыТекста = Новый Структура;
	ПараметрыТекста.Вставить("ОбъектНаблюдения", ОбъектНаблюдения);
	
	ШаблонТекста = "[ОбъектНаблюдения]";
	
	Если Детализировать Тогда
		
		ПредставлениеКлассификатора = Перечисления.ВидыСвободныхСтрокФормСтатистики.КраткоеПредставлениеКлассификатора(Детализация);
		Если ЗначениеЗаполнено(ПредставлениеКлассификатора) Тогда
			ШаблонТекста = НСтр("ru = '[ОбъектНаблюдения] - по отдельным [ПредставлениеКлассификатора]'");
		Иначе
			ШаблонТекста = НСтр("ru = '[ОбъектНаблюдения] - детально'");
		КонецЕсли;
		
		ПараметрыТекста.Вставить("ПредставлениеКлассификатора", ПредставлениеКлассификатора);
	
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ШаблонТекста, ПараметрыТекста);
	
КонецФункции

// Возвращает описание формы которую нужно открыть для настройки поля формы статистики.
// Параметры:
//	- ИмяОтчета         - Строка    - идентификатор отчета (имя отчета в метаданных).
//	- ИмяРедакцииОтчета - Строка    - идентификатор редакции отчета (имя формы в метаданных).
//	- ИмяПоля           - Строка    - код поля формы статистики.
//	- Организация       - СправочникСсылка.Организации - организация для которой предполагается открыть настройку.
// Возвращаемое значение:
//  Структура    - Описание формы, содержит свойства ИмяФормы, ПараметрыФормы.
//  Строка       - причина, по которой форму открывать нельзя.
//
Функция ОписаниеФормыНастройкиПоля(ИмяОтчета, ИмяРедакцииОтчета, ИмяПоля, Организация) Экспорт
	
	ПричинаНастройкаНеПредусмотрена = НСтр("ru = 'Для этого поля настройка не предусмотрена'");
	ПричинаНастройкаНедоступна      = НСтр("ru = 'Для этого поля настройка не выполнена. 
		|Редактирование настройки недоступно'");
	
	Если Не ЗначениеЗаполнено(ИмяПоля) Тогда
		
		// Откроем настройку для всей формы.
		
		Отбор = Новый Структура;
		Отбор.Вставить("ИмяОтчета", ИмяОтчета);
		Отбор.Вставить("ИмяФормы",  ИмяРедакцииОтчета);
		НастраиваемыеФормыСтатистики = ЗаполнениеФормСтатистики.НастраиваемыеФормыСтатистики(Отбор);
		Если НастраиваемыеФормыСтатистики.Количество() = 0 Тогда
			Возврат ПричинаНастройкаНеПредусмотрена;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация",     Организация);
		ПараметрыФормы.Вставить("ФормаСтатистики", НастраиваемыеФормыСтатистики[0].ФормаСтатистики);
		
		ОписаниеФормы = Новый Структура;
		ОписаниеФормы.Вставить("ИмяФормы",       "РегистрСведений.НастройкаЗаполненияФормСтатистики.Форма.НастройкаЗаполненияФормСтатистики");
		ОписаниеФормы.Вставить("ПараметрыФормы", ПараметрыФормы);
		
		Возврат ОписаниеФормы;
		
	КонецЕсли;
	
	// Откроем форму настройки поля.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИмяОтчета",         ИмяОтчета);
	Запрос.УстановитьПараметр("ИмяРедакцииОтчета", ИмяРедакцииОтчета);
	Запрос.УстановитьПараметр("ИмяПоля",           ИмяПоля);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоляФормСтатистики.СтатистическийПоказатель.Владелец КАК ОбъектНаблюдения,
	|	ПоляФормСтатистики.СтатистическийПоказатель.Владелец.ТребуетНастройки КАК ТребуетНастройки,
	|	ПоляФормСтатистики.СтатистическийПоказатель.Владелец.ИсточникДанных КАК ИсточникДанных,
	|	ПоляФормСтатистики.СтатистическийПоказатель.Владелец.Родитель КАК ОбъектНаблюденияРодитель,
	|	ПоляФормСтатистики.СтатистическийПоказатель.Детализировать КАК Детализировать,
	|	ПоляФормСтатистики.Владелец КАК ФормаСтатистики,
	|	ПоляФормСтатистики.НомерСтрокиОтчета
	|ПОМЕСТИТЬ ПравилаЗаполненияПоля
	|ИЗ
	|	Справочник.ПоляФормСтатистики КАК ПоляФормСтатистики
	|ГДЕ
	|	ПоляФормСтатистики.Владелец.Код = &ИмяРедакцииОтчета
	|	И ПоляФормСтатистики.Владелец.Владелец.ИсточникОтчета = &ИмяОтчета
	|	И НЕ ПоляФормСтатистики.ПометкаУдаления
	|	И ПоляФормСтатистики.ИмяПоля = &ИмяПоля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаЗаполненияПоля.ОбъектНаблюдения КАК ОбъектНаблюдения,
	|	ПравилаЗаполненияПоля.Детализировать КАК Детализировать,
	|	ПравилаЗаполненияПоля.ФормаСтатистики КАК ФормаСтатистики,
	|	ПравилаЗаполненияПоля.НомерСтрокиОтчета КАК НомерСтрокиОтчета
	|ИЗ
	|	ПравилаЗаполненияПоля КАК ПравилаЗаполненияПоля
	|ГДЕ
	|	ПравилаЗаполненияПоля.ТребуетНастройки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФормаСтатистики,
	|	НомерСтрокиОтчета,
	|	ОбъектНаблюдения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		// Настройка для этого поля не требуется.
		// Но настройка может требоваться полю, которое находится выше в иерархии.
		
		Запрос.Текст = // Используем тот же объект Запрос с установленным менеджером временных таблиц.
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПравилаЗаполненияПоля.ОбъектНаблюденияРодитель КАК ОбъектНаблюдения,
		|	ИСТИНА КАК Детализировать,
		|	ПравилаЗаполненияПоля.ФормаСтатистики КАК ФормаСтатистики,
		|	ПравилаЗаполненияПоля.НомерСтрокиОтчета
		|ИЗ
		|	ПравилаЗаполненияПоля КАК ПравилаЗаполненияПоля
		|ГДЕ
		|	ПравилаЗаполненияПоля.ОбъектНаблюденияРодитель.ТребуетНастройки
		|	И ПравилаЗаполненияПоля.ИсточникДанных = ЗНАЧЕНИЕ(Перечисление.ИсточникиДанныхСтатистическихПоказателей.ГруппаПоказателей)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФормаСтатистики,
		|	ПравилаЗаполненияПоля.НомерСтрокиОтчета,
		|	ОбъектНаблюдения";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 0 Тогда
			Возврат ПричинаНастройкаНеПредусмотрена;
		КонецЕсли;
		
	КонецЕсли;
	
	Выборка.Следующий();
	
	Если Выборка.Количество() > 1 Тогда
		
		// Для заполнения ячейки нужно выполнить несколько настроек.
		// Поэтому откроем настройку формы в целом.
		// и установим отбор по объектам наблюдения которые влияют на 
		// заполнение ячейки.
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация",     Организация);
		ПараметрыФормы.Вставить("ФормаСтатистики", Выборка.ФормаСтатистики);
		ПараметрыФормы.Вставить("ТекущаяСтрока",   Выборка.ОбъектНаблюдения);
		НомераСтрокОтчета = Новый Массив;
		
		// Список объектов наблюдения для передачи в форму в качестве параметра.
		// Типы параметров формы не содержат массив, поэтому создаем СписокЗначений.
		СписокОбъектовНаблюдения = Новый СписокЗначений;
		СписокОбъектовНаблюдения.Добавить(Выборка.ОбъектНаблюдения);
		НомераСтрокОтчета.Добавить(Выборка.НомерСтрокиОтчета);
		
		Пока Выборка.Следующий() Цикл
			
			СписокОбъектовНаблюдения.Добавить(Выборка.ОбъектНаблюдения);
			НомераСтрокОтчета.Добавить(Выборка.НомерСтрокиОтчета);
			
		КонецЦикла;	
		
		НастраиваемыеСтрокиОтчета = Новый Массив;
		ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(НастраиваемыеСтрокиОтчета, НомераСтрокОтчета);
		
		ПараметрыФормы.Вставить("ОбъектыНаблюдения", СписокОбъектовНаблюдения);
		ПараметрыФормы.Вставить("ОтборПоОбъектамНаблюдения", Истина);
		ПараметрыФормы.Вставить("НастраиваемыеСтрокиОтчета", НастраиваемыеСтрокиОтчета);
		
		ИмяФормы = "РегистрСведений.НастройкаЗаполненияФормСтатистики.Форма.НастройкаЗаполненияФормСтатистики";
		
	ИначеЕсли Выборка.Детализировать Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация",      Организация);
		Отбор.Вставить("ОбъектНаблюдения", Выборка.ОбъектНаблюдения);
		
		Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики) 
			И Не РегистрыСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики.ЕстьЗаписи(Отбор) Тогда
			Возврат ПричинаНастройкаНедоступна;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Отбор);
		
		ИмяФормы = "РегистрСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики.Форма.ФормаНабораЗаписей";
		
	Иначе // Форма одной настройки.
		
		ОписаниеНастройки = Новый Структура;
		ОписаниеНастройки.Вставить("Организация",       Организация);
		ОписаниеНастройки.Вставить("ОбъектНаблюдения",  Выборка.ОбъектНаблюдения);
		
		КлючЗаписи = РегистрыСведений.НастройкаЗаполненияФормСтатистики.СоздатьКлючЗаписи(ОписаниеНастройки);
		
		Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.НастройкаЗаполненияФормСтатистики) 
			И Не ЕстьЗапись(КлючЗаписи) Тогда
			Возврат ПричинаНастройкаНедоступна;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", КлючЗаписи);
		
		ИмяФормы = "РегистрСведений.НастройкаЗаполненияФормСтатистики.ФормаЗаписи";
		
	КонецЕсли;
	
	ОписаниеФормы = Новый Структура;
	ОписаниеФормы.Вставить("ИмяФормы",       ИмяФормы);
	ОписаниеФормы.Вставить("ПараметрыФормы", ПараметрыФормы);
	
	Возврат ОписаниеФормы;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаЗаписи" И Параметры.Свойство("Ключ") Тогда
		
		// Если запись с этим ключем еще не создана, то откроем форму нового элемента.
		
		Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.НастройкаЗаполненияФормСтатистики) Тогда
			Возврат;
		КонецЕсли;
			
		Если ЕстьЗапись(Параметры.Ключ) Тогда
			Возврат;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкаЗаполненияФормСтатистики;
		
		ЗначенияЗаполнения = Новый Структура;
		Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл
			ЗначенияЗаполнения.Вставить(Измерение.Имя);
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, Параметры.Ключ);
		
		ВыбраннаяФорма = МетаданныеРегистра.ОсновнаяФормаЗаписи.Имя;
		
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		Параметры.Удалить("Ключ");
			
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ЕстьЗапись(КлючЗаписи)
	
	Запись = РегистрыСведений.НастройкаЗаполненияФормСтатистики.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючЗаписи);
	Запись.Прочитать();
	
	Возврат Запись.Выбран();
	
КонецФункции


#КонецЕсли
