
#Область СлужебныеПроцедурыИФункции

/////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
// Управляет видимостью элементов формы.
//
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ОбъектыУчета.Видимость = (Форма.ВсеОбъектыУчета = 0);
	
КонецПроцедуры

&НаСервере
// Записывает настройки доступа на сервере.
//
Функция ЗаписатьНастройкиДоступаНаСервере()
	
	НаборЗаписей = РегистрыСведений.УПЖКХ_НастройкиДоступаПользователейКОбъектамУчета.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
	
	Если ВсеОбъектыУчета = 1 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ОбъектУчета  = Неопределено;
	Иначе
		НаборЗаписей.Загрузить(ОбъектыУчета.Выгрузить());
	КонецЕсли;
	
	// Заполняем поле "Пользователь".
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		ТекЗапись.Пользователь = Пользователь;
	КонецЦикла;
	
	Возврат КВП_ЗаписатьОбъект(НаборЗаписей);
	
КонецФункции

&НаСервереБезКонтекста
// Функция возвращает список вложенных групп.
//
Функция ПолучитьСписокВложенныхГрупп(Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КВП_Здания.Ссылка КАК ВложеннаяГруппа
	|ИЗ
	|	Справочник.КВП_Здания КАК КВП_Здания
	|ГДЕ
	|	КВП_Здания.ЭтоГруппа
	|	И КВП_Здания.Ссылка В ИЕРАРХИИ(&Родитель)
	|	И НЕ КВП_Здания.Ссылка = &Родитель";
	
	Запрос.УстановитьПараметр("Родитель", Родитель);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВложеннаяГруппа");
	
КонецФункции

/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Пользователь") И ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		
		Пользователь = Параметры.Пользователь;
		Элементы.Пользователь.ТолькоПросмотр = Истина;
		
		НаборЗаписей = РегистрыСведений.УПЖКХ_НастройкиДоступаПользователейКОбъектамУчета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
		НаборЗаписей.Прочитать();
		
		// Определим признак всех объектов учета:
		// 0 - на указанные в списке;
		// 1 - на все объекты.
		Если (НаборЗаписей.Количество() = 1 И Не ЗначениеЗаполнено(НаборЗаписей[0].ОбъектУчета)) Тогда
			ВсеОбъектыУчета = 1;
		Иначе
			ВсеОбъектыУчета = 0;
			ОбъектыУчета.Загрузить(НаборЗаписей.Выгрузить());
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
// Обработчик события "ПриИзменении" поля "ВсеОбъектыУчета".
//
Процедура ВсеОбъектыУчетаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Обработчик события "ОбработкаВыбора" поля "ОбъектыУчета".
//
Процедура ОбъектыУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		НоваяСтрока = ОбъектыУчета.Добавить();
		НоваяСтрока.ОбъектУчета = ВыбранноеЗначение;
		
		Если УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ВыбранноеЗначение, "ЭтоГруппа") Тогда
			
			СписокВложенныхГрупп = ПолучитьСписокВложенныхГрупп(ВыбранноеЗначение);
			
			Если СписокВложенныхГрупп.Количество() > 0 Тогда
				
				Для Каждого ТекГруппа Из СписокВложенныхГрупп Цикл
					НоваяСтрока = ОбъектыУчета.Добавить();
					НоваяСтрока.ОбъектУчета = ТекГруппа;
				КонецЦикла;
				
				УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("В список объектов учета автоматически добавлены подгруппы, входящие в иерархию группы """ + ВыбранноеЗначение + """");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
// Обработчик команды "КомандаЗаписать".
//
Процедура КомандаЗаписать(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указан пользователь", Отказ);
	КонецЕсли;
	Если ВсеОбъектыУчета = 0 И ОбъектыУчета.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не указаны объекты учета", Отказ);
	КонецЕсли;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаписатьНастройкиДоступаНаСервере() Тогда
		Оповестить("ОбновитьСписокНастроекДоступаКОбъектамУчета");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик команды "Подобрать".
//
Процедура Подобрать(Команда)
	
	ОткрытьФорму("Справочник.КВП_Здания.ФормаВыбора", Новый Структура("ЗакрыватьПриВыборе, ВыборГруппИЭлементов", Ложь, ИспользованиеГруппИЭлементов.ГруппыИЭлементы), Элементы.ОбъектыУчета);
	
КонецПроцедуры

#КонецОбласти