#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьСостоянияДокументовОткрытияЛицевыхСчетов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СостоянияДокументовОткрытияЛицевыхСчетов.ДокументОткрытияЛицевыхСчетов
	|ИЗ
	|	РегистрСведений.СостоянияДокументовОткрытияЛицевыхСчетов КАК СостоянияДокументовОткрытияЛицевыхСчетов";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Обновление уже выполнялось
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ПодтверждениеОткрытияЛицевыхСчетовСотрудников.Ссылка КАК Ссылка,
	|	ПодтверждениеОткрытияЛицевыхСчетовСотрудников.ПервичныйДокумент КАК ЗаявкаНаОткрытие
	|ПОМЕСТИТЬ ВТПодтверждениеОткрытияЛицевыхСчетов
	|ИЗ
	|	Документ.ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников КАК ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеОткрытияЛицевыхСчетовСотрудников КАК ПодтверждениеОткрытияЛицевыхСчетовСотрудников
	|		ПО ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Ссылка = ПодтверждениеОткрытияЛицевыхСчетовСотрудников.ПервичныйДокумент
	|ГДЕ
	|	ПодтверждениеОткрытияЛицевыхСчетовСотрудников.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтверждениеОткрытияЛицевыхСчетов.ЗаявкаНаОткрытие КАК ЗаявкаНаОткрытие,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПодтверждениеОткрытияЛицевыхСчетовСотрудников.РезультатОткрытияСчета = ЗНАЧЕНИЕ(Перечисление.РезультатыОткрытияЛицевыхСчетовСотрудников.СчетОткрыт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СуществуетРезультатОткрытияСчетаОткрыт,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПодтверждениеОткрытияЛицевыхСчетовСотрудников.РезультатОткрытияСчета <> ЗНАЧЕНИЕ(Перечисление.РезультатыОткрытияЛицевыхСчетовСотрудников.СчетОткрыт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СуществуетРезультатОткрытияСчетаНеОткрыт
	|ПОМЕСТИТЬ ВТРезультатыОткрытияЛицевыхСчетов
	|ИЗ
	|	ВТПодтверждениеОткрытияЛицевыхСчетов КАК ПодтверждениеОткрытияЛицевыхСчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеОткрытияЛицевыхСчетовСотрудников.Сотрудники КАК ПодтверждениеОткрытияЛицевыхСчетовСотрудников
	|		ПО ПодтверждениеОткрытияЛицевыхСчетов.Ссылка = ПодтверждениеОткрытияЛицевыхСчетовСотрудников.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеОткрытияЛицевыхСчетов.ЗаявкаНаОткрытие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Ссылка КАК Документ,
	|	ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ПустаяСсылка)
	|		КОГДА РезультатыОткрытияЛицевыхСчетов.ЗаявкаНаОткрытие ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА РезультатыОткрытияЛицевыхСчетов.СуществуетРезультатОткрытияСчетаОткрыт
	|							И РезультатыОткрытияЛицевыхСчетов.СуществуетРезультатОткрытияСчетаНеОткрыт
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ЛицевыеСчетаОткрытыСОшибками)
	|					КОГДА РезультатыОткрытияЛицевыхСчетов.СуществуетРезультатОткрытияСчетаНеОткрыт
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ЛицевыеСчетаНеОткрыты)
	|					КОГДА РезультатыОткрытияЛицевыхСчетов.СуществуетРезультатОткрытияСчетаОткрыт
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ЛицевыеСчетаОткрыты)
	|				КОНЕЦ
	|		КОГДА ЗаявкаНаОткрытиеЛицевыхСчетовСотрудниковПрисоединенныеФайлы.Ссылка ЕСТЬ НЕ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ОжидаетПодтверждения)
	|		КОГДА ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ГотовКВыгрузке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостояниеЗаявкиНаОткрытиеЛицевогоСчетаСотрудника.ПустаяСсылка)
	|	КОНЕЦ КАК Состояние
	|ПОМЕСТИТЬ ВТЗаявкиНаОткрытиеЛицевыхСчетов
	|ИЗ
	|	Документ.ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников КАК ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаявкаНаОткрытиеЛицевыхСчетовСотрудниковПрисоединенныеФайлы КАК ЗаявкаНаОткрытиеЛицевыхСчетовСотрудниковПрисоединенныеФайлы
	|		ПО ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Ссылка = ЗаявкаНаОткрытиеЛицевыхСчетовСотрудниковПрисоединенныеФайлы.ВладелецФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезультатыОткрытияЛицевыхСчетов КАК РезультатыОткрытияЛицевыхСчетов
	|		ПО ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Ссылка = РезультатыОткрытияЛицевыхСчетов.ЗаявкаНаОткрытие
	|ГДЕ
	|	ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Документ КАК ДокументОткрытияЛицевыхСчетов,
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Организация,
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Состояние
	|ИЗ
	|	ВТЗаявкиНаОткрытиеЛицевыхСчетов КАК ЗаявкиНаОткрытиеЛицевыхСчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Документ,
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Организация,
	|	ЗаявкиНаОткрытиеЛицевыхСчетов.Состояние";
	
	Набор = РегистрыСведений.СостоянияДокументовОткрытияЛицевыхСчетов.СоздатьНаборЗаписей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовоеСостояниеДокумента = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеСостояниеДокумента, Выборка);
	КонецЦикла;
	
	Набор.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
	Набор.ОбменДанными.Загрузка = Истина;
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли