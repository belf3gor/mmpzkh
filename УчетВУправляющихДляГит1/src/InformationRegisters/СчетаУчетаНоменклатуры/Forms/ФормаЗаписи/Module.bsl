#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Запись.Склад) Тогда
		Запись.ТипСклада = ТипСклада(Запись.Склад);
	Иначе
		Запись.ТипСклада = Неопределено;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаУслугиПриИзменении(Элемент)

	ПриИзмененииСчетаУчетаНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаТовараПриИзменении(Элемент)
	
	ПриИзмененииСчетаУчетаНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура Субконто1ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(1);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(2);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(3);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	УправлениеВидимостью();
	
	ВидимостьАналитикиУслуги();
	Если Элементы.ГруппаСчетаУслуги.Видимость Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
			ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	КонецЕсли; 
	
	ОпределятьСчетаРеализацииАвтоматически = НЕ ЗначениеЗаполнено(Запись.СчетДоходовОтРеализации)
		И НЕ ЗначениеЗаполнено(Запись.СчетРасходовОтРеализации);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	РаздельныйУчетНДСНаСчете19 = УчетНДСРаздельный.ЕстьУчетнаяПолитикаСРаздельнымУчетомНДСНаСчете19();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью()

	Элементы.СпособУчетаНДС.Видимость = РаздельныйУчетНДСНаСчете19;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	Элементы.ТипСклада.Доступность = НЕ ЗначениеЗаполнено(Запись.Склад);
	Элементы.СчетДоходовОтРеализации.Доступность  = НЕ Форма.ОпределятьСчетаРеализацииАвтоматически;
	Элементы.СчетРасходовОтРеализации.Доступность = НЕ Форма.ОпределятьСчетаРеализацииАвтоматически;

КонецПроцедуры

&НаСервере
Процедура ВидимостьАналитикиУслуги()
	
	ЭтоУслуга = Ложь;
	
	Если ЗначениеЗаполнено(Запись.СчетУчета) Тогда
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Запись.СчетУчета);
		ЭтоУслуга = НЕ СвойстваСчета.Количественный;
	КонецЕсли;
	
	Элементы.ГруппаСчетаУслуги.Видимость = ЭтоУслуга;
	Элементы.ГруппаСчетаТовары.Видимость = Не ЭтоУслуга;
	
	Если ЭтоУслуга Тогда
		Элементы.СчетУчетаУслуги.АктивизироватьПоУмолчанию = Истина;
	Иначе
		Элементы.СчетУчетаТовара.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипСклада(Ссылка)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ТипСклада");
	
КонецФункции

&НаКлиенте
Процедура ОпределятьСчетаРеализацииАвтоматическиПриИзменении(Элемент)
	
	Если ОпределятьСчетаРеализацииАвтоматически Тогда
		Запись.СчетДоходовОтРеализации  = Неопределено;
		Запись.СчетРасходовОтРеализации = Неопределено;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСчетаУчетаНаСервере()

	ВидимостьАналитикиУслуги();
	Если Элементы.ГруппаСчетаУслуги.Видимость Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
			ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСубконто(НомерСубконто)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		ЭтотОбъект, Запись, НомерСубконто, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтотОбъект, Элемент, СтандартнаяОбработка, ДанныеОбъекта);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма)

	Результат = БухгалтерскийУчетКлиентСервер.ПараметрыУстановкиСвойствСубконтоПоШаблону(
		"Субконто", "", "Субконто", "", "СчетУчета");
		
	Результат.ДопРеквизиты.Вставить("Организация", Форма.Запись.Организация);
	
	Возврат Результат;

КонецФункции

#КонецОбласти
