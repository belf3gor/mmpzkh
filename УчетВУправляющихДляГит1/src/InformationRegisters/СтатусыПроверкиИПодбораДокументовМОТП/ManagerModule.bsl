
#Область ПрограммныйИнтерфейс

// Выполняет запись в регистр промежуточных результатов проверки и подбора документа.
// 
// Параметры:
// 	ПроверяемыйДокумент    - ДокументСсылка - документ, в котором выполняется проверка и/или подбор.
// 	ДанныеПроверкиИПодбора - ХранилищеЗначения - промежуточные результаты проверки. 
//
Процедура СохранитьПромежуточныеРезультатыПроверкиДокумента(ПроверяемыйДокумент, ДанныеПроверкиИПодбора) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.СтатусыПроверкиИПодбораДокументовМОТП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ПроверяемыйДокумент);

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Документ               = ПроверяемыйДокумент;
	НоваяЗапись.ДанныеПроверкиИПодбора = ДанныеПроверкиИПодбора;
	НоваяЗапись.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Выполняется;
	
	НаборЗаписей.Записать(Истина);

КонецПроцедуры


// Выполняет запись в регистр, отражующую завершение проверки и подбора документа.
// 
// Параметры:
// 	ПроверяемыйДокумент    - ДокументСсылка - документ, в котором выполнялась проверка и/или подбор.
// 	ДанныеПроверкиИПодбора - ХранилищеЗначения, Неопределено - для входящих документов результаты проверки сохраняются,
// 	   для исходящих документов нет. 
// 	ТребуемоеДействиеЭДО   - ПеречислениеСсылка.ТребуемоеДействиеДокументЭДО - действие, которое нужно выполнить с документом ЭДО.
//
Процедура ОтразитьЗавершениеПроверкиДокумента(ПроверяемыйДокумент, ДанныеПроверкиИПодбора, ТребуемоеДействиеЭДО = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.СтатусыПроверкиИПодбораДокументовМОТП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ПроверяемыйДокумент);

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Документ               = ПроверяемыйДокумент;
	НоваяЗапись.ДанныеПроверкиИПодбора = ДанныеПроверкиИПодбора;
	НоваяЗапись.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Завершено;
	НоваяЗапись.ТребуемоеДействиеЭДО   = ТребуемоеДействиеЭДО;
	
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

// Выполняет запись в регистр, отражующую возобновление проверки и подбора документа.
// 
// Параметры:
//   ПроверяемыйДокумент - ДокументСсылка - документ, в котором выполнялась проверка и/или подбор.
// 
// Возвращаемое значение:
//   Булево - запись в регистре проверки и подбора выполнена
//
Функция ОтразитьВозобновлениеПроверкиДокумента(ПроверяемыйДокумент) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.СтатусыПроверкиИПодбораДокументовМОТП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ПроверяемыйДокумент);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() Тогда
		Запись = НаборЗаписей[0];
		Запись.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Выполняется;
		Запись.ТребуемоеДействиеЭДО   = Перечисления.ТребуемоеДействиеДокументЭДО.ПустаяСсылка();
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;

КонецФункции

#КонецОбласти