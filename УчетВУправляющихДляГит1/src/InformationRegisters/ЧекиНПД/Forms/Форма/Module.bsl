
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.ОснованиеЧека) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОснованиеЧека = Параметры.ОснованиеЧека;
	НастроитьФормуПоСостояниюЧека(РегистрыСведений.ЧекиНПД.СведенияОЧеке(ОснованиеЧека));
	
	Если ЧекиНПДКлиентСервер.НужноНачатьФормированиеЧека(СведенияОЧеке)
		И Не ЗначениеЗаполнено(Параметры.ПараметрыФормированияЧека) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСведенияДляОтправкиЧека(Параметры.ПараметрыОтправкиЧека);
	
	УстановитьЗаголовокПоЧеку();
	
	ПараметрыФормированияЧека = Параметры.ПараметрыФормированияЧека;
	
	ОтобразитьЭтапПоСведениямОЧеке();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЧекиНПДКлиентСервер.НужноНачатьФормированиеЧека(СведенияОЧеке) Тогда
		ДлительнаяОперация = ЗапуститьФормированиеЧекаВФоне();
		ОжидатьФормированиеЧекаВФоне(ДлительнаяОперация);
	ИначеЕсли НЕ ЗначениеЗаполнено(СведенияОЧеке.ПрисоединенныйФайлЧека) 
		И ЗначениеЗаполнено(СведенияОЧеке.АдресЧекаНаСайте) Тогда 
		
		ДлительнаяОперация = ЗапуститьПолучениеКартинкиВФоне();
		ОжидатьПолучениеКартинкиВФоне(ДлительнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура АдресЧекаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(СведенияОЧеке)
		И ЗначениеЗаполнено(СведенияОЧеке.АдресЧекаНаСайте) Тогда
		ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(СведенияОЧеке.АдресЧекаНаСайте);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьEmailПриИзменении(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьEmailНастройкаУчетнойЗаписиПредложена", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьSMSПриИзменении(Элемент)
	
	Если НастройкаОтправкиSMSВыполнена() Тогда
		НастроитьГруппуОтправки(ЭтотОбъект);
	Иначе
		НастроитьОтправкуСМС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресЭлектроннойПочтыПриИзменении(Элемент)
	
	ОтправлятьEmail = ЗначениеЗаполнено(АдресЭлектроннойПочты);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьEmailНастройкаУчетнойЗаписиПредложена", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаПриИзменении(Элемент)
	
	ОтправлятьSMS = ЗначениеЗаполнено(НомерТелефона);
	
	Если НастройкаОтправкиSMSВыполнена() Тогда
		НастроитьГруппуОтправки(ЭтотОбъект);
	Иначе
		НастроитьОтправкуСМС();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	Если Не ЗначениеЗаполнено(СведенияОЧеке) Тогда
		Возврат;
	КонецЕсли;
	
	МакетЧека = МакетЧека(СведенияОЧеке);
	
	Если МакетЧека = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторПечатнойФормы = "ПечатнаяФорма";
	НазваниеПечатнойФормы = СведенияОЧеке.ОписаниеЧека;
	
	КоллекцияПечатныхФорм               = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма                       = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета         = НазваниеПечатнойФормы;
	ПечатнаяФорма.ТабличныйДокумент     = МакетЧека;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм);
	
КонецПроцедуры

&НаКлиенте
Процедура Аннулировать(Команда)
	
	ТекстВопроса = НСтр(
		"ru = 'Чек будет аннулирован.
		|Доход будет исключен из расчета налога.
		|
		|Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("АннулироватьНаКлиентеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет,
		НСтр("ru = 'Аннулирование чека'"));
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если Не РеквизитыДляОтправкиЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ЗапуститьОтправкуЧекаНаСервере();
	ОжидатьЗавершенияОтправкиЧека(ДлительнаяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура Повторить(Команда)
	
	Если ОперацияДляПовтора = "ФормированиеЧека"
		И ЧекиНПДКлиентСервер.НужноНачатьФормированиеЧека(СведенияОЧеке) Тогда
		ДлительнаяОперация = ЗапуститьФормированиеЧекаВФоне();
		ОжидатьФормированиеЧекаВФоне(ДлительнаяОперация);
	ИначеЕсли ОперацияДляПовтора = "ПолучениеКартинки" 
		И ЗначениеЗаполнено(СведенияОЧеке.АдресЧекаНаСайте) Тогда 
		ДлительнаяОперация = ЗапуститьПолучениеКартинкиВФоне();
		ОжидатьПолучениеКартинкиВФоне(ДлительнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкаФормы

&НаСервере
Процедура НастроитьФормуПоСостояниюЧека(НовыеСведенияОЧеке)
	
	СведенияОЧеке = НовыеСведенияОЧеке;
	
	УстановитьЗаголовокПоЧеку();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокПоЧеку()
	
	Если ЧекиНПДКлиентСервер.НужноНачатьФормированиеЧека(СведенияОЧеке) Тогда
		Заголовок = НСтр("ru = 'Чек (создание)'");
	Иначе
		Заголовок = СведенияОЧеке.ОписаниеЧека;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьПараметрыФормыКДлительнойОперации()
	
	ТекстОшибки = "";
	ОперацияДляПовтора = "";
	ВремяОжиданияРезультата = 1;
	
КонецПроцедуры

#КонецОбласти

#Область ЭтапыПечатиЧека

&НаСервере
Процедура ОтобразитьЭтапПоСведениямОЧеке()
	
	Если ЧекиНПДКлиентСервер.НужноНачатьФормированиеЧека(СведенияОЧеке) Тогда
		
		ПоказатьДлительнуюОперациюФормированияЧека();
		
	ИначеЕсли СведенияОЧеке.Состояние = Перечисления.СостоянияЧековНПД.Зарегистрирован
		Или СведенияОЧеке.Состояние = Перечисления.СостоянияЧековНПД.ОшибкаПриАннулировании
		Или СведенияОЧеке.Состояние = Перечисления.СостоянияЧековНПД.Аннулирован Тогда
		
		Если ЗначениеЗаполнено(СведенияОЧеке.ПрисоединенныйФайлЧека) Тогда
			ПоказатьЧек();
		КонецЕсли;
		
	ИначеЕсли СведенияОЧеке.Состояние = Перечисления.СостоянияЧековНПД.ВыполняетсяАннулирование Тогда
		
		ПоказатьДлительнуюОперациюАннулированиеЧека();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуДляЭтапа(ЭтапДляОтображения)
	
	Этапы= ЭтапыПечатиЧека();
	Если Не Этапы.Свойство(ЭтапДляОтображения) Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Указан неправильный этап печати чека %1'"),
			ЭтапДляОтображения);
	КонецЕсли;
	
	СвойстваЭтапа = Этапы[ЭтапДляОтображения];
	
	НастроитьВидимостьГруппЭтапа(ЭтапДляОтображения, СвойстваЭтапа);
	
	НастроитьКнопкиКоманднойПанели(ЭтапДляОтображения, СвойстваЭтапа);
	
	ЕстьОшибка = ЗначениеЗаполнено(ТекстОшибки);
	
	НастроитьВидимостьБаннераОшибки(ЕстьОшибка);
	
	ЭтотОбъект.КлючСохраненияПоложенияОкна = ЭтапДляОтображения
		+ ?(ЕстьОшибка, "Ошибка", "");
	
КонецПроцедуры

&НаСервере
Функция ЭтапыПечатиЧека()
	
	Этапы = Новый Структура;
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаДлительнаяОперация";
	СвойстваЭтапа.Кнопки = "";
	СвойстваЭтапа.ДлительнаяОперация = Истина;
	Этапы.Вставить("ДлительнаяОперацияФормированияЧека", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаДлительнаяОперация";
	СвойстваЭтапа.Кнопки = "ФормаПечать,ГруппаОтправить,ФормаАннулировать";
	СвойстваЭтапа.ДлительнаяОперация = Истина;
	Этапы.Вставить("ДлительнаяОперацияПолученияФайла", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаОшибкаФормированияЧека";
	СвойстваЭтапа.Кнопки = "ФормаПовторить";
	Этапы.Вставить("ОшибкаПолученияКартинки", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаОшибкаФормированияЧека";
	СвойстваЭтапа.Кнопки = "ФормаПовторить";
	Этапы.Вставить("ОшибкаФормированияЧека", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаЧек";
	СвойстваЭтапа.Кнопки = "ФормаПечать,ГруппаОтправить,ФормаАннулировать";
	Этапы.Вставить("Чек", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаДлительнаяОперация";
	СвойстваЭтапа.Кнопки = "ФормаПечать,ГруппаОтправить,ФормаАннулировать";
	СвойстваЭтапа.ДлительнаяОперация = Истина;
	Этапы.Вставить("ДлительнаяОперацияАннулированияЧека", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаЧек";
	СвойстваЭтапа.Кнопки = "ФормаПечать,ГруппаОтправить";
	Этапы.Вставить("ЧекАннулирован", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаЧекПечатьНеДоступна";
	СвойстваЭтапа.Кнопки = "";
	Этапы.Вставить("ЧекАннулированПечатьНеДоступна", СвойстваЭтапа);
	
	СвойстваЭтапа = НовыйСвойстваЭтапа();
	СвойстваЭтапа.ГруппаЭтапа = "ГруппаДлительнаяОперация";
	СвойстваЭтапа.Кнопки = "ФормаПечать,ГруппаОтправить";
	СвойстваЭтапа.ДлительнаяОперация = Истина;
	Этапы.Вставить("ДлительнаяОперацияОтправкиЧека", СвойстваЭтапа);
	
	Возврат Этапы;
	
КонецФункции

&НаСервере
Процедура НастроитьВидимостьГруппЭтапа(ЭтапДляОтображения, СвойстваЭтапа)
	
	Для Каждого ЭлементЭтапа Из Элементы.ГруппаЭтапы.ПодчиненныеЭлементы Цикл
		ВидимостьЭтапа = ЭлементЭтапа.Имя = СвойстваЭтапа.ГруппаЭтапа;
		ЭлементЭтапа.Видимость = ВидимостьЭтапа;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьКнопкиКоманднойПанели(ЭтапДляОтображения, СвойстваЭтапа)
	
	Элементы.ГруппаКоманднаяПанель.Доступность = Не СвойстваЭтапа.ДлительнаяОперация;
	
	ЭлементыЭтапа = СтрРазделить(СвойстваЭтапа.Кнопки, ",");
	
	НастроитьВидимостьЭлементовКоманднойПанели(ЭлементыЭтапа);
	
	УстановитьКнопкуПоУмолчанию(ЭлементыЭтапа);
	
	Если Элементы.ГруппаОтправить.Видимость Тогда
		НастроитьГруппуОтправки(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементовКоманднойПанели(ЭлементыЭтапа)
	
	Для Каждого ЭлементКоманднойПанели Из Элементы.ГруппаКоманднаяПанель.ПодчиненныеЭлементы Цикл
		
		ВидимостьКнопки = ЭлементыЭтапа.Найти(ЭлементКоманднойПанели.Имя) <> Неопределено;
		ЭлементКоманднойПанели.Видимость = ВидимостьКнопки;
		
	КонецЦикла;
	
	Элементы.ФормаАннулировать.Видимость = Элементы.ФормаАннулировать.Видимость
		И ПолучитьФункциональнуюОпцию("ДоступнаИнтеграцияСПлатформойСамозанятые");
	Элементы.ФормаАннулировать.Доступность = Не ЭтотОбъект.ТолькоПросмотр;
	
КонецПроцедуры

Процедура УстановитьКнопкуПоУмолчанию(ЭлементыЭтапа)
	
	// В качестве основной кнопки указываем первую из кнопок командной панели.
	Для Каждого ИмяЭлемента Из ЭлементыЭтапа Цикл
		Если Не ЗначениеЗаполнено(ИмяЭлемента) Тогда
			Продолжить;
		КонецЕсли;
		ЭлементКоманднойПанели = Элементы[ИмяЭлемента];
		Если ТипЗнч(ЭлементКоманднойПанели) = Тип("КнопкаФормы") Тогда
			ЭлементКоманднойПанели.КнопкаПоУмолчанию = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьГруппуОтправки(Форма)
	
	Форма.Элементы.Отправить.Доступность = Форма.ОтправлятьEmail Или Форма.ОтправлятьSMS;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьБаннераОшибки(ЕстьОшибка)
	
	Элементы.ГруппаОшибка.Видимость = ЕстьОшибка;
	
КонецПроцедуры

&НаСервере
Функция НовыйСвойстваЭтапа()
	
	СвойстваЭтапа = Новый Структура;
	СвойстваЭтапа.Вставить("ГруппаЭтапа", "");
	СвойстваЭтапа.Вставить("Кнопки", "");
	СвойстваЭтапа.Вставить("ДлительнаяОперация", Ложь);
	Возврат СвойстваЭтапа;
	
КонецФункции

#КонецОбласти

#Область ФормированиеЧека

&НаСервере
Функция ЗапуститьФормированиеЧекаВФоне()
	
	ПодготовитьПараметрыФормыКДлительнойОперации();
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование чека самозанятых в фоне.'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.СформироватьЧекВФоне",
		ПараметрыФормированияЧека,
		ПараметрыВыполнения);
	
	ПоказатьДлительнуюОперациюФормированияЧека();
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервере
Функция ЗапуститьПроверкуРезультатаФормированияЧекаВФоне()
	
	ПараметрыПроцедуры = ЧекиНПДКлиентСервер.НовыйПараметрыОжиданияФормированияЧека();
	ПараметрыПроцедуры.Ссылка = ОснованиеЧека;
	ПараметрыПроцедуры.ПараметрыОжиданияРезультата = ПараметрыОжиданияРезультата;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка результата формирования чека самозанятых в фоне.'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.ПроверитьРезультатФормированияЧекаВФоне",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
		
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ПоказатьДлительнуюОперациюФормированияЧека();
	КонецЕсли;
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОжидатьФормированиеЧекаВФоне(ДлительнаяОперация)
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание формирования чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжидатьФормированиеЧекаВФонеЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьФормированиеЧекаВФонеЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание формирования чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОбработатьРезультатФормированияЧекаВФоне(ДлительнаяОперация.АдресРезультата);
		
		ЗапуститьОжиданиеРезультатаФормированияЧека();
		
		ОповеститьОбИзмененияхЧека();
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ПоказатьОшибкуФормированияЧека(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатФормированияЧекаВФоне(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка формирования чека в фоне: пустой результат.'");
	КонецЕсли;
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Если ЗначениеЗаполнено(Результат.СведенияОЧеке) Тогда
		НастроитьФормуПоСостояниюЧека(Результат.СведенияОЧеке);
	КонецЕсли;
	
	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
	
	Если Результат.Ошибка Или Результат.СтатусЗапроса = СтатусыЗапросов.Ошибка Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьОшибкуФормированияЧека(Результат.ТекстОшибки);
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Выполняется Тогда
		Если ЗначениеЗаполнено(Результат.ПараметрыОжиданияРезультата) Тогда
			ПараметрыОжиданияРезультата = Результат.ПараметрыОжиданияРезультата;
		КонецЕсли;
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Выполнено Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьЧек();
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Отменено Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьОшибкуФормированияЧека(НСтр("ru = 'Регистрация чека отменена.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьДлительнуюОперациюФормированияЧека()
	
	Элементы.ДокументыДлительнаяОперацияОписание.Заголовок = НСтр("ru = 'Доход регистрируется в сервисе Мой налог...'");
	НастроитьФормуДляЭтапа("ДлительнаяОперацияФормированияЧека");
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкуФормированияЧека(ТекстОшибки)
	
	ОписаниеОперации = НСтр("ru = 'При формировании чека возникла ошибка'");
	УстановитьТекстОшибки(ОписаниеОперации, ТекстОшибки);
	ОперацияДляПовтора = "ФормированиеЧека";
	НастроитьФормуДляЭтапа("ОшибкаФормированияЧека");
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкуПолучениеКартинки(ТекстОшибки)
	
	ОписаниеОперации = НСтр("ru = 'При получении изображения чека возникла ошибка'");
	УстановитьТекстОшибки(ОписаниеОперации, ТекстОшибки);
	ОперацияДляПовтора = "ПолучениеКартинки";
	НастроитьФормуДляЭтапа("ОшибкаПолученияКартинки");
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапуститьОжиданиеРезультатаФормированияЧека()
	
	Если Не ЗначениеЗаполнено(ПараметрыОжиданияРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьОжиданиеРезультатаФормированияЧека", ВремяОжиданияРезультата, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьОжиданиеРезультатаФормированияЧека() Экспорт
	
	ДлительнаяОперация = ЗапуститьПроверкуРезультатаФормированияЧекаВФоне();
	ОжидатьФормированиеЧекаВФоне(ДлительнаяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененияхЧека()
	
	// Если не заполнен реквизит ПараметрыОжиданияРезультата, то это значит,
	// что ожидание уже завершилось - можно оповещать об этом формы.
	Если Не ЗначениеЗаполнено(ПараметрыОжиданияРезультата)
		И ЗначениеЗаполнено(СведенияОЧеке) Тогда
		Оповестить(ЧекиНПДКлиентСервер.ИмяСобытияДляОповещенияОбИзмененииЧека(), СведенияОЧеке, ЭтотОбъект);
		ОповеститьОбИзменении(СведенияОЧеке.ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьПолучениеКартинкиВФоне()
	
	ПодготовитьПараметрыФормыКДлительнойОперации();
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение изображения чека самозанятых в фоне.'");
	
	ПараметрыПроцедуры = Новый Структура("СведенияОЧеке", СведенияОЧеке);
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.ПолучитьФайлЧекаВФоне",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	ПоказатьДлительнуюОперациюПолученияФайла();
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОжидатьПолучениеКартинкиВФоне(ДлительнаяОперация)
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Не удалось получить QR код чека в сервисе ""Самозанятые"". Попробуйте позже.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжидатьПолучениеКартинкиВФонеЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьПолучениеКартинкиВФонеЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт

	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание получения чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		НовыеСведенияОЧеке = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если НовыеСведенияОЧеке <> Неопределено Тогда
			НастроитьФормуПоСостояниюЧека(НовыеСведенияОЧеке);
			ОтобразитьЭтапПоСведениямОЧеке();
		КонецЕсли; 
		
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ПоказатьОшибкуПолучениеКартинки(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;

КонецПроцедуры 


&НаСервере
Процедура ПоказатьДлительнуюОперациюПолученияФайла()
	
	Элементы.ДокументыДлительнаяОперацияОписание.Заголовок = НСтр("ru = 'Получаем сведения о чеке в сервисе Мой налог...'");
	НастроитьФормуДляЭтапа("ДлительнаяОперацияПолученияФайла");
	
КонецПроцедуры

#КонецОбласти

#Область ОтображениеЧека

&НаСервере
Процедура ПоказатьЧек()
	
	ЧекАннулирован = ЗначениеЗаполнено(СведенияОЧеке)
		И (СведенияОЧеке.Состояние = Перечисления.СостоянияЧековНПД.Аннулирован
		Или СведенияОЧеке.ПроизведенВозвратПоЧеку);
	
	ПрефиксЭтапа = ?(ЧекАннулирован, "ЧекАннулирован", "Чек");
	
	Если ЗначениеЗаполнено(СведенияОЧеке.ПрисоединенныйФайлЧека) Тогда
		ПоказатьЧекНаФорме(СведенияОЧеке);
		НастроитьФормуДляЭтапа(ПрефиксЭтапа);
	Иначе
		НастроитьФормуДляЭтапа(ПрефиксЭтапа + "ПечатьНеДоступна");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьЧекНаФорме(СведенияОЧеке)
	
	Если Не ЗначениеЗаполнено(СведенияОЧеке.ПрисоединенныйФайлЧека) Тогда
		Элементы.АдресЧека.Видимость = Истина;
		Элементы.ТаблицаЧека.Видимость = Ложь;
		Элементы.АдресЧека.ТекстНевыбраннойКартинки = НСтр("ru = 'Не удалось скачать файл чека'");
		Возврат;
	КонецЕсли;
	
	ДанныеЧека = РаботаСФайлами.ДанныеФайла(СведенияОЧеке.ПрисоединенныйФайлЧека, УникальныйИдентификатор);
	
	ЧекХранитсяВТаблице = НРег(ДанныеЧека.Расширение) = "mxl";
	Если ЧекХранитсяВТаблице Тогда
		ДвоичныеДанныеЧека = ПолучитьИзВременногоХранилища(ДанныеЧека.СсылкаНаДвоичныеДанныеФайла);
		ТаблицаЧека = РегистрыСведений.ЧекиНПД.ТабличныйДокументЧека(ДвоичныеДанныеЧека);
		УдалитьИзВременногоХранилища(ДанныеЧека.СсылкаНаДвоичныеДанныеФайла);
	Иначе
		АдресЧека = ДанныеЧека.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	
	Элементы.АдресЧека.Видимость = Не ЧекХранитсяВТаблице;
	Элементы.ТаблицаЧека.Видимость = ЧекХранитсяВТаблице;
	
КонецПроцедуры

#КонецОбласти

#Область АннулированиеЧека

&НаКлиенте
Процедура АннулироватьНаКлиентеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ЗапуститьАннулированиеЧекаВФоне();
	ОжидатьАннулированиеЧекаВФоне(ДлительнаяОперация);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьАннулированиеЧекаВФоне()
	
	ПодготовитьПараметрыФормыКДлительнойОперации();
	
	ПараметрыАннулированияЧека = ЧекиНПДКлиентСервер.НовыйПараметрыАннулированияЧека();
	ПараметрыАннулированияЧека.Ссылка = ОснованиеЧека;
	ПараметрыАннулированияЧека.Организация = СведенияОЧеке.Организация;
	ПараметрыАннулированияЧека.НомерЧека = СведенияОЧеке.НомерЧека;
	ПараметрыАннулированияЧека.ПричинаОтменыЧека = НСтр("ru = 'Чек сформирован ошибочно'");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Аннулирование чека самозанятых в фоне.'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.АннулироватьЧекВФоне",
		ПараметрыАннулированияЧека,
		ПараметрыВыполнения);
	
	ПоказатьДлительнуюОперациюАннулированиеЧека();
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервере
Функция ЗапуститьПроверкуРезультатаАннулированияЧекаВФоне()
	
	ПараметрыПроцедуры = ЧекиНПДКлиентСервер.НовыйПараметрыОжиданияАннулированияЧека();
	ПараметрыПроцедуры.Ссылка = ОснованиеЧека;
	ПараметрыПроцедуры.ПараметрыОжиданияРезультата = ПараметрыОжиданияРезультата;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка результата аннулирования чека самозанятых в фоне.'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.ПроверитьРезультатАннулированияЧекаВФоне",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	ПоказатьДлительнуюОперациюАннулированиеЧека();
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ОжидатьАннулированиеЧекаВФоне(ДлительнаяОперация)
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание аннулирования чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжидатьАннулированиеЧекаВФонеЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьАннулированиеЧекаВФонеЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание аннулирования чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОбработатьРезультатАннулированияЧекаВФоне(ДлительнаяОперация.АдресРезультата);
		
		ЗапуститьОжиданиеРезультатаАннулированияЧека();
		
		ОповеститьОбИзмененияхЧека();
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ПоказатьОшибкуАннулированиеЧекаИВернутьсяКЧеку(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатАннулированияЧекаВФоне(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка аннулирования чека в фоне: пустой результат.'");
	КонецЕсли;
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Если ЗначениеЗаполнено(Результат.СведенияОЧеке) Тогда
		НастроитьФормуПоСостояниюЧека(Результат.СведенияОЧеке);
	КонецЕсли;
	
	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
	
	Если Результат.Ошибка Или Результат.СтатусЗапроса = СтатусыЗапросов.Ошибка Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьОшибкуАннулированиеЧекаИВернутьсяКЧеку(Результат.ТекстОшибки);
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Выполняется Тогда
		Если ЗначениеЗаполнено(Результат.ПараметрыОжиданияРезультата) Тогда
			ПараметрыОжиданияРезультата = Результат.ПараметрыОжиданияРезультата;
		КонецЕсли;
		ВремяОжиданияРезультата = Результат.ВремяОжидания;
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Выполнено Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьЧек();
	ИначеЕсли Результат.СтатусЗапроса = СтатусыЗапросов.Отменено Тогда
		ПараметрыОжиданияРезультата = Неопределено;
		ПоказатьОшибкуАннулированиеЧекаИВернутьсяКЧеку(НСтр("ru = 'Аннулирование чека отменено.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОжиданиеРезультатаАннулированияЧека()
	
	Если Не ЗначениеЗаполнено(ПараметрыОжиданияРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьОжиданиеРезультатаАннулированияЧека", ВремяОжиданияРезультата, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьОжиданиеРезультатаАннулированияЧека() Экспорт
	
	ДлительнаяОперация = ЗапуститьПроверкуРезультатаАннулированияЧекаВФоне();
	ОжидатьАннулированиеЧекаВФоне(ДлительнаяОперация);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьДлительнуюОперациюАннулированиеЧека()
	
	Элементы.ДокументыДлительнаяОперацияОписание.Заголовок = НСтр("ru = 'Чек аннулируется в сервисе Мой налог...'");
	НастроитьФормуДляЭтапа("ДлительнаяОперацияАннулированияЧека");
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкуАннулированиеЧекаИВернутьсяКЧеку(ДлительнаяОперация)
	
	ОписаниеОперации = НСтр("ru = 'При аннулировании чека возникла ошибка'");
	УстановитьТекстОшибки(ОписаниеОперации, ДлительнаяОперация);
	ПоказатьЧек();
	
КонецПроцедуры

#КонецОбласти

#Область Ошибки

&НаСервере
Процедура УстановитьТекстОшибки(ОписаниеОперации, Текст);
	
	ПолныйТекстОшибки = "";
	
	ЧастиТекстаОшибки = Новый Массив;
	ЧастиТекстаОшибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1: %2.'"), ОписаниеОперации, Текст));
	ЧастиТекстаОшибки.Добавить(Символы.ПС);
	ЧастиТекстаОшибки.Добавить(НСтр("ru = 'Детальную информацию об ошибке можно найти в'"));
	ЧастиТекстаОшибки.Добавить(" ");
	ЧастиТекстаОшибки.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'Журнале регистрации'"), , , ,"e1cib/app/Обработка.ЖурналРегистрации"));
		
	ТекстОшибки = Новый ФорматированнаяСтрока(ЧастиТекстаОшибки);
	
	Элементы.ДекорацияТекстОшибки.Заголовок = ТекстОшибки;
	
КонецПроцедуры

#КонецОбласти

#Область ОтправкаЧека

&НаСервере
Процедура ЗаполнитьСведенияДляОтправкиЧека(ПараметрыОтправкиЧека)
	
	Если Не ЗначениеЗаполнено(ПараметрыОтправкиЧека) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтправкиЧека.Свойство("НомерТелефона", НомерТелефона);
	ПараметрыОтправкиЧека.Свойство("АдресЭлектроннойПочты", АдресЭлектроннойПочты);
	
КонецПроцедуры

&НаКлиенте
Функция РеквизитыДляОтправкиЗаполнены()
	
	EmailЗаполнен = Не ОтправлятьEmail Или ЗначениеЗаполнено(АдресЭлектроннойПочты);
	Если Не EmailЗаполнен Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Email'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "АдресЭлектроннойПочты",);
	КонецЕсли;
	
	НомерТелефонаЗаполнен = Не ОтправлятьSMS Или ЗначениеЗаполнено(НомерТелефона);
	Если Не НомерТелефонаЗаполнен Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Номер телефона'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НомерТелефона", );
	КонецЕсли;
	
	Возврат EmailЗаполнен И НомерТелефонаЗаполнен;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьEmailНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		ОтправлятьEmail = Ложь;
		Возврат;
	КонецЕсли;
	
	НастроитьГруппуОтправки(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкаОтправкиSMSВыполнена()
	
	Возврат ОтправкаSMS.НастройкаОтправкиSMSВыполнена();
	
КонецФункции

&НаКлиенте
Процедура НастроитьОтправкуСМС()
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НастроитьОтправкуСМСЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиSMS", , ЭтотОбъект, , , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтправкуСМСЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НастройкаОтправкиSMSВыполнена() Тогда
		НастроитьГруппуОтправки(ЭтотОбъект);
	Иначе
		ОтправлятьSMS = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьОтправкуЧекаНаСервере()
	
	ПодготовитьПараметрыФормыКДлительнойОперации();
	
	ПараметрыОтправкиЧека = ЧекиНПДКлиентСервер.НовыйПараметрыОтправкиЧека();
	ЗаполнитьЗначенияСвойств(ПараметрыОтправкиЧека, ЭтотОбъект);
	ПараметрыОтправкиЧека.УникальныйИдентификатор = УникальныйИдентификатор;
	ПараметрыОтправкиЧека.Ссылка = ОснованиеЧека;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Отправка чека самозанятых в фоне.'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ЧекиНПД.ОтправитьЧекВФоне",
		ПараметрыОтправкиЧека,
		ПараметрыВыполнения);
	
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ПоказатьДлительнуюОперациюОтправкиЧека();
	КонецЕсли;
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервере
Процедура ПоказатьДлительнуюОперациюОтправкиЧека()
	
	Элементы.ДокументыДлительнаяОперацияОписание.Заголовок = НСтр("ru = 'Выполняется отправка чека...'");
	НастроитьФормуДляЭтапа("ДлительнаяОперацияОтправкиЧека");
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершенияОтправкиЧека(ДлительнаяОперация)
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание отправки чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжидатьЗавершенияОтправкиЧекаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершенияОтправкиЧекаЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьОшибкуОтправкиЧека(НСтр("ru = 'Фоновое задание отправки чека неожиданно завершилось'"));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ТекстОповещения = ОбработатьРезультатОтправки(ДлительнаяОперация.АдресРезультата);
		Если ЗначениеЗаполнено(ТекстОповещения) Тогда
			ПоказатьОповещениеПользователя(ТекстОповещения);
		КонецЕсли;
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ПоказатьОшибкуОтправкиЧека(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьРезультатОтправки(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка формирования чека в фоне: пустой результат.'");
	КонецЕсли;
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	ЧастиТекстаОшибки = Новый Массив;
	
	Если Результат.ОшибкаОтправкиEmail Тогда
		ЧастиТекстаОшибки.Добавить(Результат.ТекстОшибкиОтправкиEmail);
	КонецЕсли;
	
	Если Результат.ОшибкаОтправкиSMS Тогда
		ЧастиТекстаОшибки.Добавить(Результат.ТекстОшибкиОтправкиSMS);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЧастиТекстаОшибки) Тогда
		ПоказатьОшибкуОтправкиЧека(СтрСоединить(ЧастиТекстаОшибки, Символы.ПС));
	Иначе
		ОтобразитьЭтапПоСведениямОЧеке();
	КонецЕсли;
	
	Возврат ТекстОповещенияОбОтправке(Результат);
	
КонецФункции

&НаСервере
Функция ТекстОповещенияОбОтправке(Результат)
	
	ЧастиТекстаОповещения = Новый Массив;
	Если Результат.EmailОтправлен Тогда
		ЧастиТекстаОповещения.Добавить(НСтр("ru = 'email'"));
	КонецЕсли;
	Если Результат.SMSОтправлен Тогда
		ЧастиТекстаОповещения.Добавить(НСтр("ru = 'SMS'"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЧастиТекстаОповещения) Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Чек отправлен по %1'"),
			СтрСоединить(ЧастиТекстаОповещения, " " + НСтр("ru = 'и'") + " "));
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ПоказатьОшибкуОтправкиЧека(ТекстОшибки)
	
	ОписаниеОперации = НСтр("ru = 'При отправке чека возникла ошибка'");
	УстановитьТекстОшибки(ОписаниеОперации, ТекстОшибки);
	ОтобразитьЭтапПоСведениямОЧеке();
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьЧека

&НаСервереБезКонтекста
Функция МакетЧека(СведенияОЧеке)
	
	Возврат РегистрыСведений.ЧекиНПД.МакетЧекаДляПечати(СведенияОЧеке);
	
КонецФункции

#КонецОбласти

#КонецОбласти