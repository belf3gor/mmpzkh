
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	КлючСохраненияПоложенияОкна = Новый УникальныйИдентификатор;
	
	Если Параметры.Свойство("ОзнакомитьСПрекращениемПоддержкиПрямогоОбмена") Тогда
		СписокЭтапов.Добавить(ЭтапИнформацияОПрекращенииПрямогоОбмена());
	КонецЕсли;
	
	УчетныеЗаписиЭДО = Неопределено;
	Если Параметры.Свойство("УчетныеЗаписиЭДО", УчетныеЗаписиЭДО) Тогда
		СписокЭтапов.Добавить(ЭтапУсловияИспользования());
		СписокЭтапов.Добавить(ЭтапИнформацияДляКонтрагентов());
		ЗаполнитьИнформациюДляКонтрагентов(УчетныеЗаписиЭДО);
	КонецЕсли;
	
	Если СписокЭтапов.Количество() = 0 Тогда
		СписокЭтапов.Добавить(ЭтапУсловияИспользования());
		Элементы.ПринятыУсловияИспользования.Видимость = Ложь;
	КонецЕсли;
	
	Если СписокЭтапов.Количество() = 1 Тогда
		Элементы.КомандаГотово.Заголовок = НСтр("ru = 'Закрыть'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнициализироватьТекущийЭтап();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	КлючСохраненияПоложенияОкна = "";
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПринятыУсловияИспользованияПриИзменении(Элемент)
	
	Элементы.КомандаДалее.Доступность = ПринятыУсловияИспользования;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеУчетнойЗаписиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИдентификаторЭДО = ИнформацияДляКонтрагентов[0].ИдентификаторЭДО;
	ОткрытьФормуУчетнойЗаписиЭДО(ИдентификаторЭДО);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОбменЧерезОператораЭДООбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "ЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		СсылкаНаОписание1СЭДО = ОбменСКонтрагентамиСлужебныйКлиент.СсылкаНаОписание1СЭДО();
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаОписание1СЭДО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОбменЧерезБизнесСетьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "БизнесСеть" Тогда
		СтандартнаяОбработка = Ложь;
		СсылкаНаПромоСайтЭДО = БизнесСетьКлиентСервер.ГиперссылкаНаПромоСайтЭДО();
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаПромоСайтЭДО);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИнформацияДляКонтрагентов

&НаКлиенте
Процедура ИнформацияДляКонтрагентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ИнформацияДляКонтрагентовНаименованиеУчетнойЗаписи" Тогда
		ИдентификаторЭДО = ИнформацияДляКонтрагентов.НайтиПоИдентификатору(ВыбраннаяСтрока).ИдентификаторЭДО;
		ОткрытьФормуУчетнойЗаписиЭДО(ИдентификаторЭДО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияДляКонтрагентовПриАктивизацииСтроки(Элемент)
	
	Для каждого СтрокаИнформации Из ИнформацияДляКонтрагентов Цикл
		Если СтрокаИнформации.ЭтоАктивнаяСтрока Тогда
			СтрокаИнформации.ЭтоАктивнаяСтрока = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элемент.ТекущиеДанные.ЭтоАктивнаяСтрока = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	ПерейтиКСледующемуЭтапу();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ПерейтиКСледующемуЭтапу();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ИндексЭтапа = ИндексЭтапа - 1;
	ИнициализироватьТекущийЭтап();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИнформацияДляКонтрагентовНазначениеУчетнойЗаписи.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнформацияДляКонтрагентов.ЭтоАктивнаяСтрока");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнформацияДляКонтрагентов.НазначениеУчетнойЗаписи");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Например, ""Для документов от поставщиков""'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.МелкийШрифтТекста);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИнформацияДляКонтрагентовПодробноеОписаниеУчетнойЗаписи.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнформацияДляКонтрагентов.ЭтоАктивнаяСтрока");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИнформацияДляКонтрагентов.ПодробноеОписаниеУчетнойЗаписи");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Например, можно указать контакты ответственных сотрудников'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.МелкийШрифтТекста);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуУчетнойЗаписиЭДО(ИдентификаторЭДО);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ",
		Новый Структура("ИдентификаторЭДО", ИдентификаторЭДО));
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.Форма.УчетнаяЗапись", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьТекущийЭтап()
	
	ТекущийЭтап = СписокЭтапов[ИндексЭтапа].Значение;
	Если ТекущийЭтап = ЭтапУсловияИспользования() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУсловияИспользования;
		Если Элементы.ПринятыУсловияИспользования.Видимость Тогда
			Элементы.КомандаДалее.Доступность = ПринятыУсловияИспользования;
		КонецЕсли;
		Заголовок = НСтр("ru = 'Использование сервиса'");
		
	ИначеЕсли ТекущийЭтап = ЭтапИнформацияДляКонтрагентов() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаИнформацияДляКонтрагентов;
		Элементы.КомандаДалее.Доступность = Истина;
		Заголовок = НСтр("ru = 'Использование сервиса'");
		
	ИначеЕсли ТекущийЭтап = ЭтапИнформацияОПрекращенииПрямогоОбмена() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаИнформацияОПрекращенииПрямогоОбмена;
		Элементы.КомандаДалее.Доступность = Истина;
		Заголовок = НСтр("ru = 'Прекращение поддержки прямого обмена'");
		
	КонецЕсли;
	
	НастроитьКомандыПереходаПоЭтапам();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКомандыПереходаПоЭтапам()
	
	КоличествоЭтапов = СписокЭтапов.Количество();
	Если КоличествоЭтапов = 1 Тогда
		Элементы.КомандаНазад.Видимость = Ложь;
		Элементы.КомандаДалее.Видимость = Ложь;
		Элементы.КомандаГотово.Видимость = Истина;
		
		Элементы.КомандаГотово.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли ИндексЭтапа = 0 Тогда
		Элементы.КомандаНазад.Видимость = Ложь;
		Элементы.КомандаДалее.Видимость = Истина;
		Элементы.КомандаГотово.Видимость = Ложь;
		
		Элементы.КомандаДалее.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли ИндексЭтапа = КоличествоЭтапов - 1 Тогда
		Элементы.КомандаНазад.Видимость = Истина;
		Элементы.КомандаДалее.Видимость = Ложь;
		Элементы.КомандаГотово.Видимость = Истина;
		
		Элементы.КомандаГотово.КнопкаПоУмолчанию = Истина;
		
	Иначе
		Элементы.КомандаНазад.Видимость = Истина;
		Элементы.КомандаДалее.Видимость = Истина;
		Элементы.КомандаГотово.Видимость = Ложь;
		
		Элементы.КомандаДалее.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСледующемуЭтапу(ОбработкаЭтапа = Истина)
	
	Если ОбработкаЭтапа Тогда
		
		Отказ = Ложь;
		ВыполнитьТекущийЭтап(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ИндексЭтапа = ИндексЭтапа + 1;
	
	Если ИндексЭтапа = СписокЭтапов.Количество() Тогда
		ЗавершитьОбработку();
	Иначе
		ИнициализироватьТекущийЭтап();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьТекущийЭтап(Отказ)
	
	ТекущийЭтап = СписокЭтапов[ИндексЭтапа].Значение;
	Если ТекущийЭтап = ЭтапИнформацияДляКонтрагентов() Тогда
		ПроверитьИнформациюДляКонтрагентов(Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИнформациюДляКонтрагентов(Отказ)
	
	Для Каждого СтрокаИнформации Из ИнформацияДляКонтрагентов Цикл
		Если Не (ЗначениеЗаполнено(СтрокаИнформации.НазначениеУчетнойЗаписи)
			И ЗначениеЗаполнено(СтрокаИнформации.ПодробноеОписаниеУчетнойЗаписи)) Тогда
			Отказ = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ОбработкаОтвета = Новый ОписаниеОповещения("ПерейтиДалееПослеВопроса", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Не заполнена информация для контрагентов. Продолжить без заполнения?'");
	ПоказатьВопрос(ОбработкаОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиДалееПослеВопроса(Ответ, Контекст) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПерейтиКСледующемуЭтапу(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтапУсловияИспользования()
	Возврат "УсловияИспользования";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтапИнформацияДляКонтрагентов()
	Возврат "ИнформацияДляКонтрагентов";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтапИнформацияОПрекращенииПрямогоОбмена()
	Возврат "ИнформацияОПрекращенииПрямогоОбмена";
КонецФункции

&НаСервере
Процедура ЗаполнитьИнформациюДляКонтрагентов(ИдентификаторыЭДО)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО,
		|	УчетныеЗаписиЭДО.НаименованиеУчетнойЗаписи КАК НаименованиеУчетнойЗаписи,
		|	УчетныеЗаписиЭДО.НазначениеУчетнойЗаписи КАК НазначениеУчетнойЗаписи,
		|	УчетныеЗаписиЭДО.ПодробноеОписаниеУчетнойЗаписи КАК ПодробноеОписаниеУчетнойЗаписи
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО В (&ИдентификаторыЭДО)";
	Запрос.УстановитьПараметр("ИдентификаторыЭДО", ИдентификаторыЭДО);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ИнформацияДляКонтрагентов.Добавить(), Выборка);
	КонецЦикла;
	
	МассивСтрок = Новый Массив;
	Если ИнформацияДляКонтрагентов.Количество() = 1 Тогда
		Элементы.ПанельИнформацияДляКонтрагентов.ТекущаяСтраница = Элементы.СтраницаИнформацияДляКонтрагентовСтрока;
		Элементы.СтраницаИнформацияДляКонтрагентовТаблица.Видимость = Ложь;
		МассивСтрок.Добавить(НСтр("ru = 'Заполните сведения о своей учетной записи.'"));
	Иначе
		Элементы.ПанельИнформацияДляКонтрагентов.ТекущаяСтраница = Элементы.СтраницаИнформацияДляКонтрагентовТаблица;
		Элементы.СтраницаИнформацияДляКонтрагентовСтрока.Видимость = Ложь;
		МассивСтрок.Добавить(НСтр("ru = 'Заполните сведения о своей учетной записи.'"));
	КонецЕсли;
	
	МассивСтрок.Добавить(НСтр("ru = 'Это позволит контрагентам получать информацию о ваших требованиях к электронному документообороту в любой удобный момент.'"));
	
	Элементы.НадписьИнформацияДляКонтрагентов.Заголовок = СтрСоединить(МассивСтрок, " ");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбработку()
	
	ЗавершитьОбработкуНаСервере();
	
	Если СписокЭтапов.НайтиПоЗначению(ЭтапИнформацияДляКонтрагентов()) <> Неопределено Тогда
		Результат = ПринятыУсловияИспользования;
	Иначе
		Результат = Истина;
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьОбработкуНаСервере()
	
	Если СписокЭтапов.НайтиПоЗначению(ЭтапИнформацияДляКонтрагентов()) <> Неопределено Тогда
		ЗаписатьДанныеУчетныхЗаписейЭДО();
	КонецЕсли;
	
	Если СписокЭтапов.НайтиПоЗначению(ЭтапИнформацияОПрекращенииПрямогоОбмена()) <> Неопределено Тогда
		ОбменСКонтрагентамиСлужебный.ОзнакомленСПрекращениемПоддержкиПрямогоОбмена();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеУчетныхЗаписейЭДО()
	
	ПоляБлокировки = Новый Структура("ИдентификаторЭДО");
	
	Для Каждого СтрокаТаблицы Из ИнформацияДляКонтрагентов Цикл
		
		ПоляБлокировки.ИдентификаторЭДО = СтрокаТаблицы.ИдентификаторЭДО;
		
		НачатьТранзакцию();
		Попытка
			ЭлектронноеВзаимодействиеСлужебный.УстановитьУправляемуюБлокировку(
				"РегистрСведений.УчетныеЗаписиЭДО", ПоляБлокировки);
			
			Запись = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьМенеджерЗаписи();
			Запись.ИдентификаторЭДО = СтрокаТаблицы.ИдентификаторЭДО;
			Запись.Прочитать();
			Если Запись.Выбран() Тогда
				Запись.ПринятыУсловияИспользования = Истина;
				Запись.НазначениеУчетнойЗаписи = СтрокаТаблицы.НазначениеУчетнойЗаписи;
				Запись.ПодробноеОписаниеУчетнойЗаписи = СтрокаТаблицы.ПодробноеОписаниеУчетнойЗаписи;
				
				УстановитьПривилегированныйРежим(Истина);
				Запись.Записать();
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

