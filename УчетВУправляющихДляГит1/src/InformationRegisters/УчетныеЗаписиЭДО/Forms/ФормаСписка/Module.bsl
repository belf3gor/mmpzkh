
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Отбор") Тогда
		ПредопределенныйОтбор = Новый ФиксированнаяСтруктура(Параметры.Отбор);
		
		Если ПредопределенныйОтбор.Свойство("Организация") Тогда
			Заголовок = ОбменСКонтрагентамиВнутренний.ЗаголовокКонтекстнойФормы(
				Метаданные.РегистрыСведений.УчетныеЗаписиЭДО.Синоним, ПредопределенныйОтбор.Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Заголовок) Тогда
		АвтоЗаголовок = Истина;
	КонецЕсли;
	
	УстановитьУсловноеОформлениеСписка();
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата"             , ТекущаяДатаСеанса());
	Список.Параметры.УстановитьЗначениеПараметра("ВсеСертификатыПросрочены", НСтр("ru = 'Все сертификаты просрочены'"));
	Список.Параметры.УстановитьЗначениеПараметра("СертификатыЗаканчиваются", НСтр("ru = 'Заканчивается срок действия сертификатов'"));
	Список.Параметры.УстановитьЗначениеПараметра("Неизвестный", НСтр("ru = 'Неизвестный'"));
	
	Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.УчетныеЗаписиЭДО) Тогда
		Элементы.СписокСоздать.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СозданПрофиль1СЭДО"
		Или ИмяСобытия = "ОбновленСписокУчетныхЗаписей1СЭДО" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	СпособыОЭД = Новый Массив;
	СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
	Если ПредопределенныйОтбор <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ПредопределенныйОтбор Цикл
			ПараметрыФормы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.Форма.ПомощникПодключенияЭДО", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	Список.УсловноеОформление.Элементы.Очистить();
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Предупреждения.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предупреждения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Предупреждения.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предупреждения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Отсутствуют>'"));
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
КонецПроцедуры


#КонецОбласти