#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СтарыйНабор = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьНаборЗаписей();
	Для каждого ЭлементОтбора Из Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			СтарыйНабор.Отбор[ЭлементОтбора.Имя].Установить(ЭлементОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	СтарыйНабор.Прочитать();
	
	Организации = Новый Массив;
	Для каждого СтрокаНабора Из СтарыйНабор Цикл
		Организации.Добавить(СтрокаНабора.Организация);
	КонецЦикла;
	
	Для каждого СтрокаНабора Из ЭтотОбъект Цикл
		Организации.Добавить(СтрокаНабора.Организация);
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ОрганизацииВНаборе", Организации);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат; 
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетныеЗаписиЭДО.Организация КАК Организация,
	|	ИСТИНА КАК Состояние
	|ИЗ
	|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
	|ГДЕ
	|	УчетныеЗаписиЭДО.Организация В(&Организации)";
	
	Запрос.УстановитьПараметр("Организации", ДополнительныеСвойства.ОрганизацииВНаборе);
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		
		ТаблицаОрганизаций = Запрос.Выполнить().Выгрузить();
		
		Для каждого СтрокаТЗ Из ТаблицаОрганизаций Цикл
			НаборЗаписей = РегистрыСведений.СостояниеОрганизацийБЭД.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(СтрокаТЗ.Организация);
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаТЗ);
			НаборЗаписей.Записать();
		КонецЦикла;
		
	Исключение
		
		Информация = ИнформацияОбОшибке();
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Обновление регистра ""Состояние организаций БЭД""'"),
			ПодробноеПредставлениеОшибки(Информация),
			НСтр("ru = 'Не удалось обновить данные об организация подключенных к ЭДО'"));
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
