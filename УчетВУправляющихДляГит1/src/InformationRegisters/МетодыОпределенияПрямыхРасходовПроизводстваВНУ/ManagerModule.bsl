#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ЗапрещенныеВидыРасходовНУ() Экспорт
	
	// Прямыми не могут быть нормируемые расходы и не учитываем в целях налогообложения
	ЗапрещенныеВидыРасходовНУ = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.АмортизационнаяПремия);
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ЕСН);
	
	Возврат ЗапрещенныеВидыРасходовНУ;
	
КонецФункции

Функция ДопустимыеВидыРасходовНУ() Экспорт
	
	// Все, что не запрещено - допустимо
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Запрещенные", ЗапрещенныеВидыРасходовНУ());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыРасходовНУ.Ссылка КАК Ссылка,
	|	ВидыРасходовНУ.Порядок КАК Порядок
	|ИЗ
	|	Перечисление.ВидыРасходовНУ КАК ВидыРасходовНУ
	|ГДЕ
	|	НЕ ВидыРасходовНУ.Ссылка В (&Запрещенные)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура УдалитьЗаписиНеСНачалаГода() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
	|	НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД) КАК ПравильныйПериодДействия,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация КАК Организация,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ КАК ВидРасходовНУ,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение КАК Подразделение,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет КАК Счет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет КАК КорСчет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ НеправильныеЗаписи
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|ГДЕ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия <> НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравильныйПериодДействия,
	|	Организация,
	|	ВидРасходовНУ,
	|	Подразделение,
	|	Счет,
	|	КорСчет,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеправильныеЗаписи.ПериодДействия КАК ПериодДействия,
	|	НеправильныеЗаписи.Организация,
	|	НеправильныеЗаписи.ВидРасходовНУ,
	|	НеправильныеЗаписи.Подразделение,
	|	НеправильныеЗаписи.Счет,
	|	НеправильныеЗаписи.КорСчет,
	|	НеправильныеЗаписи.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Лишняя,
	|	НеправильныеЗаписи.ПравильныйПериодДействия
	|ИЗ
	|	НеправильныеЗаписи КАК НеправильныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|		ПО НеправильныеЗаписи.ПравильныйПериодДействия = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия
	|			И НеправильныеЗаписи.Организация = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация
	|			И НеправильныеЗаписи.ВидРасходовНУ = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ
	|			И НеправильныеЗаписи.Подразделение = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение
	|			И НеправильныеЗаписи.Счет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет
	|			И НеправильныеЗаписи.КорСчет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет
	|			И НеправильныеЗаписи.СтатьяЗатрат = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Лишняя УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Записей не будет много, поэтому записываем маленькими наборами
		
		МенеджерЗаписи = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		НачатьТранзакцию();
		МенеджерЗаписи.Удалить();
		Если Не Выборка.Лишняя Тогда
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.ПериодДействия = Выборка.ПравильныйПериодДействия;
			МенеджерЗаписи.Записать();
		КонецЕсли;
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//   ЗаполнятьДаннымиЗаПредыдущийГод - 
//    Булево - 
//       Истина - заполнять данными за предыдущий год, вне зависимости от того, есть они или нет
//       Ложь   - заполнять в соответствии с требованиями ст. 319
//    Неопределено - заполнять данными за предыдущий год, если они есть, или требованиями ст. 319, если данных за предыдущий год нет
Процедура Настроить(Организация, Знач Период, ЗаполнятьДаннымиЗаПредыдущийГод = Неопределено, Перезаписывать = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьДаннымиЗаПредыдущийГод = Истина Тогда
		МетодЗаполнения = "ПредыдущийПериод";
	ИначеЕсли ЗаполнятьДаннымиЗаПредыдущийГод = Ложь Тогда
		МетодЗаполнения = "ПоУмолчанию";
	Иначе
		МетодЗаполнения = Неопределено;
	КонецЕсли;
	
	// В регистре допускаются записи только на начало года.
	// При этом допускаются записи на такое начало года, которое не является началом налогового периода - 
	// см. ПериодДействующейНастройки()	
	Период = НачалоГода(Период);
	НаборЗаписей = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ПериодДействия.Установить(Период);
	
	Если Не Перезаписывать Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписей.Заполнить(МетодЗаполнения);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Определяет период, в который введена актуальная (действующая в заданном периоде) настройка списка прямых расходов.
// Это значение, хранящееся в измерении ПериодДействия регистра.
// Позволяет выбрать из регистра записи, относящиеся к заданному периоду (действующие в течение этого периода).
//
// Параметры:
//  Период		 - Дата - период, настройку, относящуюся к которому нужно найти
//  Организация	 - СправочникСсылка.Организации - организация, настройку которой нужно найти
// 
// Возвращаемое значение:
//  Дата         - дата, хранящаяся в измерении ПериодДействия регистра
//  Неопределено - нет ни одной подходящей записи в регистре
//
Функция ПериодДействующейНастройки(Период, Организация) Экспорт
	
	// Обычно это тот же период, в котором введены остальные сведения о налоге на прибыль.
	// Но может быть исключение: настройка налога на прибыль в целом действует с предыдущих лет,
	// а в список прямых расходов в текущем году внесены изменения.
	// Такое исключение могло быть задано в предыдущих версиях программы.
	
	Если Не ЗначениеЗаполнено(Период) Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Если первый налоговый период организации включает часть года регистрации организации и следующий за ней год,
	// используется настройка, относящаяся к отчетному году (следующему за годом регистрации).
	ОписаниеОтчетногоГода = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(
		Организация,
		Период,
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре,
		Перечисления.Периодичность.Год);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период",      ОписаниеОтчетногоГода.Период);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(НастройкиУчетаНалогаНаПрибыль.Период, ГОД) КАК Год
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаНалогаНаПрибыль";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ГодДействующейОбщейНастройки", Выборка.Год);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СписокПрямыхРасходов.ПериодДействия) КАК ПериодДействия
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК СписокПрямыхРасходов
	|ГДЕ
	|	СписокПрямыхРасходов.Организация = &Организация
	|	И СписокПрямыхРасходов.ПериодДействия <= &Период
	|	И СписокПрямыхРасходов.ПериодДействия >= &ГодДействующейОбщейНастройки
	|	И СписокПрямыхРасходов.ПериодДействия = НАЧАЛОПЕРИОДА(СписокПрямыхРасходов.ПериодДействия, ГОД)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено;
	ИначеЕсли Не ЗначениеЗаполнено(Выборка.ПериодДействия) Тогда
		Возврат Неопределено;
	Иначе
		Возврат Выборка.ПериодДействия;
	КонецЕсли;
	
КонецФункции

// Обновление ИБ

Функция СчетаВзносовС2014Года() Экспорт
	
	СчетаВзносовС2014Года = Новый Массив;
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
	
	Возврат СчетаВзносовС2014Года;
	
КонецФункции

Функция ОбновитьМетодыОпределенияПрямыхРасходовПроизводстваВНУ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
		|ГДЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение <> &Подразделение";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Удалить();
		
	КонецЦикла;
	
КонецФункции

#КонецЕсли