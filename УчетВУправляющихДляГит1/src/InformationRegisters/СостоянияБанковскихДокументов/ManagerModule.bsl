#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура УстановитьСостояниеДокумента(Документ, СостояниеДокумента) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежноеПоручение")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежноеТребование") Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Организация, Проведен");
		Ссылка			 = Документ;
		Организация		 = РеквизитыДокумента.Организация;
		ДокументПроведен = РеквизитыДокумента.Проведен;
		
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументОбъект.ПлатежноеПоручение")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументОбъект.ПлатежноеТребование") Тогда
		
		Ссылка			 = Документ.Ссылка;
		ДокументПроведен = Документ.Проведен;
		Организация		 = Документ.Организация;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Если ТипЗнч(СостояниеДокумента) = Тип("Строка") Тогда
		
		Если СостояниеДокумента = "Подготовлено" Тогда
			
			СостояниеДокумента = Перечисления.СостоянияБанковскихДокументов.Подготовлено;
			
		ИначеЕсли СостояниеДокумента = "НаПодписи" Тогда
			
			СостояниеДокумента = Перечисления.СостоянияБанковскихДокументов.НаПодписи;
			
		ИначеЕсли СостояниеДокумента = "Отклонено" Тогда
			
			СостояниеДокумента = Перечисления.СостоянияБанковскихДокументов.Отклонено;
			
		ИначеЕсли СостояниеДокумента = "Отправлено" Тогда
			
			СостояниеДокумента = Перечисления.СостоянияБанковскихДокументов.Отправлено;
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаНаОбъект", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияБанковскихДокументов.Организация,
	|	СостоянияБанковскихДокументов.СсылкаНаОбъект,
	|	СостоянияБанковскихДокументов.Состояние
	|ПОМЕСТИТЬ ВТСостоянияБанковскихДокументов
	|ИЗ
	|	РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|ГДЕ
	|	СостоянияБанковскихДокументов.СсылкаНаОбъект = &СсылкаНаОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостоянияБанковскихДокументов.Организация,
	|	ВТСостоянияБанковскихДокументов.СсылкаНаОбъект
	|ИЗ
	|	ВТСостоянияБанковскихДокументов КАК ВТСостоянияБанковскихДокументов
	|ГДЕ
	|	ВТСостоянияБанковскихДокументов.Организация <> &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостоянияБанковскихДокументов.Организация,
	|	ВТСостоянияБанковскихДокументов.СсылкаНаОбъект,
	|	ВТСостоянияБанковскихДокументов.Состояние
	|ИЗ
	|	ВТСостоянияБанковскихДокументов КАК ВТСостоянияБанковскихДокументов
	|ГДЕ
	|	ВТСостоянияБанковскихДокументов.Организация = &Организация";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Удаляем запись регистра, если в уже проведенном документе изменили организацию.
	Если Не Результат[1].Пустой() Тогда
		
		Выборка = Результат[1].Выбрать();
		Выборка.Следующий();
		
		ЗаписьРегистра = СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Организация		 = Выборка.Организация;
		ЗаписьРегистра.СсылкаНаОбъект	 = Выборка.СсылкаНаОбъект;
		ЗаписьРегистра.Удалить();
		
	КонецЕсли;
	
	Если Не Результат[2].Пустой() Тогда // уже есть записи в регистре сведений
		
		Выборка = Результат[2].Выбрать();
		Выборка.Следующий();
		Если Выборка.Состояние <> СостояниеДокумента И СостояниеДокумента <> Неопределено Тогда // если состояние не изменилось, регистр не перезаписываем
			
			ЗаписатьСостояние(Ссылка, Организация, СостояниеДокумента);
			
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(СостояниеДокумента) Тогда // еще нет записей в регистре, записываем, если состояние указано
		
		ЗаписатьСостояние(Ссылка, Организация, СостояниеДокумента);
		
	ИначеЕсли ДокументПроведен Тогда // если документ проведен, устанавливаем состояние "Подготовлено"
		
		ЗаписатьСостояние(Ссылка, Организация, Перечисления.СостоянияБанковскихДокументов.Подготовлено);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекущееСостояниеДокумента(ДокументСсылка) Экспорт
	
	Если ДокументСсылка.Пустая() Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат = Неопределено;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияБанковскихДокументов.Состояние
	|ИЗ
	|	РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|ГДЕ
	|	СостоянияБанковскихДокументов.СсылкаНаОбъект = &СсылкаНаОбъект";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка.Состояние;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

Процедура ЗаполнитьСостоянияБанковскихДокументов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлатежноеПоручение.Ссылка,
	|	ПлатежноеПоручение.Проведен,
	|	ПлатежноеПоручение.Организация,
	|	ПлатежноеПоручение.ДокументОснование,
	|	ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, НЕОПРЕДЕЛЕНО) КАК Состояние
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|		ПО ПлатежноеПоручение.Ссылка = СостоянияБанковскихДокументов.СсылкаНаОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлатежноеТребование.Ссылка,
	|	ПлатежноеТребование.Проведен,
	|	ПлатежноеТребование.Организация,
	|	ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, НЕОПРЕДЕЛЕНО) КАК Состояние
	|ИЗ
	|	Документ.ПлатежноеТребование КАК ПлатежноеТребование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|		ПО ПлатежноеТребование.Ссылка = СостоянияБанковскихДокументов.СсылкаНаОбъект";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Установка состояний платежных поручений
	Выборка = РезультатЗапроса[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Состояние) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СписаниеСРасчетногоСчета = Документы.ПлатежноеПоручение.НайтиДокументСписания(
			Выборка.Ссылка, Выборка.ДокументОснование);
			
		Если ЗначениеЗаполнено(СписаниеСРасчетногоСчета)
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СписаниеСРасчетногоСчета, "Проведен") Тогда
			
			УстановитьСостояниеДокумента(Выборка.Ссылка, Перечисления.СостоянияБанковскихДокументов.Оплачено);
			
		ИначеЕсли Выборка.Проведен Тогда
			
			УстановитьСостояниеДокумента(Выборка.Ссылка, Перечисления.СостоянияБанковскихДокументов.Подготовлено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗапросПоступленияНаСчет = Новый Запрос;
	ЗапросПоступленияНаСчет.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПоступлениеНаРасчетныйСчет.Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|ГДЕ
	|	ПоступлениеНаРасчетныйСчет.ДокументОснование = &ДокументОснование
	|	И ПоступлениеНаРасчетныйСчет.Проведен";
	
	Выборка = РезультатЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Состояние) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ЗапросПоступленияНаСчет.УстановитьПараметр("ДокументОснование", Выборка.Ссылка);
		ВыборкаПоступления = ЗапросПоступленияНаСчет.Выполнить().Выбрать();
		
		Если ВыборкаПоступления.Следующий() Тогда
			
			УстановитьСостояниеДокумента(Выборка.Ссылка, Перечисления.СостоянияБанковскихДокументов.Оплачено);
			
		ИначеЕсли Выборка.Проведен Тогда
			
			УстановитьСостояниеДокумента(Выборка.Ссылка, Перечисления.СостоянияБанковскихДокументов.Подготовлено);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйИнтерфейс

Процедура ЗаписатьСостояние(СсылкаНаОбъект, Организация, СостояниеДокумента)
	
	ЗаписьРегистра = СоздатьМенеджерЗаписи();
	ЗаписьРегистра.СсылкаНаОбъект = СсылкаНаОбъект;
	ЗаписьРегистра.Организация    = Организация;
	ЗаписьРегистра.Состояние      = СостояниеДокумента;
	ЗаписьРегистра.Записать();
	
	ВыполнениеЗадачБухгалтера.ЗарегистрироватьИзменениеСтатусаЗадачиПодготовкиПлатежа(СсылкаНаОбъект);
	
	Если СостояниеДокумента = Перечисления.СостоянияБанковскихДокументов.Оплачено Тогда
		РегистрыСведений.ДокументыИнтеграцииСБанком.УстановитьСостояниеОбменЗавершен(СсылкаНаОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли