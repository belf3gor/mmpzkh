
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка корректности периода лицензии.
	Для каждого Лицензия Из ЭтотОбъект Цикл
		Если ЗначениеЗаполнено(Лицензия.ДатаОкончания)
		   И Лицензия.ДатаОкончания < Лицензия.Период Тогда
			ТекстСообщения = НСтр("ru = 'Конец срока действия лицензии должен быть не ранее начала срока действия.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДатаОкончания", , Отказ);
		КонецЕсли;
	КонецЦикла;
	
	// Проверка корректности типа лицензии.
	Если Не Отказ
	   И ЭтотОбъект.Количество() = 1
	   И Отбор.КодВидаПродукции.Использование
	   И Не ДополнительныеСвойства.Свойство("ОтключитьПроверкуВидаДеятельности") Тогда

		ТекущаяЛицензия = ЭтотОбъект[0];
		ДатаОкончания = ?(ЗначениеЗаполнено(ТекущаяЛицензия.ДатаОкончания), ТекущаяЛицензия.ДатаОкончания, '39991231');
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПоставщикБыл",        Отбор.Поставщик.Значение);
		Запрос.УстановитьПараметр("ВидЛицензииБыл",      Отбор.ВидЛицензии.Значение);
		Запрос.УстановитьПараметр("КодВидаПродукцииБыл", Отбор.КодВидаПродукции.Значение);
		Запрос.УстановитьПараметр("ПериодБыл",           Отбор.Период.Значение);
		Запрос.УстановитьПараметр("Поставщик",           ТекущаяЛицензия.Поставщик);
		Запрос.УстановитьПараметр("ВидЛицензии",         ТекущаяЛицензия.ВидЛицензии);
		Запрос.УстановитьПараметр("Период",              ТекущаяЛицензия.Период);
		Запрос.УстановитьПараметр("ДатаОкончания",       ДатаОкончания);

		// Анализируем существующие движения на совместимость с проверяемой записью, отфильтровав перезаписываемое движение.
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЛицензииПоставщиковАлкогольнойПродукции.Период КАК Период,
		|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	РегистрСведений.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
		|ГДЕ
		|	ЛицензииПоставщиковАлкогольнойПродукции.Поставщик = &Поставщик
		|	И ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии = &ВидЛицензии
		|	И ЛицензииПоставщиковАлкогольнойПродукции.КодВидаПродукции = """"
		|	И ЛицензииПоставщиковАлкогольнойПродукции.Период <= &ДатаОкончания
		|	И (ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания >= &Период
		|			ИЛИ ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|	И НЕ(ЛицензииПоставщиковАлкогольнойПродукции.Поставщик = &ПоставщикБыл
		|				И ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии = &ВидЛицензииБыл
		|				И ЛицензииПоставщиковАлкогольнойПродукции.КодВидаПродукции = &КодВидаПродукцииБыл
		|				И ЛицензииПоставщиковАлкогольнойПродукции.Период = &ПериодБыл)";
		Если ПустаяСтрока(ТекущаяЛицензия.КодВидаПродукции) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КодВидаПродукции = """"", "КодВидаПродукции <> """"");
		КонецЕсли;
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			КонфликтующийПериод = Результат.Выгрузить().Получить(0);
			ТекстСообщения = НСтр("ru = 'Для ""%1"" ранее введена лицензия по виду деятельности ""%2"" %3.
										|Одновременное использование лицензий с разными видами деятельности не поддерживается.'");
			
			Если ПустаяСтрока(ТекущаяЛицензия.КодВидаПродукции) Тогда
				ВидДеятельностиБыл = НСтр("ru = 'Производство и поставка'");
			Иначе
				ВидДеятельностиБыл = НСтр("ru = 'Закупка и поставка'");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КонфликтующийПериод.ДатаОкончания) Тогда
				
				ПериодОкончанияЛицензии = Неопределено;
				Если НачалоГода(КонфликтующийПериод.Период) = КонфликтующийПериод.Период
				   И КонецГода(КонфликтующийПериод.ДатаОкончания) = КонецДня(КонфликтующийПериод.ДатаОкончания) Тогда // полные годы
					Если НачалоГода(КонфликтующийПериод.Период) = НачалоГода(КонфликтующийПериод.ДатаОкончания) Тогда
						ТекстПериода = НСтр("ru = 'на %1 год'");
						ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ=гггг");
					Иначе
						ТекстПериода = НСтр("ru = 'с %1 по %2 год'");
						ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ=гггг");
						ПериодОкончанияЛицензии = Формат(КонфликтующийПериод.ДатаОкончания, "ДФ=гггг");
					КонецЕсли;
				ИначеЕсли НачалоМесяца(КонфликтующийПериод.Период) = КонфликтующийПериод.Период
				   И КонецМесяца(КонфликтующийПериод.ДатаОкончания) = КонецДня(КонфликтующийПериод.ДатаОкончания) Тогда // полные месяцы
					Если НачалоМесяца(КонфликтующийПериод.Период) = НачалоМесяца(КонфликтующийПериод.ДатаОкончания) Тогда
						ТекстПериода = НСтр("ru = 'на %1'");
						ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ='ММММ гггг'");
					Иначе
						ТекстПериода = НСтр("ru = 'с %1 по %2'");
						ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ='ММММ гггг'");
						ПериодОкончанияЛицензии = Формат(КонфликтующийПериод.ДатаОкончания, "ДФ='ММММ гггг'");
					КонецЕсли;
				Иначе
					ТекстПериода = НСтр("ru = 'с %1 по %2'");
					ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДЛФ=DD");
					ПериодОкончанияЛицензии = Формат(КонфликтующийПериод.ДатаОкончания, "ДЛФ=DD");
				КонецЕсли;
				ТекстПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПериода, ПериодЛицензии, ПериодОкончанияЛицензии);
				
			Иначе
				
				Если НачалоГода(КонфликтующийПериод.Период) = КонфликтующийПериод.Период Тогда
					ТекстПериода = НСтр("ru = 'с %1 года'");
					ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ=гггг");
				ИначеЕсли НачалоМесяца(КонфликтующийПериод.Период) = КонфликтующийПериод.Период Тогда
					ТекстПериода = НСтр("ru = 'с %1'");
					ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДФ='ММММ гггг'");
				Иначе
					ТекстПериода = НСтр("ru = 'с %1'");
					ПериодЛицензии = Формат(КонфликтующийПериод.Период, "ДЛФ=DD");
				КонецЕсли;
				ТекстПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПериода, ПериодЛицензии);
				ТекстПериода = ТекстПериода + НСтр("ru = ' бессрочно'");
				
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				Строка(ТекущаяЛицензия.Поставщик),
				ВидДеятельностиБыл, 
				ТекстПериода);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВидДеятельности", , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
