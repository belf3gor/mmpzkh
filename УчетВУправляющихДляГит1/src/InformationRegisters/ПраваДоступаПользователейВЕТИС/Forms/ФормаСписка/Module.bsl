
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОсновныеПраваДоступа = Истина;
	
	Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
		Элементы.СписокУдалитьПользователяХСРежимОтладки.Видимость = Истина;
		Элементы.СписокКонтекстноеМенюУдалитьПользователяХСРежимОтладки.Видимость = Истина;
	КонецЕсли;
	
	РегистрыСведений.ПраваДоступаПользователейВЕТИС.НастроитьСписокПравДоступа(ЭтотОбъект, "Список");
	ИнтеграцияВЕТИС.УстановитьВидимостьКомандыВыполнитьОбмен(ЭтотОбъект, "СоздатьПользователя");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение_ПраваДоступаПользователейВЕТИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПользователя(Команда)
	
	ОткрытьФормуНазначенияПрав(Неопределено, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПользователя(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Спозиционируйтесь на пользователе, права которого необходимо скопировать'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуНазначенияПрав(ТекущиеДанные, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПраваДоступа(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Спозиционируйтесь на пользователе, права которого необходимо изменить'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуНазначенияПрав(ТекущиеДанные, Ложь, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПользователя(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Спозиционируйтесь на пользователе, с которым необходимо разорвать связь'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФормы = "РегистрСведений.ПраваДоступаПользователейВЕТИС.Форма.ФормаУдалениеСвязи";
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ХозяйствующийСубъект", ТекущиеДанные.ХозяйствующийСубъект);
	ПараметрыФормы.Вставить("ПользовательВЕТИС",    ТекущиеДанные.ПользовательВЕТИС);
	
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПользователяХозяйствующегоСубъектаВРежимеОтладки(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ХозяйствующийСубъект = ТекущиеДанные.ХозяйствующийСубъект;
	ПользовательВЕТИС    = ТекущиеДанные.ПользовательВЕТИС;
	
	УдалитьПользователяХозяйствующегоСубъектаНаСервере(ХозяйствующийСубъект, ПользовательВЕТИС);
	
	Оповестить("Изменение_ПраваДоступаПользователейВЕТИС",     ХозяйствующийСубъект, ЭтотОбъект);
	Оповестить("Изменение_АдресаЗонОтветственностиВЕТИС",      ХозяйствующийСубъект, ЭтотОбъект);
	Оповестить("Изменение_ПредприятияЗонОтветственностиВЕТИС", ХозяйствующийСубъект, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ТолькоОсновныеПраваПриИзмененииНаСервере()
	
	НастройкиПредставленияПрав = Перечисления.ПраваДоступаВЕТИС.НастройкиПредставленияПравДоступаВЕТИС();
	
	Для Каждого НастройкаПредставления Из НастройкиПредставленияПрав Цикл
		ПолеСписка = Элементы[НастройкаПредставления.ПравоДоступа];
		Если НЕ ОсновныеПраваДоступа Тогда
			ПолеСписка.Видимость = Истина;
		Иначе
			ПолеСписка.Видимость = НастройкаПредставления.Значимое;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОсновныеПраваПриИзменении(Элемент)
	ТолькоОсновныеПраваПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ДанныеХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта(ТекущиеДанные.ХозяйствующийСубъект);
		
		Если Поле = Элементы.Пользователь И НЕ ЗначениеЗаполнено(ТекущиеДанные.Пользователь) Тогда
			ОткрытьФормуПользователяВЕТИС(ТекущиеДанные);
		ИначеЕсли ДанныеХозяйствующегоСубъекта.СоответствуетОрганизации Тогда
			Если ДанныеХозяйствующегоСубъекта.ЭтоАдминистраторХозяйствующегоСубъекта Тогда
				ОткрытьФормуНазначенияПрав(ТекущиеДанные, Ложь, Ложь);
			Иначе
				ОткрытьФормуПользователяВЕТИС(ТекущиеДанные);
			КонецЕсли;
		Иначе
			ОткрытьФормуНазначенияПрав(ТекущиеДанные, Ложь, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ДанныеХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта(ТекущиеДанные.ХозяйствующийСубъект);
		
		Если ДанныеХозяйствующегоСубъекта.СоответствуетОрганизации Тогда
			ЭтоАдминистраторХозяйствующегоСубъекта = ДанныеХозяйствующегоСубъекта.ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СкопироватьПользователя.Доступность                      = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокСкопироватьПользователя.Доступность                = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокИзменитьПраваДоступа.Доступность                   = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокУдалитьПользователя.Доступность                    = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокКонтекстноеМенюСкопироватьПользователя.Доступность = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокКонтекстноеМенюИзменитьПраваДоступа.Доступность    = ЭтоАдминистраторХозяйствующегоСубъекта;
			Элементы.СписокКонтекстноеМенюУдалитьПользователя.Доступность     = ЭтоАдминистраторХозяйствующегоСубъекта;
		Иначе
			Элементы.СкопироватьПользователя.Доступность                      = Истина;
			Элементы.СписокСкопироватьПользователя.Доступность                = Истина;
			Элементы.СписокИзменитьПраваДоступа.Доступность                   = Истина;
			Элементы.СписокУдалитьПользователя.Доступность                    = Истина;
			Элементы.СписокКонтекстноеМенюСкопироватьПользователя.Доступность = Истина;
			Элементы.СписокКонтекстноеМенюИзменитьПраваДоступа.Доступность    = Истина;
			Элементы.СписокКонтекстноеМенюУдалитьПользователя.Доступность     = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Пользователь.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Пользователь");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<не сопоставлено>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаГосИС);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеХозяйствующегоСубъекта(ХозяйствующийСубъект)
	
	ДанныеСубъекта = Новый Структура();
	ДанныеСубъекта.Вставить("СоответствуетОрганизации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ХозяйствующийСубъект, "СоответствуетОрганизации"));
	ДанныеСубъекта.Вставить("ЭтоАдминистраторХозяйствующегоСубъекта", ПользователиВЕТИС.ЭтоАдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект));
	
	Возврат ДанныеСубъекта;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуПользователяВЕТИС(ТекущиеДанные)
	
	ПолноеИмяФормы = "Справочник.ПользователиВЕТИС.ФормаОбъекта";
	ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.ПользовательВЕТИС);
	РежимОткрытия  = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ПриСопоставленииПользователя", ЭтотОбъект);
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗакрытии, РежимОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриСопоставленииПользователя(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНазначенияПрав(ТекущиеДанные, Создание, Копирование)
	
	ПолноеИмяФормы = "РегистрСведений.ПраваДоступаПользователейВЕТИС.Форма.ФормаНазначениеПрав";
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СозданиеНового", Создание);
	
	Если Создание Тогда
		Если Копирование И ТекущиеДанные <> Неопределено Тогда
			ПараметрыФормы.Вставить("ХозяйствующийСубъект", ТекущиеДанные.ХозяйствующийСубъект);
			ПараметрыФормы.Вставить("ЗначениеКопирования",  ТекущиеДанные.ПользовательВЕТИС);
		КонецЕсли;
	ИначеЕсли ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ХозяйствующийСубъект", ТекущиеДанные.ХозяйствующийСубъект);
		ПараметрыФормы.Вставить("ПользовательВЕТИС",    ТекущиеДанные.ПользовательВЕТИС);
	КонецЕсли;
	
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПользователяХозяйствующегоСубъектаНаСервере(ХозяйствующийСубъект, ПользовательВЕТИС)
	
	ПользователиВЕТИС.УдалитьСвязьПользователяСХозяйствующимСубъектом(ХозяйствующийСубъект, ПользовательВЕТИС);
	
КонецПроцедуры

#КонецОбласти
