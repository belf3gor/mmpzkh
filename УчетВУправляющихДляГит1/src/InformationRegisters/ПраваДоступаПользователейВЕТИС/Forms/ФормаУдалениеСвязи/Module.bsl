
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьИменаСтраниц();
	
	ХозяйствующийСубъект = Параметры.ХозяйствующийСубъект;
	ПользовательВЕТИС    = Параметры.ПользовательВЕТИС;
	
	УстановитьПризнакСобственнойОрганизации();
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[0]];
	
	УстановитьТекущуюСтраницуНавигации(ЭтотОбъект);
	
	ЦветГиперссылки = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветПроблема    = ЦветаСтиля.ЦветТекстаПроблемаГосИС;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДалее(Команда)
	
	Если НЕ ПроверитьЗаполнениеТекущейСтраницы() Тогда
		Возврат;
	КонецЕсли;
	
	СтраницыФормы  = Элементы.ГруппаСтраницы;
	ИндексСтраницы = ИменаСтраниц.Найти(СтраницыФормы.ТекущаяСтраница.Имя);
	
	Если ИменаСтраниц[ИндексСтраницы + 1] = "СтраницаЗапросОшибка" И ПустаяСтрока(ТекстОшибка) Тогда
		СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[ИндексСтраницы + 2]];
	Иначе
		СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[ИндексСтраницы + 1]];
	КонецЕсли;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	
	СтраницыФормы  = Элементы.ГруппаСтраницы;
	ИндексСтраницы = ИменаСтраниц.Найти(СтраницыФормы.ТекущаяСтраница.Имя);
	
	Если ИменаСтраниц[ИндексСтраницы - 1] = "СтраницаЗапросОшибка" И ПустаяСтрока(ТекстОшибка) Тогда
		СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[ИндексСтраницы - 2]];
	Иначе
		СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[ИндексСтраницы - 1]];
	КонецЕсли;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВНачало(Команда)
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы[ИменаСтраниц[0]];
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьИсходящееСообщение") Тогда
		ПоказатьЗначение(, ИсходящееСообщение);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьВходящееСообщение") Тогда
		ПоказатьЗначение(, ВходящееСообщение);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьПользователяВЕТИС") Тогда
		ПоказатьЗначение(, ПользовательВЕТИС);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьХозяйствующийСубъект") Тогда
		ПоказатьЗначение(, ХозяйствующийСубъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьТекущуюСтраницуНавигации(ЭтотОбъект);
	
	Если ТекущаяСтраница = Элемент.ПодчиненныеЭлементы.СтраницаЗапросОжидание Тогда
		Если ЭтоСобственнаяОрганизация Тогда
			ВыполнениеЗаявкиВЕТИСНачало();
		Иначе
			УдалитьСвязьПользователейСХозяйствующимСубъектом();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ХозяйствующийСубъектПриИзмененииНаСервере()
	
	УстановитьПризнакСобственнойОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйствующийСубъектПриИзменении(Элемент)
	ХозяйствующийСубъектПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВыполнениеЗявокВЕТИС_API

&НаКлиенте
Процедура ВыполнениеЗаявкиВЕТИСНачало()
	
	ОчиститьСообщения();
	
	РезультатОбмена = ЗаявкиВЕТИСВызовСервера.ПодготовитьЗапросНаУдалениеСвязиПользователейСХозяйствующимСубъектом(
	                  ХозяйствующийСубъект, ПользователиВЕТИС(), УникальныйИдентификатор);
	
	ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнениеЗаявкиВЕТИСОкончание()
	
	ОповеститьОбИзменениях();
	ПоказатьУспешныйРезультатОбмена();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатОбменаСВЕТИС(РезультатОбмена)
	
	Если РезультатОбмена.Ожидать <> Неопределено Тогда
		ИсходящееСообщение = РезультатОбмена.Изменения[0].ИсходящееСообщение;
		СформироватьТекстОжидание();
	КонецЕсли;
	
	ИнтеграцияВЕТИСКлиент.ОбработатьРезультатОбмена(РезультатОбмена, ЭтотОбъект,, ОповещениеПриЗавершенииОбмена(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменОбработкаОжидания()
	
	ИнтеграцияВЕТИСКлиент.ПродолжитьВыполнениеОбмена(ЭтотОбъект,, ОповещениеПриЗавершенииОбмена(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Функция ОповещениеПриЗавершенииОбмена()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПолученияРезультатОбработкиЗаявки", ЭтотОбъект);
	
	Возврат ОписаниеОповещения;
	
КонецФункции

&НаКлиенте
Процедура ПослеПолученияРезультатОбработкиЗаявки(Изменения, ДополнительныеПараметры) Экспорт
	
	ДанныеДляОбработки = Неопределено;
	
	Для Каждого ЭлементДанных Из Изменения Цикл
		Если ЭлементДанных.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ЗапросНаУдалениеСвязиПользователейСХозяйствующимСубъектом") Тогда
			ДанныеДляОбработки = ЭлементДанных;
		ИначеЕсли ЭлементДанных.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацийВЕТИС.ОтветНаЗапросУдаленияСвязиПользователейСХозяйствующимСубъектом") Тогда
			ДанныеДляОбработки = ЭлементДанных;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДляОбработки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВходящееСообщение = ДанныеДляОбработки.ВходящееСообщение;
	
	Если ДанныеДляОбработки.НовыйСтатус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОтклонена")
		Или Не ПустаяСтрока(ДанныеДляОбработки.ТекстОшибки) Тогда
		ПоказатьОшибкуОбмена(ДанныеДляОбработки.ТекстОшибки);
	ИначеЕсли ДанныеДляОбработки.НовыйСтатус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена") Тогда
		ВыполнениеЗаявкиВЕТИСОкончание();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТекстОжидание()
	
	Строки = Новый Массив();
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'на удаление связи с хозяйствующим субъектом'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'передан в ВетИС.'")));
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Получение ответа от сервера может занять продолжительное время.'")));
	
	ТекстОжидание = Новый ФорматированнаяСтрока(Строки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуОбмена(ТекстОшибки)
	
	Строки = Новый Массив();
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'на удаление связи с хозяйствующим субъектом'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'завершился с'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ошибкой'"),, ЦветГиперссылки,, "ОткрытьВходящееСообщение"));
	Строки.Добавить(":");
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветПроблема));
	
	ТекстОшибка = Новый ФорматированнаяСтрока(Строки);
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросОшибка;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУспешныйРезультатОбмена()
	
	Строки = Новый Массив();
	
	Строки.Добавить(НСтр("ru = 'На'"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'запрос'"),, ЦветГиперссылки,, "ОткрытьИсходящееСообщение"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'на удаление связи с хозяйствующим субъектом'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'получен'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ответ'"),, ЦветГиперссылки,, "ОткрытьВходящееСообщение"));
	Строки.Добавить(".");
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Удалена связь пользователя ВетИС'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(ПользовательВЕТИС),, ЦветГиперссылки,, "ОткрытьПользователяВЕТИС"));
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'с хозяйствующим субъектом'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(ХозяйствующийСубъект),, ЦветГиперссылки,, "ОткрытьХозяйствующийСубъект"));
	Строки.Добавить(".");
	ТекстРезультат = Новый ФорматированнаяСтрока(Строки);
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросРезультат;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

#КонецОбласти

#Область УдалениеПользователейБезОбращенияКВЕТИС_API

&НаКлиенте
Процедура УдалитьСвязьПользователейСХозяйствующимСубъектом()
	
	ТекстОшибки = "";
	
	УдалитьСвязьПользователейСХозяйствующимСубъектомНаСервере(ТекстОшибки);
	
	Если ПустаяСтрока(ТекстОшибки) Тогда
		ОповеститьОбИзменениях();
		ПоказатьУспешныйРезультатЗаписи();
	Иначе
		ПоказатьОшибкуЗаписи(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьПользователейСХозяйствующимСубъектомНаСервере(ТекстОшибки)
	
	НачатьТранзакцию();
	
	Попытка
		ПользователиВЕТИС.УдалитьСвязьПользователяСХозяйствующимСубъектом(ХозяйствующийСубъект, ПользовательВЕТИС);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуЗаписи(ТекстОшибки)
	
	Строки = Новый Массив();
	
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Удаление связи пользователя с хозяйствующим субъектом завершилось с ошибкой'")));
	Строки.Добавить(":");
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветПроблема));
	
	ТекстОшибка = Новый ФорматированнаяСтрока(Строки);
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросОшибка;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУспешныйРезультатЗаписи()
	
	Строки = Новый Массив();
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Удалена связь пользователя ВетИС'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(ПользовательВЕТИС),, ЦветГиперссылки,, "ОткрытьПользователяВЕТИС"));
	Строки.Добавить(Символы.ПС);
	Строки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'с хозяйствующим субъектом'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(ХозяйствующийСубъект),, ЦветГиперссылки,, "ОткрытьХозяйствующийСубъект"));
	Строки.Добавить(".");
	ТекстРезультат = Новый ФорматированнаяСтрока(Строки);
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросРезультат;
	
	ГруппаСтраницыПриСменеСтраницы(СтраницыФормы, СтраницыФормы.ТекущаяСтраница);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеИнтерфейсом

&НаСервере
Процедура ЗаполнитьИменаСтраниц()
	
	СтраницыФормы = Новый Массив();
	
	СтраницыФормы.Добавить("СтраницаИсходныеДанные");
	СтраницыФормы.Добавить("СтраницаЗапросОжидание");
	СтраницыФормы.Добавить("СтраницаЗапросОшибка");
	СтраницыФормы.Добавить("СтраницаЗапросРезультат");
	
	ИменаСтраниц = Новый ФиксированныйМассив(СтраницыФормы);
	
КонецПроцедуры // ЗаполнитьИменаСтраниц()

&НаКлиенте
Процедура ОповеститьОбИзменениях()
	
	Оповестить("Изменение_ПраваДоступаПользователейВЕТИС",     ХозяйствующийСубъект, ЭтотОбъект);
	Оповестить("Изменение_АдресаЗонОтветственностиВЕТИС",      ХозяйствующийСубъект, ЭтотОбъект);
	Оповестить("Изменение_ПредприятияЗонОтветственностиВЕТИС", ХозяйствующийСубъект, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекущуюСтраницуНавигации(Форма)
	
	СтраницыФормы     = Форма.Элементы.ГруппаСтраницы;
	СтраницыНавигации = Форма.Элементы.Навигация;
	
	ИндексСтраницы    = Форма.ИменаСтраниц.Найти(СтраницыФормы.ТекущаяСтраница.Имя);
	КоличествоСтраниц = Форма.ИменаСтраниц.Количество();
	
	Если ИндексСтраницы = 0 Тогда
		СтраницыНавигации.ТекущаяСтраница = СтраницыНавигации.ПодчиненныеЭлементы.НавигацияНачало;
		Форма.Элементы.НачалоДалее.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ИндексСтраницы = (КоличествоСтраниц - 1) Тогда
		СтраницыНавигации.ТекущаяСтраница = СтраницыНавигации.ПодчиненныеЭлементы.НавигацияОкончание;
		Форма.Элементы.ОкончаниеЗакрыть.КнопкаПоУмолчанию = Истина;
	ИначеЕсли СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросОшибка Тогда
		СтраницыНавигации.ТекущаяСтраница = СтраницыНавигации.ПодчиненныеЭлементы.НавигацияОшибка;
		Форма.Элементы.ОшибкаНазад.КнопкаПоУмолчанию = Истина;
	Иначе
		СтраницыНавигации.ТекущаяСтраница = СтраницыНавигации.ПодчиненныеЭлементы.НавигацияПродолжение;
		Если НЕ Форма.Элементы.ПродолжениеДалее.КнопкаПоУмолчанию Тогда
			Форма.Элементы.ПродолжениеДалее.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаЗапросОжидание Тогда
		СтраницыНавигации.Доступность = Ложь;
	Иначе
		СтраницыНавигации.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Функция ПользователиВЕТИС()
	
	Массив = Новый Массив;
	Массив.Добавить(ПользовательВЕТИС);
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаполнениеТекущейСтраницы()
	
	ТекущаяСтраницаЗаполнена = Истина;
	
	СтраницыФормы = Элементы.ГруппаСтраницы;
	СписокОшибок  = Новый СписокЗначений();
	
	Если СтраницыФормы.ТекущаяСтраница = СтраницыФормы.ПодчиненныеЭлементы.СтраницаИсходныеДанные Тогда
		
		Если ХозяйствующийСубъект.Пустая() Тогда
			ТекстОшибки = НСтр("ru = 'Не указан хозяйствующий субъект.'");
			СписокОшибок.Добавить("ХозяйствующийСубъект", ТекстОшибки);
		ИначеЕсли ЭтоСобственнаяОрганизация И НЕ ЭтоАдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект) Тогда
			ТекстОшибки = НСтр("ru = 'Для выполнения операции необходимо иметь роль ""Администратор"" в хозяйствующем субъекте в системе ""ВетИС.Паспорт"".'");
			СписокОшибок.Добавить("ХозяйствующийСубъект", ТекстОшибки);
		КонецЕсли;
		
		Если ПользовательВЕТИС.Пустая() Тогда
			ТекстОшибки = НСтр("ru='Не указан пользователь ВетИС.'");
			СписокОшибок.Добавить("ПользовательВЕТИС", ТекстОшибки);
		ИначеЕсли ЭтоСобственнаяОрганизация И ПользовательВЕТИС = АдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект) Тогда
			ТекстОшибки = СтрШаблон(НСтр("ru = 'Пользователь %1 является администратором хозяйствующего субъекта %2.'")
				+ " "
				+ НСтр("ru = 'Нельзя удалять связь хозяйствующего субъекта с его администратором.'"),
				ПользовательВЕТИС, ХозяйствующийСубъект);
			СписокОшибок.Добавить("ПользовательВЕТИС", ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	ОчиститьСообщения();
	
	Для Каждого ОшибкаЭлемент Из СписокОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОшибкаЭлемент.Представление,, ОшибкаЭлемент.Значение,,);
		ТекущаяСтраницаЗаполнена = Ложь;
	КонецЦикла;
	
	Возврат ТекущаяСтраницаЗаполнена;
	
КонецФункции

&НаСервере
Процедура УстановитьПризнакСобственнойОрганизации()
	
	Если ЗначениеЗаполнено(ХозяйствующийСубъект) Тогда
		ЭтоСобственнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ХозяйствующийСубъект, "СоответствуетОрганизации");
	Иначе
		ЭтоСобственнаяОрганизация = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоАдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект)
	
	Возврат ПользователиВЕТИС.ЭтоАдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект);
	
КонецФункции

&НаСервереБезКонтекста
Функция АдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект)
	
	Возврат ПользователиВЕТИС.АдминистраторХозяйствующегоСубъекта(ХозяйствующийСубъект);
	
КонецФункции

#КонецОбласти
