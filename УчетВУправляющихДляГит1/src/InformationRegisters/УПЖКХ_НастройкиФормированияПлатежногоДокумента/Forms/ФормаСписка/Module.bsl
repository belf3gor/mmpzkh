
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация")
		И НЕ Параметры.Организация.Пустая() Тогда
		
		ОтборПоОрганизации = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
		Если ОтборПоОрганизации.Представление = "Организация" Тогда
			ОтборПоОрганизации.ПравоеЗначение = Параметры.Организация;
			ОтборПоОрганизации.Использование  = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
	// Реклама
	ОТР_РекламаКлиентСервер.ПриСозданииНаСервере(ЭтаФорма);
	// Конец Реклама
	
КонецПроцедуры // ПриСозданииНаСервере()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПередНачаломДобавления" таблицы "Список".
//
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	// Отключаем стандартную обработку события.
	Отказ = Истина;
	
	// 1.Получаем список организаций, для которых не созданы элементы в справочнике "Настройки учета капремонта".
	// Без учета организаций которые помечены на удаление.
	
	ВыбраннаяОрганизация = Неопределено;
	
	СписокОрганизацийБезЗаписей = ПолучитьСписокОрганизацийБезЗаписей();
	
	Если СписокОрганизацийБезЗаписей.Количество() = 0 Тогда
		УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Настройки формирования платежного документа уже заданы для всех организаций!");
		Отказ = Истина;
		
		Возврат;
	ИначеЕсли СписокОрганизацийБезЗаписей.Количество() = 1 Тогда
		ВыбраннаяОрганизация = СписокОрганизацийБезЗаписей[0].Значение;
		
		ПродолжитьВыборОрганизации(ВыбраннаяОрганизация, Копирование);
	Иначе
		// 2. Открываем форму выбор справочника "Организации" с отбором по организациям, полученным в п.1.
		
		ФормаВыбора = ПолучитьФорму("Справочник.Организации.Форма.ФормаВыбора");
		
		УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(ФормаВыбора.Список.КомпоновщикНастроек.Настройки.Отбор, "Ссылка", СписокОрганизацийБезЗаписей,
																ВидСравненияКомпоновкиДанных.ВСписке, , Истина,
																РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		
		ФормаВыбора.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Копирование", Копирование);
		
		ФормаВыбора.ОписаниеОповещенияОзакрытии = Новый ОписаниеОповещения("ВыборОрганизацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВыбора.РежимОткрытияОкна           = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры // СписокПередНачаломДобавления()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СхемыУчета
&НаКлиенте
// Подключаемый обработчик команды перехода к схеме учета.
Процедура Подключаемый_ОткрытьСхемуУчета(Команда)
	
	ОТР_СхемыУчетаКлиент.Подключаемый_ОткрытьСхемуУчета(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры
// Конец СхемыУчета

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#Область Реклама

&НаКлиенте
// Процедура - обработчик нажатия на картинку баннера.
Процедура Подключаемый_РекламаОткрытьСтраницуСайта(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОТР_РекламаКлиент.Подключаемый_РекламаОткрытьСтраницуСайта(ЭтаФорма);
	
КонецПроцедуры // Подключаемый_РекламаОткрытьСтраницуСайта()

&НаКлиенте
// Процедура - обработчик нажатия на картинку закрытия баннера.
Процедура Подключаемый_РекламаКартникаЗакрытияБаннераНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ОТР_РекламаКлиент.Подключаемый_РекламаКартникаЗакрытияБаннераНажатие(ЭтаФорма);
	
КонецПроцедуры // Подключаемый_РекламаОткрытьСтраницуСайта()

#КонецОбласти // Реклама

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Предназначена для формирования структуры, содержащей данные о реквизитах и табличных частях
// элемента с переданной ссылкой.
&НаСервереБезКонтекста
Функция СформироватьСтруктуруДанныхРесурсовПоОрганизации(ТекущаяОрганизация)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента КАК УПЖКХ_НастройкиФормированияПлатежногоДокумента
	|ГДЕ
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
	
	СтруктураДанныхДляВозврата = Новый Структура;
	Для каждого ТекРесурс Из Метаданные.РегистрыСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента.Ресурсы Цикл
		СтруктураДанныхДляВозврата.Вставить("" + ТекРесурс.Имя);
	КонецЦикла;
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураДанныхДляВозврата, ВыборкаЗапроса);
	КонецЦикла;
	
	Возврат СтруктураДанныхДляВозврата;
	
КонецФункции // СформироватьСтруктуруДанныхРеквизитовИТабЧастей()

// Предназначена для получения списка организаций, для которых в базе не созданы 
// элементы справочника "УПЖКХ_НастройкиУчетаКапремонта".
Функция ПолучитьСписокОрганизацийБезЗаписей()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УПЖКХ_НастройкиФормированияПлатежногоДокумента.Организация
	|ПОМЕСТИТЬ втОрганизацииСЗаписями
	|ИЗ
	|	РегистрСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента КАК УПЖКХ_НастройкиФормированияПлатежногоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.Ссылка В
	|				(ВЫБРАТЬ
	|					втОрганизацииСЗаписями.Организация
	|				ИЗ
	|					втОрганизацииСЗаписями КАК втОрганизацииСЗаписями)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	СписокОрганизаций = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		СписокОрганизаций.Добавить(Выборка.Организация);
	КонецЦикла;
	
	Возврат СписокОрганизаций;
	
КонецФункции // ПолучитьСписокОрганизацийБезЭлементов()

&НаКлиенте
// Процедура-продолжение выбора организации для создания настроек.
Функция ВыборОрганизацииЗавершение(ВыбраннаяОрганизация, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбраннаяОрганизация = Неопределено Тогда
		ПродолжитьВыборОрганизации(ВыбраннаяОрганизация, ДополнительныеПараметры.Копирование);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
// Процедура-завершение выборв организации.
Процедура ПродолжитьВыборОрганизации(ВыбраннаяОрганизация, Копирование)
	
	// 3. Получаем форму элемента справочника "УПЖКХ_НастройкиУчетаКапремонта" для последующего заполнения реквизитов.
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ПереходИзФормыСписка", Истина);
	
	ФормаЗаписи = ПолучитьФорму("РегистрСведений.УПЖКХ_НастройкиФормированияПлатежногоДокумента.Форма.ФормаЗаписи", ПараметрыОткрытия);
	ФормаЗаписи.Запись.Организация = ВыбраннаяОрганизация;
	// 4. Выделено программное заполнение реквизитов формы элемента при добавлении копированием.
	Если Копирование Тогда
		ТекущаяОрганизация = Элементы.Список.ТекущиеДанные.Организация;
		СтруктураЗаполненияЗаписи = СформироватьСтруктуруДанныхРесурсовПоОрганизации(ТекущаяОрганизация);
		Если НЕ СтруктураЗаполненияЗаписи = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ФормаЗаписи.Запись, СтруктураЗаполненияЗаписи);
		КонецЕсли;
	КонецЕсли;
	
	ФормаЗаписи.Открыть();
	
КонецПроцедуры

#КонецОбласти