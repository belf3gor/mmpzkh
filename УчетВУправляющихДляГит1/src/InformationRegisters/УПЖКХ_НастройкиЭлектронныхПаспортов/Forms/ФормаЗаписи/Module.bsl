
////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПрочиеПроцедурыИФункции

&НаСервере
// Заполняет таблицы формы начальными значениями.
//
Процедура ИнициализироватьРеквизиты()
	
	ЗаписьОбъект = ДанныеФормыВЗначение(Запись, Тип("РегистрСведенийМенеджерЗаписи.УПЖКХ_НастройкиЭлектронныхПаспортов"));
	
	ТаблУслугиСодержанияИРемонта = ЗаписьОбъект.УслугиСодержанияИРемонта.Получить();
	ТаблКоммунальныеРесурсы      = ЗаписьОбъект.КоммунальныеРесурсы.Получить();
	ТаблКоммунальныеУслуги       = ЗаписьОбъект.КоммунальныеУслуги.Получить();
	ТаблУслугиПоУправлению       = ЗаписьОбъект.УслугиПоУправлению.Получить();
	
	Если ТипЗнч(ТаблУслугиСодержанияИРемонта) = Тип("ТаблицаЗначений") Тогда
		УслугиСодержанияИРемонта.Загрузить(ТаблУслугиСодержанияИРемонта);
	КонецЕсли;
	
	Если ТипЗнч(ТаблКоммунальныеРесурсы) = Тип("ТаблицаЗначений") Тогда
		КоммунальныеРесурсы.Загрузить(ТаблКоммунальныеРесурсы);
	КонецЕсли;
	Если КоммунальныеРесурсы.Количество() = 0 Тогда
		ЗаполнитьТаблицуСРесурсами();
	КонецЕсли;
	
	Если ТипЗнч(ТаблКоммунальныеУслуги) = Тип("ТаблицаЗначений") Тогда
		КоммунальныеУслуги.Загрузить(ТаблКоммунальныеУслуги);
	КонецЕсли;
	Если КоммунальныеУслуги.Количество() = 0 Тогда
		ЗаполнитьТаблицуСУслугами();
	КонецЕсли;
	
	Если ТипЗнч(ТаблУслугиПоУправлению) = Тип("ТаблицаЗначений") Тогда
		УслугиПоУправлению.Загрузить(ТаблУслугиПоУправлению);
	КонецЕсли;
	
КонецПроцедуры // ИнициализироватьРеквизиты()

&НаСервере
// Осуществляет начальное заполнение таблицы "Коммунальные ресурсы".
//
Процедура ЗаполнитьТаблицуСРесурсами()
	
	НоваяСтрока = КоммунальныеРесурсы.Добавить();
	НоваяСтрока.Ресурс = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыРесурсов.ТепловаяЭнергия");
	
	НоваяСтрока = КоммунальныеРесурсы.Добавить();
	НоваяСтрока.Ресурс = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыРесурсов.ЭлектрическаяЭнергия");
	
	НоваяСтрока = КоммунальныеРесурсы.Добавить();
	НоваяСтрока.Ресурс = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыРесурсов.Газ");
	
	НоваяСтрока = КоммунальныеРесурсы.Добавить();
	НоваяСтрока.Ресурс = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыРесурсов.ГорячаяВода");
	
	НоваяСтрока = КоммунальныеРесурсы.Добавить();
	НоваяСтрока.Ресурс = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыРесурсов.ХолоднаяВода");
	
КонецПроцедуры // ЗаполнитьТаблицуСРесурсами()

&НаСервере
// Осуществляет начальное заполнение таблицы "Коммунальные услуги".
//
Процедура ЗаполнитьТаблицуСУслугами()
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.Отопление");
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.Электроснабжение");
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.Газоснабжение");
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.ГорячееВодоснабжение");
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.ХолодноеВодоснабжение");
	
	НоваяСтрока = КоммунальныеУслуги.Добавить();
	НоваяСтрока.КоммунальнаяУслуга = ПредопределенноеЗначение("Перечисление.УПЖКХ_ВидыКоммунальныхУслуг.Водоотведение");
	
КонецПроцедуры // ЗаполнитьТаблицуСУслугами()

&НаКлиентеНаСервереБезКонтекста
// Управление видимостью элементов формы.
//
Процедура УправлениеФормой(Форма)
	
	Запись   = Форма.Запись;
	Элементы = Форма.Элементы;
	
	Элементы.НастройкаДоступаКСайту.Видимость = Запись.ОтправлятьНаСайт;
	
КонецПроцедуры // УправлениеВидимостью()

#КонецОбласти 

//////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьРеквизиты();
	
	УправлениеФормой(ЭтаФорма);
	
	// ОбщиеМеханизмыИКоманды
	ОТР_ПодключаемыеОбщиеМеханизмыИКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ОбщиеМеханизмыИКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
// Обработчик события "ПослеЗаписиНаСервере" формы.
//
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.УслугиСодержанияИРемонта = Новый ХранилищеЗначения(УслугиСодержанияИРемонта.Выгрузить());
	ТекущийОбъект.КоммунальныеРесурсы      = Новый ХранилищеЗначения(КоммунальныеРесурсы.Выгрузить());
	ТекущийОбъект.КоммунальныеУслуги       = Новый ХранилищеЗначения(КоммунальныеУслуги.Выгрузить());
	ТекущийОбъект.УслугиПоУправлению       = Новый ХранилищеЗначения(УслугиПоУправлению.Выгрузить());
	
	КВП_ЗаписатьОбъект(ТекущийОбъект);
	
КонецПроцедуры // ПослеЗаписиНаСервере()

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
// Обработчик события "НачалоВыбора" поля выбора каталога сохранения паспортов.
//
Процедура КаталогСохраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок                   = "Выберите каталог сохранения паспортов";
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКаталогСохраненияЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры // КаталогСохраненияНачалоВыбора()

&НаКлиенте
// Обрабатывает выбор каталога сохранения.
//
Процедура ВыбратьКаталогСохраненияЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		Запись.КаталогСохранения = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры // ВыбратьКаталогСохраненияЗавершение()

&НаКлиенте
// Обработчик события "Открытие" поля выбора каталога сохранения паспортов.
//
Процедура КаталогСохраненияОткрытие(Элемент, СтандартнаяОбработка)
	
	// Изначально процедура предназначена для открытия ссылок в браузере, но и в данном случае подойдет.
	УПЖКХ_ОбщегоНазначенияКлиент.ОткрытьСтраницуВБраузере("explorer " + Запись.КаталогСохранения);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // КаталогСохраненияОткрытие()

&НаКлиенте
// Обработчик события "ПриИзменении" флага "Отправлять паспорта на свой сайт".
//
Процедура ОтправлятьНаСайтПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры // ОтправлятьНаСайтПриИзменении()

&НаКлиенте
// Обработчик события "НачалоВыбора" поля "Настройка доступа к сайту".
//
Процедура НастройкаДоступаКСайтуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = ПолучитьФорму("Справочник.УПЖКХ_НастройкиДоступаКСайту.ФормаВыбора", Новый Структура("ТекущаяСтрока", Запись.НастройкаДоступаКСайту), Элемент);
	УПЖКХ_ТиповыеМетодыКлиентСервер.УстановитьЭлементОтбора(Форма.Список.КомпоновщикНастроек.Настройки.Отбор,
															"Организация",
															Запись.Организация,
															ВидСравненияКомпоновкиДанных.Равно,
															,
															Истина,
															РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
															
	Форма.Открыть();
	
КонецПроцедуры // НастройкаДоступаКСайтуНачалоВыбора()

#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

// ЧастоЗадаваемыеВопросы
&НаКлиенте
// Подключаемый обработчик команды перехода к часто задаваемым вопросам.
Процедура Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда)
	
	ОТР_ЧастоЗадаваемыеВопросыКлиент.Подключаемый_ЧастоЗадаваемыеВопросыОткрытьСсылку(Команда);
	
КонецПроцедуры
// Конец ЧастоЗадаваемыеВопросы

#КонецОбласти
