
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ЕстьПравоНастройкиОбмена         = ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьПравоНастройкиОбмена();
	ИспользуютсяДоговорыКонтрагентов = ОбменСКонтрагентамиПовтИсп.ИспользуютсяДоговорыКонтрагентов();
	
	Элементы.НастройкиОтправкиСоздатьНастройкуОтправки.Видимость   = ЕстьПравоНастройкиОбмена;
	Элементы.НастройкиОтправкиОбновитьСтатусыПодключения.Видимость = ЕстьПравоНастройкиОбмена;
	Элементы.ИнтеркампаниСоздатьНастройкуИнтеркампани.Видимость    = ЕстьПравоНастройкиОбмена;
	Элементы.НастройкиПолученияСоздатьНастройкуПолучения.Видимость = ЕстьПравоНастройкиОбмена;
	Элементы.НастройкиОтправкиДоговор.Видимость                    = ИспользуютсяДоговорыКонтрагентов;
	
	НастроитьОтображениеСтраницСервер();
	УправлениеДоступностьюЭлементовУправления();
	
	Если ЗначениеЗаполнено(Параметры.Источник) Тогда
	
		Элементы.Отборы.Видимость = Ложь;
		ИмяСправочникаКонтрагенты = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Контрагенты");
		ИмяСправочникаОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Организации");
		ИмяСправочникаПартнеры = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Партнеры");
		
		ПараметрыФормы = Новый Структура;
		Если ТипЗнч(Параметры.Источник) = Тип("СправочникСсылка." + ИмяСправочникаКонтрагенты) Тогда
			Контрагент = Параметры.Источник;
			УстановитьОтборыКонтрагентаВДинамическихСписках(ЭтотОбъект);
		ИначеЕсли ТипЗнч(Параметры.Источник) = Тип("СправочникСсылка." + ИмяСправочникаОрганизации) Тогда
			Организация = Параметры.Источник;
			УстановитьОтборыОрганизацииВДинамическихСписках(ЭтотОбъект);
		ИначеЕсли ТипЗнч(Параметры.Источник) = Тип("СправочникСсылка." + ИмяСправочникаПартнеры) Тогда
			Партнер = Параметры.Источник;
			УстановитьОтборыПартнераВДинамическихСписках(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	ИмяРеквизитаПартнераКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ПартнерКонтрагента");
	
	НавигационнаяСсылка = "e1cib/app/" + ЭтотОбъект.ИмяФормы;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УстановитьОтборыОрганизацииВДинамическихСписках(ЭтотОбъект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		УстановитьОтборыКонтрагентаВДинамическихСписках(ЭтотОбъект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтатусПриглашения) Тогда
		УстановитьОтборыСтатусаПодключенияВДинамическихСписках(ЭтотОбъект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		УстановитьОтборыПартнераВДинамическихСписках(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьТекущиеДелаЭДО" Тогда
		Элементы.НастройкиОтправки.Обновить();
		Элементы.Интеркампани.Обновить();
		Элементы.НастройкиПолучения.Обновить();
		
	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант" Тогда
		
		Если Источник = "ИспользоватьОбменЭДМеждуОрганизациями" Тогда
			
			НастроитьОтображениеСтраницСервер();
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбменСКонтрагентамиСлужебныйКлиент.ЗаполнитьДанныеСлужбыПоддержки(ТелефонСлужбыПоддержки, АдресЭлектроннойПочтыСлужбыПоддержки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтборыОрганизацииВДинамическихСписках(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьОтборыКонтрагентаВДинамическихСписках(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СтатусПодключенияПриИзменении(Элемент)
	УстановитьОтборыСтатусаПодключенияВДинамическихСписках(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	УстановитьОтборыПартнераВДинамическихСписках(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиОтправки

&НаКлиенте
Процедура НастройкиОтправкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуНастроекОтправки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиПолучения

&НаКлиенте
Процедура НастройкиПолученияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуНастроекПолучения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиПолучения

&НаКлиенте
Процедура ИнтеркампаниВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуНастроекИнтеркампани();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСтатусыПодключения(Команда)
	ОбработкаОповещения = Новый ОписаниеОповещения("ОбновитьСтатусыНастроекЗавершить", ЭтотОбъект);
	ОбменСКонтрагентамиСлужебныйКлиент.ПолучитьНастройкиЭДОИПараметрыСертификатов(ОбработкаОповещения);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройкуОтправки(Команда)
	ОткрытьФормуНастроекОтправки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройкуПолучения(Команда)
	ОткрытьФормуНастроекПолучения(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройкуИнтеркампани(Команда)
	ОткрытьФормуНастроекИнтеркампани(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСсылкуНаСтатьюПо1СБухфон(Команда)
	ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьИнструкциюПо1СБухфон();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОформлениеФормы

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	ЭлементУсловногоОформления = НастройкиПолучения.УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Все учетные записи>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИдентификаторКонтрагента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ИдентификаторКонтрагента");
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	ЭлементУсловногоОформления = НастройкиПолучения.УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Все учетные записи>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИдентификаторОрганизации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ИдентификаторОрганизации");
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////

КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеСтраницСервер()
	
	ИспользуетсяДополнительнаяАналитикаПартнеры = ОбменСКонтрагентамиПовтИсп.ИспользуетсяДополнительнаяАналитикаКонтрагентовСправочникПартнеры();
	ИспользуетсяНесколькоОрганизацийЭД          = ЭлектронноеВзаимодействиеСлужебный.ИспользуетсяНесколькоОрганизаций();
	ИспользоватьОбменЭДМеждуОрганизациями       = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьОбменЭДМеждуОрганизациями");
	
	Элементы.МеждуСвоимиОрганизациями.Видимость = ИспользоватьОбменЭДМеждуОрганизациями;
	
	Элементы.Партнер.Видимость = Ложь;
	Если ИспользуетсяДополнительнаяАналитикаПартнеры
		И ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции(
			"ИспользоватьПартнеровИКонтрагентов") Тогда
		
		Элементы.Партнер.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюЭлементовУправления()

	ЕстьПравоИзменения = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам);
	
	Элементы.НастройкиОтправкиСоздатьНастройкуОтправки.Доступность = ЕстьПравоИзменения;
	Элементы.НастройкиПолученияСоздатьНастройкуПолучения.Доступность = ЕстьПравоИзменения;
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытиеФормыНастроек

&НаКлиенте
Процедура ОткрытьФормуНастроекОтправки(ФормаСоздания = Ложь)
	
	ПараметрыОткрытия = Новый Структура;
	
	Если ФормаСоздания Тогда
		
		ПараметрыОткрытия.Вставить("Создание", Истина);
		ПараметрыОткрытия.Вставить("Организация", Организация);
		ПараметрыОткрытия.Вставить("Контрагент" , Контрагент);
		
	Иначе
		
		ТекущиеДанные = Элементы.НастройкиОтправки.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Организация", ТекущиеДанные.Организация);
		ПараметрыОткрытия.Вставить("Контрагент" , ТекущиеДанные.Контрагент);
		ПараметрыОткрытия.Вставить("Договор"    , ТекущиеДанные.Договор);
		
	КонецЕсли;
	
	ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьФормуНастройкиОтправкиЭДО(ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроекПолучения(ФормаСоздания = Ложь)
	
	ПараметрыОткрытия = Новый Структура;
	
	Если ФормаСоздания Тогда
		ПараметрыОткрытия.Вставить("Создание", Истина);
		ПараметрыОткрытия.Вставить("Организация", Организация);
		ПараметрыОткрытия.Вставить("Контрагент" , Контрагент);
	Иначе
		
		ТекущиеДанные = Элементы.НастройкиПолучения.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Организация", ТекущиеДанные.Организация);
		ПараметрыОткрытия.Вставить("Контрагент" , ТекущиеДанные.Контрагент);
		ПараметрыОткрытия.Вставить("ИдентификаторКонтрагента"    , ТекущиеДанные.ИдентификаторКонтрагента);
		ПараметрыОткрытия.Вставить("ИдентификаторОрганизации"    , ТекущиеДанные.ИдентификаторОрганизации);
		
	КонецЕсли;
	
	ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьФормуНастройкиОтраженияВУчетеЭДО(ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроекИнтеркампани(ФормаСоздания = Ложь)
	
	ПараметрыОткрытия = Новый Структура;
	
	Если ФормаСоздания Тогда
		ПараметрыОткрытия.Вставить("Создание", Истина);
		ПараметрыОткрытия.Вставить("Отправитель", Организация);
	Иначе
		
		ТекущиеДанные = Элементы.Интеркампани.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Отправитель", ТекущиеДанные.Отправитель);
		ПараметрыОткрытия.Вставить("Получатель" , ТекущиеДанные.Получатель);
		
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.Форма.НастройкиОтправкиДокументовИнтеркампани",
		ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область РаботаСОтборами

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыОрганизацииВДинамическихСписках(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиОтправки, "Организация",
		Форма.Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.Организация));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиПолучения, "Организация",
		Форма.Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.Организация));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Интеркампани, "Отправитель",
		Форма.Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.Организация));

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыКонтрагентаВДинамическихСписках(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиОтправки, "Контрагент",
		Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.Контрагент));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиПолучения, "Контрагент",
		Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.Контрагент));
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыСтатусаПодключенияВДинамическихСписках(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиОтправки, "СтатусПриглашения",
		Форма.СтатусПриглашения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.СтатусПриглашения));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиПолучения, "СтатусПриглашения",
		Форма.СтатусПриглашения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Форма.СтатусПриглашения));
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыПартнераВДинамическихСписках(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиОтправки,
		"Контрагент." + Форма.ИмяРеквизитаПартнераКонтрагента, Форма.Партнер, ВидСравненияКомпоновкиДанных.Равно,,
		ЗначениеЗаполнено(Форма.Партнер));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.НастройкиПолучения,
		"Контрагент." + Форма.ИмяРеквизитаПартнераКонтрагента, Форма.Партнер, ВидСравненияКомпоновкиДанных.Равно,,
		ЗначениеЗаполнено(Форма.Партнер));
		
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ОбновитьСтатусыНастроекЗавершить(Результат, Контекст) Экспорт
	
	СоотвСоглашенийИСтруктурСертификатов = Неопределено;
	Если ТипЗнч(Результат) <> Тип("Структура")
		ИЛИ Не Результат.Свойство("СоответствиеПрофилейИПараметровСертификатов", СоотвСоглашенийИСтруктурСертификатов) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Выполняется получение информации о приглашениях. Подождите...'");
	Состояние(НСтр("ru = 'Получение.'"), , ТекстСообщения);
	ОбменСКонтрагентамиСлужебныйВызовСервера.ОбновитьСтатусыПодключенияНастроекЭДО(СоотвСоглашенийИСтруктурСертификатов);
	
	Оповестить("ОбновитьСостояниеПриглашений");
	
КонецПроцедуры

#КонецОбласти
