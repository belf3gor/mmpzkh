#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Процедура ПерезаполнитьЗначенияПоУмолчанию() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭтоПереходСРедакции20 = ОбновлениеСПредыдущейРедакции.ЭтоПереходСРедакции20();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	Иначе
		Выборка = Результат.Выбрать();
	КонецЕсли;
	
	НастройкиУчетаЗарплаты  = РегистрыСведений.НастройкиУчетаЗарплаты.СоздатьМенеджерЗаписи();
	
	Пока Выборка.Следующий() Цикл
		
		НастройкиУчетаЗарплаты.Организация = Выборка.Организация;
		НастройкиУчетаЗарплаты.Прочитать();
		НастройкиУчетаЗарплаты.Организация = Выборка.Организация;
		ЗначенияНастройкиПоУмолчанию(НастройкиУчетаЗарплаты);
		НастройкиУчетаЗарплаты.ИспользоватьФорматОбменаЗУП25 = НастройкиУчетаЗарплаты.ИспользоватьФорматОбменаЗУП25;
		НастройкиУчетаЗарплаты.ИндивидуальныйАванс           = ?(НастройкиУчетаЗарплаты.ИндивидуальныйАванс, НастройкиУчетаЗарплаты.ИндивидуальныйАванс, ЭтоПереходСРедакции20);
		
		Попытка
			НастройкиУчетаЗарплаты.Записать();
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Настройки учета зарплаты""
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.НастройкиУчетаЗарплаты,, 
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПорядокПримененияВычетовПоНДФЛ() Экспорт
	
	Если Константы.УчетЗарплатыИКадровВоВнешнейПрограмме.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТ_УПНДФЛ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка
	|ПОМЕСТИТЬ ВТ_Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = Организации.ГоловнаяОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Организации.Ссылка
	|ИЗ
	|	ВТ_Организации КАК ВТ_Организации,
	|	ВТ_УПНДФЛ КАК ВТ_УПНДФЛ
	|ГДЕ
	|	НЕ ВТ_Организации.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТ_УПНДФЛ.ГоловнаяОрганизация
	|				ИЗ
	|					ВТ_УПНДФЛ КАК ВТ_УПНДФЛ)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	УчетнаяПолитикаПоНДФЛ  = РегистрыСведений.УчетнаяПолитикаПоНДФЛ.СоздатьМенеджерЗаписи();
	Пока Выборка.Следующий() Цикл
		
		УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = Выборка.Ссылка;
		УчетнаяПолитикаПоНДФЛ.Прочитать();		
		УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = Выборка.Ссылка;
		УчетнаяПолитикаПоНДФЛ.ОсобенностиИсчисленияНДФЛ = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом;
			
		Попытка
			УчетнаяПолитикаПоНДФЛ.Записать();
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Учетная политика по НДФЛ""
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.УчетнаяПолитикаПоНДФЛ,, 
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПоддержкуСовместительства() Экспорт
	
	Если Константы.ИспользоватьКадровыйУчет.Получить() Тогда
		Константы.ПоддержкаСовместительства.Установить(Истина);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Совместительство
	|ИЗ
	|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|ГДЕ
	|	ТекущиеКадровыеДанныеСотрудников.ТекущийВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|	И ТекущиеКадровыеДанныеСотрудников.ТекущийВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ОперацияУчетаПоСтраховымВзносам.ПособияПоСоциальномуСтрахованию КАК ОперацияУчетаПоСтраховымВзносамПособияПоСоциальномуСтрахованию
	|ГДЕ
	|	ОперацияУчетаПоСтраховымВзносамПособияПоСоциальномуСтрахованию.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|	И ОперацияУчетаПоСтраховымВзносамПособияПоСоциальномуСтрахованию.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ОперацияУчетаПоСтраховымВзносам.ПособияПоУходуЗаРебенком КАК ОперацияУчетаПоСтраховымВзносамПособияПоУходуЗаРебенком
	|ГДЕ
	|	ОперацияУчетаПоСтраховымВзносамПособияПоУходуЗаРебенком.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|	И ОперацияУчетаПоСтраховымВзносамПособияПоУходуЗаРебенком.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ВидыЗанятостиСотрудников КАК ВидыЗанятостиСотрудников
	|ГДЕ
	|	ВидыЗанятостиСотрудников.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|	И ВидыЗанятостиСотрудников.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
	|ГДЕ
	|	ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|	И ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.УдалитьУчетнаяПолитикаПоПерсоналу КАК УдалитьУчетнаяПолитикаПоПерсоналу
	|ГДЕ
	|	УдалитьУчетнаяПолитикаПоПерсоналу.ПоддержкаВнутреннегоСовместительства";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Константы.ПоддержкаСовместительства.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗначенияНастройкиПоУмолчанию(Запись) Экспорт
	
	РезервЕжегодныхОтпусков = Справочники.Резервы.НайтиПоНаименованию("Резерв ежегодных отпусков", Истина);
	
	Запись.РезервОтпусков = 
		?(ЗначениеЗаполнено(Запись.РезервОтпусков), Запись.РезервОтпусков, РезервЕжегодныхОтпусков);
		
	Запись.СписаниеДепонированныхСумм = 
		?(ЗначениеЗаполнено(Запись.СписаниеДепонированныхСумм), Запись.СписаниеДепонированныхСумм, "");
		
	Запись.ДатаВыплатыЗарплаты = 
		?(ЗначениеЗаполнено(Запись.ДатаВыплатыЗарплаты), Запись.ДатаВыплатыЗарплаты, 10);
		
	Запись.ДатаВыплатыАванса = 
		?(ЗначениеЗаполнено(Запись.ДатаВыплатыАванса), Запись.ДатаВыплатыАванса, 25);
		
	Запись.СпособРасчетаАванса = 
		?(ЗначениеЗаполнено(Запись.СпособРасчетаАванса), Запись.СпособРасчетаАванса, Перечисления.СпособыРасчетаАванса.ПроцентомОтТарифа);
		
	Запись.Аванс = 
		?(ЗначениеЗаполнено(Запись.Аванс), Запись.Аванс, 40);
		
	Запись.ПродолжительностьОтпуска = 
		?(ЗначениеЗаполнено(Запись.ПродолжительностьОтпуска), Запись.ПродолжительностьОтпуска, 28);
	
КонецПроцедуры

#КонецЕсли