#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Оборудование") Тогда
		Оборудование = Параметры.Оборудование;
	ИначеЕсли Параметры.Отбор.Свойство("Оборудование") Тогда
		Оборудование = Параметры.Отбор.Оборудование;
		Элементы.ФормаЗакрыть.Видимость = Ложь;
	КонецЕсли;
	
	Если Оборудование.ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
		Оборудование = Справочники.ПодключаемоеОборудование.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Оборудование) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОборудованиеПоОрганизациям.Организация
		|ИЗ
		|	РегистрСведений.ОборудованиеПоОрганизациям КАК ОборудованиеПоОрганизациям
		|ГДЕ
		|	ОборудованиеПоОрганизациям.Оборудование = &Оборудование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыВидовОплатыКММ.Код КАК Код,
		|	КодыВидовОплатыКММ.ВидОплаты,
		|	КодыВидовОплатыКММ.ВидОплаты.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.КодыВидовОплатыКММ КАК КодыВидовОплатыКММ
		|ГДЕ
		|	КодыВидовОплатыКММ.Оборудование = &Оборудование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1,
		|	ЗНАЧЕНИЕ(Справочник.ВидыОплатОрганизаций.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код";
		
		Запрос.УстановитьПараметр("Оборудование", Оборудование);
		Результат = Запрос.ВыполнитьПакет();
		
		ВыборкаОрганизаций = Результат[0].Выбрать();
		
		Если ВыборкаОрганизаций.Следующий() Тогда
			Организация = ВыборкаОрганизаций.Организация;
		КонецЕсли;
		
		ТаблицаКодов.Очистить();
		ВыборкаКодов = Результат[1].Выбрать();
		Пока ВыборкаКодов.Следующий() Цикл
			СтрокаКодов = ТаблицаКодов.Добавить();
			СтрокаКодов.КодВидаОплаты = ВыборкаКодов.Код;
			Если ЗначениеЗаполнено(ВыборкаКодов.Организация) 
				И ВыборкаКодов.Организация = Организация Тогда
				СтрокаКодов.ВидОплаты = ВыборкаКодов.ВидОплаты;
			КонецЕсли;
			НовыйКод = Макс(СтрокаКодов.КодВидаОплаты, НовыйКод);
		КонецЦикла;
		
		НовыйКод = НовыйКод + 1;
		
	Иначе
		Элементы.ТаблицаКодов.Видимость = Ложь;
		Элементы.ДекорацияПредупреждение.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
		
	ИначеЕсли Модифицированность Тогда
		
		Ошибки = Неопределено;
		ДвойныеКоды = Новый Массив;
		
		Для Каждого Строка Из ТаблицаКодов Цикл
			
			Если ТаблицаКодов.НайтиСтроки(Новый Структура("КодВидаОплаты", Строка.КодВидаОплаты)).Количество() > 1 Тогда
				Если ДвойныеКоды.Найти(Строка.КодВидаОплаты) = Неопределено Тогда
					ДвойныеКоды.Добавить(Строка.КодВидаОплаты);
					ТекстОшибки = СтрШаблон(НСтр("ru='Код вида оплаты %1 указан в нескольких строках'"), Строка.КодВидаОплаты);
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки, Строка.КодВидаОплаты, Строка.КодВидаОплаты, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			
			Если Строка.КодВидаОплаты = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Строка.ВидОплаты) Тогда
				ТекстОшибки = СтрШаблон(НСтр("ru='Для кода %1 не указан вид оплаты'"), Строка.КодВидаОплаты);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки, "ТаблицаКодовВидОплаты", Строка.КодВидаОплаты, ТекстОшибки);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ Ошибки = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если Модифицированность И Не ЗавершениеРаботы Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	Набор = РегистрыСведений.КодыВидовОплатыКММ.СоздатьНаборЗаписей();
	Набор.Отбор.Оборудование.Установить(Оборудование);
	
	Для Каждого Строка Из ТаблицаКодов Цикл
		Если НЕ ЗначениеЗаполнено(Строка.ВидОплаты) Тогда
			Продолжить;
		КонецЕсли;
		НоваяЗапись 				= Набор.Добавить();
		НоваяЗапись.Оборудование	= Оборудование;
		НоваяЗапись.Код 			= Строка.КодВидаОплаты;
		НоваяЗапись.ВидОплаты 		= Строка.ВидОплаты;
	КонецЦикла;
	
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКодов

&НаКлиенте
Процедура ТаблицаКодовПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные.КодВидаОплаты = 1 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКодовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
		ТекущиеДанные.КодВидаОплаты = НовыйКод;
		НовыйКод = НовыйКод + 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКодовПослеУдаления(Элемент)
	
	НовыйКод = РасчитатьНовыйКод();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКодовКодВидаОплатыОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ВыбранноеЗначение = Число(Текст);
	ТекущиеДанные = Элементы.ТаблицаКодов.ТекущиеДанные;
	Если ВыбранноеЗначение >= НовыйКод Тогда
		НовыйКод = ВыбранноеЗначение + 1;
	ИначеЕсли (ТекущиеДанные.КодВидаОплаты = НовыйКод - 1) И (ВыбранноеЗначение > 1) Тогда
		ТекущиеДанные.КодВидаОплаты = ВыбранноеЗначение;
		НовыйКод = РасчитатьНовыйКод();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция РасчитатьНовыйКод()
	
	МаксКод = 0;
	Для Каждого Строка Из ТаблицаКодов Цикл
		МаксКод = Макс(МаксКод, Строка.КодВидаОплаты);
	КонецЦикла;
	
	Возврат МаксКод + 1;
		
КонецФункции

#КонецОбласти

