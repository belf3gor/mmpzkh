
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Функция возвращает структуру значений по умолчанию для документа для движений.
//
// Возвращаемое значение:
//	Структура - значения по умолчанию
//
Функция ЗначенияПоУмолчанию(СсылкаНаОформляемыйДокумент) Экспорт
	
	СтруктураЗначенияПоУмолчанию = Новый Структура;
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СсылкаНаОформляемыйДокумент);
	
	СтруктураЗначенияПоУмолчанию.Вставить("Документ", СсылкаНаОформляемыйДокумент);
	СтруктураЗначенияПоУмолчанию.Вставить("Статус",   МенеджерОбъекта.СтатусПоУмолчанию());
	
	СтруктураЗначенияПоУмолчанию.Вставить("КвитанцияПолученЕГАИС",           Ложь);
	СтруктураЗначенияПоУмолчанию.Вставить("КвитанцияПроведенЕГАИС",          Ложь);
	СтруктураЗначенияПоУмолчанию.Вставить("УведомлениеОРегистрацииДвижения", Ложь);
	
	СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие1", МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию());
	СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие2", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие3", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	
	Возврат СтруктураЗначенияПоУмолчанию;
	
КонецФункции

// Осуществляет запись в регистр по переданным данным.
//
// Параметры:
//  ДанныеЗаписи - данные для записи в регистр
//
Процедура ВыполнитьЗаписьВРегистр(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.СтатусыДокументовЕГАИС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Обработать набор записей регистра.
//
// Параметры:
//  НаборЗаписей - НаборЗаписей.СтатусыДокументовЕГАИС - Набор записей.
//  ПараметрыОбновления - Структура - см. функцию ВозвращаемоеЗначениеДальнейшиеДействияСтатус().
// 
// Возвращаемое значение:
//  Структра - Структура со свойствами:
//   * НовыйСтатус - ПеречислениеСсылка - Новый статус.
//   * СтарыйСтатус - ПеречислениеСсылка - Старый статус.
//   * ЗаписатьНабор - Булево - Признак необходимости записи набора.
//
Функция ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления, ЭтоНовый = Истина) Экспорт
	
	НовыйСтатус   = Неопределено;
	СтарыйСтатус  = Неопределено;
	ЗаписатьНабор = Неопределено;
	
	Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
		Если ЗаписьНабора.Статус <> ПараметрыОбновления.НовыйСтатус Или ЭтоНовый Тогда
			СтарыйСтатус = ЗаписьНабора.Статус;
			ЗаписьНабора.Статус = ПараметрыОбновления.НовыйСтатус;
			НовыйСтатус = ПараметрыОбновления.НовыйСтатус;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие1 <> ПараметрыОбновления.ДальнейшееДействие1 Тогда
			ЗаписьНабора.ДальнейшееДействие1 = ПараметрыОбновления.ДальнейшееДействие1;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие2 <> ПараметрыОбновления.ДальнейшееДействие2 Тогда
			ЗаписьНабора.ДальнейшееДействие2 = ПараметрыОбновления.ДальнейшееДействие2;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие3 <> ПараметрыОбновления.ДальнейшееДействие3 Тогда
			ЗаписьНабора.ДальнейшееДействие3 = ПараметрыОбновления.ДальнейшееДействие3;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ПараметрыОбновления.Прочее <> Неопределено Тогда
			Для Каждого КлючИЗначение Из ПараметрыОбновления.Прочее Цикл
				Если ЗаписьНабора[КлючИЗначение.Ключ] <> ПараметрыОбновления.Прочее[КлючИЗначение.Ключ] Тогда
					ЗаписьНабора[КлючИЗначение.Ключ] = ПараметрыОбновления.Прочее[КлючИЗначение.Ключ];
					ЗаписатьНабор = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НовыйСтатус",   НовыйСтатус);
	ВозвращаемоеЗначение.Вставить("СтарыйСтатус",  СтарыйСтатус);
	ВозвращаемоеЗначение.Вставить("ЗаписатьНабор", ЗаписатьНабор);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Изменяет и возвращает статус документа ЕГАИС.
//
// Параметры:
//  Документ - ДокументСсылка - Документ ЕГАИС.
//  ПараметрыОбновления - Структура со свойствами:
//   * НовыйСтатус - ПеречисленияСсылка.СтатусыИнформированияЕГАИС - Новый статус.
//   * ДальнейшееДействие1 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 1.
//   * ДальнейшееДействие2 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 2.
//   * ДальнейшееДействие3 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 3.
//   * Прочее - Структура - Структура со свойствами:
//      ** КвитанцияПолученЕГАИС - Булево - Необходимость получения квитанции Получен в ЕГАИС.
//      ** КвитанцияПроведенЕГАИС - Булево - Необходимость получения квитанции Проведен в ЕГАИС.
//      ** УведомлениеОРегистрацииДвижения - Булево - Необходимость уведомления о регистрации движений.
//  ОбновлятьДвижения - Булево - Признак принудительного обновления движений.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыИнформированияЕГАИС - новый статус документа ЕГАИС.
//
Функция ОбновитьСтатус(Документ, ПараметрыОбновления, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ПараметрыОбновления.НовыйСтатус = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка изменения статуса'");
	КонецЕсли;
	
	ЭтоНовый = Ложь;
	НаборЗаписей = НаборЗаписей(Документ, ЭтоНовый);
	ЗаписатьНабор = НаборЗаписей.Модифицированность();
	
	Результат = ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления, ЭтоНовый);
	Если Результат.ЗаписатьНабор <> Неопределено Тогда
		ЗаписатьНабор = Результат.ЗаписатьНабор;
	КонецЕсли;
	НовыйСтатус  = Результат.НовыйСтатус;
	СтарыйСтатус = Результат.СтарыйСтатус;
	
	Если ЗаписатьНабор Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		НаборЗаписей.Записать();
		
		Если СтарыйСтатус <> НовыйСтатус Тогда
			
			ПолноеИмя = Документ.Метаданные().ПолноеИмя();
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
			
			ПараметрыОбновленияСтатуса = ИнтеграцияЕГАИС.ДополнитьПараметрыОбновленияСтатуса(ДополнительныеПараметры);
			
			МенеджерОбъекта.ПриИзмененииСтатусаДокумента(
				Документ,
				СтарыйСтатус, НовыйСтатус,
				ПараметрыОбновленияСтатуса);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НовыйСтатус;
	
КонецФункции

Функция ТекущееСостояние(Документ) Экспорт
	
	ВозвращаемоеЗначение = ЗначенияПоУмолчанию(Документ);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыДокументовЕГАИС.Документ,
	|	СтатусыДокументовЕГАИС.Статус,
	|	СтатусыДокументовЕГАИС.КвитанцияПолученЕГАИС,
	|	СтатусыДокументовЕГАИС.КвитанцияПроведенЕГАИС,
	|	СтатусыДокументовЕГАИС.УведомлениеОРегистрацииДвижения,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие1,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие2,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие3
	|ИЗ
	|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Документ = &Документ");
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РассчитатьСтатусыПриПолученииКвитанции(ДокументСсылка, Имя, СтатусОбработки, Статусы, ВыполнитьРасчетТекущегоСостояния = Истина) Экспорт
	
	Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Если Имя <> "КвитанцияПроведенЕГАИС" Тогда
			
			Для Каждого Действие Из Статусы.ОшибкаДействия Цикл
				ДальнейшиеДействия.Добавить(Действие);
			КонецЦикла;
			
			Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Ошибка, ДальнейшиеДействия, Истина);
			
		Иначе
			
			Статус = Статусы.ОшибкаПроведения;
			Если Статус = Неопределено Тогда
				Статус = Статусы.Ошибка;
				Для Каждого Действие Из Статусы.ОшибкаДействия Цикл
					ДальнейшиеДействия.Добавить(Действие);
				КонецЦикла;
			КонецЕсли;
			
			Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статус, ДальнейшиеДействия, Истина);
			
		КонецЕсли;
		
	ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументОтменен
		Или СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументРаспроведен Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Для Каждого Действие Из Статусы.ОтменаПроведенияДействия Цикл
			ДальнейшиеДействия.Добавить(Действие);
		КонецЦикла;
		
		Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.ОтменаПроведения, ДальнейшиеДействия, Истина);
		
	КонецЕсли;
	
	Если ВыполнитьРасчетТекущегоСостояния <> Ложь Тогда
		
		ВыполнитьРасчетТекущегоСостоянияКэш = Истина;
		
		Если ВыполнитьРасчетТекущегоСостояния = Истина Тогда
			ТекущееСостояние = РегистрыСведений.СтатусыДокументовЕГАИС.ТекущееСостояние(ДокументСсылка);
		Иначе
			ТекущееСостояние = ВыполнитьРасчетТекущегоСостояния;
		КонецЕсли;
		
		Прочее = Новый Структура(Имя, Истина);
		ЗаполнитьЗначенияСвойств(ТекущееСостояние, Прочее);
		Обрабатывается = Не ((ТекущееСостояние.КвитанцияПолученЕГАИС           Или Не Статусы.КвитанцияПолученЕГАИС Или (Не ТекущееСостояние.КвитанцияПолученЕГАИС И ТекущееСостояние.КвитанцияПроведенЕГАИС))
		                   И (ТекущееСостояние.КвитанцияПроведенЕГАИС          Или Не Статусы.КвитанцияПроведенЕГАИС)
		                   И (ТекущееСостояние.УведомлениеОРегистрацииДвижения Или Не Статусы.УведомлениеОРегистрацииДвижения));
		
	Иначе
		ВыполнитьРасчетТекущегоСостоянияКэш = Ложь;
	КонецЕсли;
	
	Если (ВыполнитьРасчетТекущегоСостоянияКэш И Не Обрабатывается) Или Не ВыполнитьРасчетТекущегоСостоянияКэш Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Для Каждого Действие Из Статусы.ПринятДействия Цикл
			ДальнейшиеДействия.Добавить(Действие);
		КонецЦикла;
		
		Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Принят, ДальнейшиеДействия, Истина);
		
	Иначе
		
		ПолноеИмя = ДокументСсылка.Метаданные().ПолноеИмя();
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		
		ДальнейшиеДействия = Новый Массив;
		
		СтатусыОшибок = МенеджерОбъекта.СтатусыОшибок();
		Если СтатусыОшибок.Найти(ТекущееСостояние.Статус) <> Неопределено Тогда;
			
			ДальнейшиеДействия.Добавить(ТекущееСостояние.ДальнейшееДействие1);
			ДальнейшиеДействия.Добавить(ТекущееСостояние.ДальнейшееДействие2);
			ДальнейшиеДействия.Добавить(ТекущееСостояние.ДальнейшееДействие3);
			
			Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(ТекущееСостояние.Статус, ДальнейшиеДействия, Ложь, ТекущееСостояние);
			
		Иначе
			
			Если Статусы.КвитанцияПолученЕГАИС И Не ТекущееСостояние.КвитанцияПолученЕГАИС Тогда
				ДальнейшиеДействия.Добавить(
					Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОжидайтеПолучениеКвитанцииПолученЕГАИС);
			КонецЕсли;
			Если Статусы.КвитанцияПроведенЕГАИС И Не ТекущееСостояние.КвитанцияПроведенЕГАИС Тогда
				ДальнейшиеДействия.Добавить(
					Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОжидайтеПолучениеКвитанцииПроведенЕГАИС);
			КонецЕсли;
			Если Статусы.УведомлениеОРегистрацииДвижения И Не ТекущееСостояние.УведомлениеОРегистрацииДвижения Тогда
				ДальнейшиеДействия.Добавить(
					Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОжидайтеПолучениеУведомленияОРегистрацииДвижения);
			КонецЕсли;
			
			Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Обрабатывается, ДальнейшиеДействия, Ложь, ТекущееСостояние);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция РассчитатьСтатусы(ДокументСсылка, СтатусОбработки, Статусы) Экспорт
	
	Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Для Каждого Действие Из Статусы.ОшибкаДействия Цикл
			ДальнейшиеДействия.Добавить(Действие);
		КонецЦикла;
		
		Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Ошибка, ДальнейшиеДействия, Истина);
		
	КонецЕсли;
	
	ДальнейшиеДействия = Новый Массив;
	Для Каждого Действие Из Статусы.ПринятДействия Цикл
		ДальнейшиеДействия.Добавить(Действие);
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Принят, ДальнейшиеДействия, Истина);
	
КонецФункции

Функция РассчитатьСтатусыКПередаче(ДокументСсылка, НовыйСтатус) Экспорт
	
	ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхЕГАИС");
	
	ДальнейшиеДействия = Новый Массив;
	Если ИспользоватьАвтоматическийОбмен Тогда
		ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОжидайтеПередачуДанныхРегламентнымЗаданием);
	Иначе
		ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ВыполнитеОбмен);
	КонецЕсли;
	
	ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеПередачуДанных);
	
	Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(НовыйСтатус, ДальнейшиеДействия, Истина);
	
КонецФункции

Функция ДальнейшиеДействия(Статусы) Экспорт
	
	ВозвращаемоеЗначение = Новый Массив;
	
	Если Статусы.ДальнейшееДействие1 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие1);
	КонецЕсли;
	Если Статусы.ДальнейшееДействие2 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие2);
	КонецЕсли;
	Если Статусы.ДальнейшееДействие3 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие3);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции

Функция НаборЗаписей(Документ, ЭтоНовый)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыДокументовЕГАИС.Документ КАК Документ
	|ИЗ
	|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Документ = &Документ");
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НаборЗаписей = Неопределено;
	Если Выборка.Следующий() Тогда
		
		НаборЗаписей = РегистрыСведений.СтатусыДокументовЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ, Истина);
		НаборЗаписей.Прочитать();
		
		ЭтоНовый = Ложь;
		
	Иначе
		
		НаборЗаписей = РегистрыСведений.СтатусыДокументовЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Документ, Истина);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗначенияПоУмолчанию(Документ));
		
		ЭтоНовый = Истина;
		
	КонецЕсли;
	
	Возврат НаборЗаписей;
	
КонецФункции

Функция СтруктураСтатусы() Экспорт
	
	Статусы = Новый Структура;
	Статусы.Вставить("Принят");
	Статусы.Вставить("Обрабатывается");
	Статусы.Вставить("Ошибка");
	Статусы.Вставить("ОшибкаПроведения");
	Статусы.Вставить("ОтменаПроведения");
	
	Статусы.Вставить("ОшибкаДействия",           Новый Массив);
	Статусы.Вставить("ПринятДействия",           Новый Массив);
	Статусы.Вставить("ОтменаПроведенияДействия", Новый Массив);
	
	Статусы.Вставить("КвитанцияПолученЕГАИС",           Истина);
	Статусы.Вставить("КвитанцияПроведенЕГАИС",          Истина);
	Статусы.Вставить("УведомлениеОРегистрацииДвижения", Истина);
	
	Возврат Статусы;
	
КонецФункции

Функция ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статус, ДальнейшиеДействия, ОчиститьПрочее = Истина, Прочее = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НовыйСтатус",         Статус);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие1", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие2", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие3", Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется);
	ВозвращаемоеЗначение.Вставить("Прочее");
	
	ВозвращаемоеЗначение.Прочее = Новый Структура;
	ВозвращаемоеЗначение.Прочее.Вставить("КвитанцияПолученЕГАИС",           Ложь);
	ВозвращаемоеЗначение.Прочее.Вставить("КвитанцияПроведенЕГАИС",          Ложь);
	ВозвращаемоеЗначение.Прочее.Вставить("УведомлениеОРегистрацииДвижения", Ложь);
	
	Если Не ОчиститьПрочее Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение.Прочее, Прочее);
	КонецЕсли;
	
	Индекс = 1;
	Для Каждого ДальнейшееДействие Из ДальнейшиеДействия Цикл
		ВозвращаемоеЗначение["ДальнейшееДействие" + Индекс] = ДальнейшееДействие;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СтатусыДокументовЕГАИС";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ОстаткиЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	СтатусыДокументовЕГАИС.Статус ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Документ
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.СтатусПроверкиИПодбора = ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиИПодбораИС.ПустаяСсылка)
	|	И СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС)
	|");
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Таблица, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрСведений.УдалитьПротоколОбменаЕГАИС")
		ИЛИ ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Справочник.ЕГАИСПрисоединенныеФайлы") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.СтатусыДокументовЕГАИС",
		МенеджерВременныхТаблиц, ДополнительныеПараметры);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	ДанныеДляОбработки.Документ КАК Документ
	|ПОМЕСТИТЬ втДокументыДляОбработки
	|ИЗ
	|	&ВТДанныеДляОбработки КАК ДанныеДляОбработки
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДляОбработки.Документ.Дата УБЫВ
	|;
	|
	|/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.ВидДокумента           КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктПостановкиНаБалансЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.АктПостановкиНаБалансЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.ВидДокумента           КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктСписанияЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.АктСписанияЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ВозвратИзРегистра2) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратИзРегистра2ЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ВозвратИзРегистра2ЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.ВидДокумента           КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОстаткиЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ОстаткиЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ПередачаВРегистр2) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаВРегистр2ЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ТТН) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ТТН) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНИсходящаяЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЧекККМ) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекЕГАИС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ЧекЕГАИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ЧекККМ) КАК Операция,
	|	ДанныеДокумента.УдалитьСтатусОбработки КАК УдалитьСтатусОбработки
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекЕГАИСВозврат КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ЧекЕГАИСВозврат
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВТДанныеДляОбработки", Результат.ИмяВременнойТаблицы);
	
	ТаблицыДляЧтения = Новый Массив;
	ТаблицыДляЧтения.Добавить("Документ.АктПостановкиНаБалансЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.АктСписанияЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ВозвратИзРегистра2ЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ОстаткиЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ПередачаВРегистр2ЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ТТНВходящаяЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ТТНИсходящаяЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ЧекЕГАИС");
	ТаблицыДляЧтения.Добавить("Документ.ЧекЕГАИСВозврат");
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		ТаблицыДляЧтения,
		МенеджерВременныхТаблиц);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументСсылка = Выборка.Документ;
		
		ОтметитьВыполнениеОбработки = Выборка.ОтметитьВыполнениеОбработки;
		
		НачатьТранзакцию();
		
		Попытка
			
			Если ОтметитьВыполнениеОбработки Тогда
				
				НаборЗаписей = РегистрыСведений.СтатусыДокументовЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(ДокументСсылка);
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтатусыДокументовЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Документ", ДокументСсылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(Выборка.Документ.Метаданные().ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ДокументСсылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			ИменаРеквизитов = "ВерсияДанных";
			Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
				ИменаРеквизитов = ИменаРеквизитов + ",СтатусПроверкиИПодбора";
			КонецЕсли;
			
			ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, ИменаРеквизитов);
			Если ЗначенияРеквизитов.ВерсияДанных <> Выборка.ВерсияДанных Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ТолькоПересчитатьСтатус = Ложь;
			
			Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
				Если ЗначенияРеквизитов.СтатусПроверкиИПодбора.Пустая() Тогда
					СтруктураОтбора = Новый Структура("Документ", ДокументСсылка);
					ЗначенияСтатуса = РегистрыСведений.СтатусыДокументовЕГАИС.Получить(СтруктураОтбора);
					
					Если ЗначенияСтатуса.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС Тогда
						ТолькоПересчитатьСтатус = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ТолькоПересчитатьСтатус Тогда
				НаборЗаписей = ИнтеграцияЕГАИС.РассчитатьСтатус(ДокументСсылка,, Истина);
			Иначе
				НаборЗаписей = РассчитатьНаборЗаписей(Выборка);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать статус документа ""%ИмяДокумента%""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяДокумента%", Выборка.Документ.Метаданные().ПолноеИмя());
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Выборка.Документ.Метаданные(),
			                         Выборка.Документ,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "РегистрСведений.СтатусыДокументовЕГАИС");
	
КонецПроцедуры

Функция РассчитатьНаборЗаписей(Выборка)
	
	КвитанцияПолученЕГАИС  = Перечисления.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС;
	КвитанцияПроведенЕГАИС = Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС;
	ПереданоВУТМ           = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ПереданоВУТМ;
	ОбрабатываетсяЕГАИС    = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ОбрабатываетсяЕГАИС;
	ДокументПроведен       = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументПроведен;
	ДокументРаспроведен    = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументРаспроведен;
	Ошибка                 = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка;
	
	ПолноеИмя = Выборка.Документ.Метаданные().ПолноеИмя();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	
	ЕстьЗаписиВПротоколеОбмена = Неопределено;
	НаборЗаписей = ИнтеграцияЕГАИС.РассчитатьСтатус(Выборка.Документ, ЕстьЗаписиВПротоколеОбмена, Истина);
	ЗаписьНабора = НаборЗаписей[0];
	
	Если Не ЕстьЗаписиВПротоколеОбмена Тогда
		
		Если ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПроведенЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Выборка.Операция,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				Если Выборка.Операция = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1 Тогда
					ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
						ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
						Перечисления.ВидыДокументовЕГАИС.УведомлениеОРегистрацииДвиженияАктаПостановкиНаБаланс);
					РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				КонецЕсли;
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОшибка Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Отменен Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаПостановкиНаБаланс,
					ДокументРаспроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиАктаСписанияЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПроведенЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Выборка.Операция,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОшибка Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Отменен Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияАктаСписания,
					ДокументРаспроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиВозвратаИзРегистра2ЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПроведенЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Выборка.Операция,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиПередачиВРегистр2ЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПроведенЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Выборка.Операция,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ОстаткиЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиОстатковЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПолученыОстатки Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				Если Выборка.Операция = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1 Тогда
					ОбрабатываемаяОперация = Перечисления.ВидыДокументовЕГАИС.ОтветНаЗапросОстатковВРегистре1;
				ИначеЕсли Выборка.Операция = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре2 Тогда
					ОбрабатываемаяОперация = Перечисления.ВидыДокументовЕГАИС.ОтветНаЗапросОстатковВРегистре2;
				Иначе
					ОбрабатываемаяОперация = Перечисления.ВидыДокументовЕГАИС.ОтветНаЗапросОстатковВРегистре1;
				КонецЕсли;
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					ОбрабатываемаяОперация);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ЧекЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыИнформированияЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ЧекЕГАИСВозврат") Тогда
			
			Статусы = Перечисления.СтатусыИнформированияЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОшибкаПередачи Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаОшибка Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Выборка.Операция, ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Выборка.Операция,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийПринят Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийПодтверждениеПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийПодтверждениеОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийОтказПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийОтказОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийОтказОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПринят Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПодтверждениеПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПодтверждениеОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПодтверждениеОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНПодтверждение,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОтказПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОтказОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОтказОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияЗапросаНаОтменуПроведенияТТНОтказ,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Подтвержден Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПодтвержденСРасхождениями Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийПодтверждение,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОтмененКлиентом Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Черновик
				Или Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
			
			Статусы = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС;
			
			Если Выборка.УдалитьСтатусОбработки = Статусы.ПринятИзЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктПодтвержденияПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктПодтвержденияОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктРасхожденийОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаПереданВУТМ Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаОбрабатываетсяЕГАИС Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.АктОтказаОшибка Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияПереданВУТМ Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ЗапросНаОтменуПроведенияОшибка Тогда
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.ЗапросНаОтменуПроведенияТТН,
					Ошибка);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Подтвержден Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНПодтверждение,
				ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПодтвержденСРасхождениями Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.Отменен Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПроведенЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНОтказ,
					ДокументПроведен);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ОтмененПоставщиком Тогда
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.ТТН);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = МенеджерОбъекта.СтатусПослеПередачиДанных(
					Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ПереданоВУТМ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					КвитанцияПолученЕГАИС,
					Истина, Перечисления.ВидыДокументовЕГАИС.АктТТНРасхождения,
					ОбрабатываетсяЕГАИС);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
				ПараметрыОбновления = ИнтеграцияЕГАИС.ПараметрыОбновленияПослеПолученияДанных(
					ЗаписьНабора, МенеджерОбъекта, Выборка.Документ,
					Перечисления.ВидыДокументовЕГАИС.КвитанцияАктаРасхожденийОтказ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли Выборка.УдалитьСтатусОбработки = Статусы.ПустаяСсылка() Тогда
				
				ПараметрыОбновления = ПараметрыОбновленияДляЗначенийПоУмолчанию(Выборка.Документ);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			ИначеЕсли ЭтоНеиспользуемыйСтатусДокумента(Выборка.УдалитьСтатусОбработки) Тогда
				
				ДальнейшиеДействия = Новый Массив;
				ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
					Выборка.УдалитьСтатусОбработки, ДальнейшиеДействия);
				РегистрыСведений.СтатусыДокументовЕГАИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
				
			Иначе
				
				ВызватьИсключение ИнтеграцияЕГАИС.ТекстИсключенияОбработкиСтатуса(Выборка.Документ, Выборка.Операция);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НаборЗаписей;
	
КонецФункции

Функция ПараметрыОбновленияДляЗначенийПоУмолчанию(ДокументСсылка)
	
	ДанныеЗаписи = РегистрыСведений.СтатусыДокументовЕГАИС.ЗначенияПоУмолчанию(ДокументСсылка);
	
	ДальнейшиеДействия = Новый Массив;
	ДальнейшиеДействия.Добавить(ДанныеЗаписи.ДальнейшееДействие1);
	ДальнейшиеДействия.Добавить(ДанныеЗаписи.ДальнейшееДействие2);
	ДальнейшиеДействия.Добавить(ДанныеЗаписи.ДальнейшееДействие3);
	
	ПараметрыОбновления = ВозвращаемоеЗначениеДальнейшиеДействияСтатус(
		ДанныеЗаписи.Статус, ДальнейшиеДействия, Ложь, ДанныеЗаписи);
	
	Возврат ПараметрыОбновления;
	
КонецФункции

Функция ЭтоНеиспользуемыйСтатусДокумента(СтатусОбработки)
	
	Результат = Ложь;
	ИнтеграцияЕГАИСПереопределяемый.ПриОпределенииИспользуемыхСтатусовДокумента(Результат, СтатусОбработки);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли