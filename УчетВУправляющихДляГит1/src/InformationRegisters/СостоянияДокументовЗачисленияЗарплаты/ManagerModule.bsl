#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьСостоянияДокументовЗачисленияЗарплаты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СостоянияДокументовЗачисленияЗарплаты.ДокументЗачисленияЗарплаты
	|ИЗ
	|	РегистрСведений.СостоянияДокументовЗачисленияЗарплаты КАК СостоянияДокументовЗачисленияЗарплаты";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Обновление уже выполнялось
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ПодтверждениеЗачисленияЗарплаты.Ссылка КАК Ссылка,
	|	ПодтверждениеЗачисленияЗарплаты.ПервичныйДокумент КАК Ведомость
	|ПОМЕСТИТЬ ВТПодтверждениеЗачисленияЗарплаты
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеЗачисленияЗарплаты КАК ПодтверждениеЗачисленияЗарплаты
	|		ПО ВедомостьНаВыплатуЗарплатыВБанк.Ссылка = ПодтверждениеЗачисленияЗарплаты.ПервичныйДокумент
	|ГДЕ
	|	ПодтверждениеЗачисленияЗарплаты.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтвержденияЗачисленияЗарплаты.Ведомость КАК Ведомость,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПодтверждениеЗачисленияЗарплатыСотрудники.РезультатЗачисленияЗарплаты = ЗНАЧЕНИЕ(Перечисление.РезультатыЗачисленияЗарплаты.Зачислено)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СуществуетРезультатЗачисленияЗарплатыЗачислено,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПодтверждениеЗачисленияЗарплатыСотрудники.РезультатЗачисленияЗарплаты <> ЗНАЧЕНИЕ(Перечисление.РезультатыЗачисленияЗарплаты.Зачислено)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СуществуетРезультатЗачисленияЗарплатыНеЗачислено
	|ПОМЕСТИТЬ ВТРезультатыЗачисленияЗарплаты
	|ИЗ
	|	ВТПодтверждениеЗачисленияЗарплаты КАК ПодтвержденияЗачисленияЗарплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеЗачисленияЗарплаты.Сотрудники КАК ПодтверждениеЗачисленияЗарплатыСотрудники
	|		ПО ПодтвержденияЗачисленияЗарплаты.Ссылка = ПодтверждениеЗачисленияЗарплатыСотрудники.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтвержденияЗачисленияЗарплаты.Ведомость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВедомостьНаВыплатуЗарплатыВБанк.Ссылка КАК Ведомость,
	|	ВЫБОР
	|		КОГДА НЕ ВедомостьНаВыплатуЗарплатыВБанк.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ПустаяСсылка)
	|		КОГДА РезультатыЗачисленияЗарплаты.Ведомость ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА РезультатыЗачисленияЗарплаты.СуществуетРезультатЗачисленияЗарплатыЗачислено
	|							И РезультатыЗачисленияЗарплаты.СуществуетРезультатЗачисленияЗарплатыНеЗачислено
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ЗачисленоСОшибками)
	|					КОГДА РезультатыЗачисленияЗарплаты.СуществуетРезультатЗачисленияЗарплатыНеЗачислено
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.НеЗачислено)
	|					КОГДА РезультатыЗачисленияЗарплаты.СуществуетРезультатЗачисленияЗарплатыЗачислено
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ЗачисленоПолностью)
	|				КОНЕЦ
	|		КОГДА ВедомостьНаВыплатуЗарплатыВБанкПрисоединенныеФайлы.Ссылка ЕСТЬ НЕ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ОжидаетПодтверждения)
	|		КОГДА ВедомостьНаВыплатуЗарплатыВБанк.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ГотовКВыгрузке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостояниеЗачисленияЗарплаты.ПустаяСсылка)
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВедомостьНаВыплатуЗарплатыВБанкПрисоединенныеФайлы КАК ВедомостьНаВыплатуЗарплатыВБанкПрисоединенныеФайлы
	|		ПО ВедомостьНаВыплатуЗарплатыВБанк.Ссылка = ВедомостьНаВыплатуЗарплатыВБанкПрисоединенныеФайлы.ВладелецФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезультатыЗачисленияЗарплаты КАК РезультатыЗачисленияЗарплаты
	|		ПО ВедомостьНаВыплатуЗарплатыВБанк.Ссылка = РезультатыЗачисленияЗарплаты.Ведомость
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВБанк.Проведен";
	
	Набор = РегистрыСведений.СостоянияДокументовЗачисленияЗарплаты.СоздатьНаборЗаписей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовоеСостояниеДокумента = Набор.Добавить();
		НовоеСостояниеДокумента.ДокументЗачисленияЗарплаты = Выборка.Ведомость;
		НовоеСостояниеДокумента.Состояние = Выборка.Состояние;
		
	КонецЦикла;
	
	Набор.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьОрганизациюВСостоянииДокументовЗачисленияЗарплаты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СостоянияДокументовЗачисленияЗарплаты.Организация
	|ИЗ
	|	РегистрСведений.СостоянияДокументовЗачисленияЗарплаты КАК СостоянияДокументовЗачисленияЗарплаты
	|ГДЕ
	|	СостоянияДокументовЗачисленияЗарплаты.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Обновление уже выполнялось
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СостоянияДокументовЗачисленияЗарплаты.ДокументЗачисленияЗарплаты,
	|	СостоянияДокументовЗачисленияЗарплаты.Состояние,
	|	СостоянияДокументовЗачисленияЗарплаты.Год,
	|	СостоянияДокументовЗачисленияЗарплаты.НомерРеестра,
	|	ВедомостьНаВыплатуЗарплатыВБанк.Организация
	|ИЗ
	|	РегистрСведений.СостоянияДокументовЗачисленияЗарплаты КАК СостоянияДокументовЗачисленияЗарплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	|		ПО СостоянияДокументовЗачисленияЗарплаты.ДокументЗачисленияЗарплаты = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка";
	
	МетаданныеПлатежногоДокумента = ОбменСБанкамиПоЗарплатнымПроектам.МетаданныеПлатежногоДокументаПеречисленияЗарплаты();
	Если МетаданныеПлатежногоДокумента <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МетаданныеПлатежногоДокумента.ПолноеИмя() + " КАК ДокументыЗачисленияЗарплаты
		|		ПО СостоянияДокументовЗачисленияЗарплаты.ДокументЗачисленияЗарплаты = ДокументыЗачисленияЗарплаты.Ссылка";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВедомостьНаВыплатуЗарплатыВБанк.Организация", "ЕСТЬNULL(ВедомостьНаВыплатуЗарплатыВБанк.Организация, ДокументыЗачисленияЗарплаты.Организация) КАК Организация");
	КонецЕсли;
	
	Набор = РегистрыСведений.СостоянияДокументовЗачисленияЗарплаты.СоздатьНаборЗаписей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовоеСостояниеДокумента = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеСостояниеДокумента, Выборка);
		
	КонецЦикла;
	
	Набор.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
	Набор.ОбменДанными.Загрузка = Истина;
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли