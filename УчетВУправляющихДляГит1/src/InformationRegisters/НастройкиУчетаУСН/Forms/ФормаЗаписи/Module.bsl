
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастройкиУчетаУСНФормы.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Если Параметры.Ключ.Пустой() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиСистемыНалогообложения"
			И Параметр.Организация = НастройкиУчетаУСН.Организация Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,
			НастройкиУчетаУСНФормыВызовСервера.НастройкиСистемыНалогообложения(
			НастройкиУчетаУСН.Организация, НастройкиУчетаУСН.Период));
		
		НастройкиУчетаУСНФормыКлиентСервер.УправлениеФормой(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
		
	ИначеЕсли ИмяСобытия = "ИзменениеПатента" Тогда
		
		Если НастройкиУчетаУСН.Организация = Параметр.Владелец Тогда
			СписокПатентов = НастройкиУчетаУСНФормыВызовСервера.СписокПатентов(НастройкиУчетаУСН.Организация, НастройкиУчетаУСН.Период);
			НастройкиУчетаУСНФормыКлиентСервер.УправлениеФормой(ЭтотОбъект);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НастройкиУчетаУСНФормы.ПроверитьЗаполнениеНаСервере(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РезультатВыполнения = КалендарьБухгалтера.ЗапуститьЗаполнениеВФоне(УникальныйИдентификатор, НастройкиУчетаУСН.Организация);
	ПараметрыЗаписи.Вставить("РезультатВыполненияЗаданияКалендаряБухгалтера", РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("РезультатВыполненияЗаданияКалендаряБухгалтера") Тогда
		КалендарьБухгалтераКлиент.ОжидатьЗавершениеЗаполненияВФоне(ПараметрыЗаписи.РезультатВыполненияЗаданияКалендаряБухгалтера);
	КонецЕсли;
	
	Оповестить("ИзменениеУчетнойПолитики", НастройкиУчетаУСН.Организация);
	ОповеститьОбИзменении(Тип("СправочникСсылка.ВидыНалоговИПлатежейВБюджет"));
	
	ПараметрыОповещения = Новый Структура("Организация, Период", НастройкиУчетаУСН.Организация, НастройкиУчетаУСН.Период);
	Оповестить("Запись_НастройкиУчетаУСН", ПараметрыОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьИзменения();
	ОповеститьОбИзмененииНастроек();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	
	Организация = НастройкиУчетаУСН.Организация;
	Отбор = Новый Структура("Организация", Организация);
	СтруктураПараметров = Новый Структура("Отбор, ВедущийОбъект", Отбор, Организация);
	ОткрытьФорму("РегистрСведений.НастройкиУчетаУСН.ФормаСписка", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзмененияИстории(Команда)
	
	Элементы.СтраницыИстория.ТекущаяСтраница = Элементы.СтраницаПериоды;
	ПеречитатьНастройкиУчетаУСН();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ОрганизацияПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НастройкиУчетаУСНФормыКлиент.ПериодНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	СписокПатентов = НастройкиУчетаУСНФормыВызовСервера.СписокПатентов(НастройкиУчетаУСН.Организация, НастройкиУчетаУСН.Период);
	НастройкиУчетаУСНФормыКлиент.ПериодПриИзменении(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНалогаПриИзменении(Элемент)
	
	ПоказатьСтраницуПримененияИзменений();
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНалогаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если НЕ ЭтоИнтеграцияСБанком Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Модифицированность   = Ложь;
	ПоказатьСтраницуПримененияИзменений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОтраженияАвансаПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ПорядокОтраженияАвансаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОтраженияАвансаУСНОчистка(Элемент, СтандартнаяОбработка)
	
	НастройкиУчетаУСНФормыКлиент.ПорядокОтраженияАвансаУСНОчистка(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеКаникулыПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.НалоговыеКаникулыПриИзменении(ЭтотОбъект);
	ПоказатьСтраницуПримененияИзменений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередачаВПроизводствоПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ПередачаВПроизводствоПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшатьНаНЗППриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.УменьшатьНаНЗППриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.РеализацияПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеДоходаПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ПолучениеДоходаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнаниеРасходаПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ПризнаниеРасходаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДопРасходыПризнаниеРасходаПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ДопРасходыПризнаниеРасходаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаможенныеПлатежиПризнаниеРасходаПриИзменении(Элемент)
	
	НастройкиУчетаУСНФормыКлиент.ТаможенныеПлатежиПризнаниеРасходаПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеОбОшибкеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "СистемаНалогообложения" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		НастройкиУчетаКлиент.ОбработкаНавигационнойСсылкиСистемаНалогообложения(
			ЭтотОбъект, НастройкиУчетаУСН.Организация, НастройкиУчетаУСН.Период);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", ЭтотОбъект);
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(ДатаИзменения));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(ДатаИзменения));
	ПараметрыВыбора.Вставить("ВидПериода",    ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал"));
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаКвартал", ПараметрыВыбора, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗавершениеВыбора(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		
		ДатаИзмененияСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоМесяца(РезультатВыбора.НачалоПериода),
			КонецМесяца(РезультатВыбора.НачалоПериода),
			Истина);
		
		ДатаИзменения = РезультатВыбора.НачалоПериода;
		НастройкиУчетаУСНФормыКлиентСервер.УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзмененияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПрименяетсяС = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(НастройкиУчетаУСН.Период),
		КонецМесяца(НастройкиУчетаУСН.Период),
		Истина);
		
	ДатаИзменения = НастройкиУчетаУСН.Период;
		
	ДатаИзмененияСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(НастройкиУчетаУСН.Период),
		КонецМесяца(НастройкиУчетаУСН.Период),
		Истина);
	
	ЭтоИнтеграцияСБанком = ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком();
	
	НастройкиУчета.ПодготовитьФормуНаСервере(ЭтотОбъект, НастройкиУчетаУСН);
	НастроитьФормуДляИнтеграцииСБанком();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Запись   = Форма.НастройкиУчетаУСН;
	
	Элементы.ПроверьтеНастройкиСистемыНалогообложения.Видимость = ЗначениеЗаполнено(Запись.Организация) И НЕ ПрименяетсяУСН(Запись.Организация, Запись.Период);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрименяетсяУСН(Знач Организация, Знач Период)
	
	Возврат УчетнаяПолитика.ПрименяетсяУСН(Организация, Период);
	
КонецФункции

#Область ИнтеграцияСБанком

&НаСервере
Процедура НастроитьФормуДляИнтеграцииСБанком()
	
	Элементы.СтраницыИстория.Видимость = ЭтоИнтеграцияСБанком;
	
	Если НЕ ЭтоИнтеграцияСБанком Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = Ложь;
	Элементы.ФормаЗаписать.Видимость         = Ложь;
	Элементы.ГруппаШапка.Видимость           = Ложь;
	ЭтотОбъект.АвтоЗаголовок                 = Ложь;
	Заголовок = НСтр("ru='Ставка налога УСН'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницуПримененияИзменений()
	
	Если НЕ ЭтоИнтеграцияСБанком Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь; // В режиме интеграции с банком не взводим Модифицированность.
	Элементы.СтраницыИстория.ТекущаяСтраница = Элементы.СтраницаИзменение;
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьНастройкиУчетаУСН()
	
		
	КлючДействующейНастройки = НастройкиУчета.КлючЗаписиДействующейУчетнойПолитики(
		"НастройкиУчетаУСН",
		НастройкиУчетаУСН.Организация,
		ТекущаяДатаСеанса());
		
	МенеджерЗаписи = РегистрыСведений.НастройкиУчетаУСН.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = КлючДействующейНастройки.Организация;
	МенеджерЗаписи.Период = КлючДействующейНастройки.Период;
	МенеджерЗаписи.Прочитать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "НастройкиУчетаУСН");
	
	ДатаИзменения = КлючДействующейНастройки.Период;
	ДатаИзмененияСтрокой = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоМесяца(ДатаИзменения),
		КонецМесяца(ДатаИзменения),
		Истина);
	
	НастройкиУчетаУСНФормыКлиентСервер.УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииНастроек()
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.НалогиОтчеты"));
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ВариантыПримененияТребованийЗаконодательства"));
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ЗадачиБухгалтера"));
	Оповестить("Обновить дерево отчетов", "Обновить дерево отчетов", ЭтотОбъект); // На языке регламентированной отчетности.
	Оповестить("ИзменениеУчетнойПолитики", НастройкиУчетаУСН.Организация);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения()
	
	Если ДатаИзменения = НастройкиУчетаУСН.Период Тогда
		МенеджерЗаписи = РеквизитФормыВЗначение("НастройкиУчетаУСН");
	Иначе
		МенеджерЗаписи = РегистрыСведений.НастройкиУчетаУСН.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, НастройкиУчетаУСН,,"Период");
		МенеджерЗаписи.Период = ДатаИзменения;
	КонецЕсли;
	
	МенеджерЗаписи.Записать(Истина);
	
	Модифицированность = Ложь;
	
	ПеречитатьНастройкиУчетаУСН();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти