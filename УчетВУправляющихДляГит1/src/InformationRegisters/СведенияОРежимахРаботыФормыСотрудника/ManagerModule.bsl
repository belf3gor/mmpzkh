#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНастройкиРежимов(Знач МассивРежимовРаботы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗначенияФункциональныхОпций = Новый Структура;
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьНачислениеЗарплаты", Константы.ИспользоватьНачислениеЗарплаты.Получить());
	ЗначенияФункциональныхОпций.Вставить("ИспользоватьКадровыйУчет", Константы.ИспользоватьКадровыйУчет.Получить());
	
	Набор = РегистрыСведений.СведенияОРежимахРаботыФормыСотрудника.СоздатьНаборЗаписей();
	Набор.Прочитать();
	
	УдаляемыеЗаписи = Новый Массив;
	
	Для каждого Запись Из Набор Цикл
		
		Если НЕ ЗначениеЗаполнено(Запись.РежимРаботы) Тогда
			УдаляемыеЗаписи.Добавить(Запись);
		КонецЕсли; 
		
		ИндексРежима = МассивРежимовРаботы.Найти(Запись.РежимРаботы);
		Если ИндексРежима <> Неопределено Тогда
			МассивРежимовРаботы.Удалить(ИндексРежима);
		КонецЕсли; 
		
		ЗаполнитьЗаписьРежимаРаботыФормы(Запись, ЗначенияФункциональныхОпций);
		
	КонецЦикла;
	
	Для каждого УдаляемаяЗапись Из УдаляемыеЗаписи Цикл
		Набор.Удалить(УдаляемаяЗапись);
	КонецЦикла;
	
	Если МассивРежимовРаботы.Количество() > 0 Тогда
		
		Для каждого РежимРаботы Из МассивРежимовРаботы Цикл
			
			Запись = Набор.Добавить();
			Запись.РежимРаботы = РежимРаботы;
			
			ЗаполнитьЗаписьРежимаРаботыФормы(Запись, ЗначенияФункциональныхОпций);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Набор.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьЗаписьРежимаРаботыФормы(Запись, ЗначенияФункциональныхОпций)
	
	Если Запись.РежимРаботы = Перечисления.РежимыРаботыФормыСотрудника.ФизическоеЛицо Тогда
		
		Запись.ИспользоватьНачислениеЗарплатыВФормеСотрудника = Ложь;
		Запись.ИспользоватьКадровыйУчетВФормеСотрудника = Ложь;
		Запись.ИспользоватьНачислениеПоТрудовымДоговорамВФормеСотрудника = Ложь;
		
	ИначеЕсли Запись.РежимРаботы = Перечисления.РежимыРаботыФормыСотрудника.Сотрудник Тогда
		
		Запись.ИспользоватьНачислениеЗарплатыВФормеСотрудника = Ложь;
		Запись.ИспользоватьКадровыйУчетВФормеСотрудника = Ложь;
		Запись.ИспользоватьНачислениеПоТрудовымДоговорамВФормеСотрудника = Ложь;
		
	ИначеЕсли Запись.РежимРаботы = Перечисления.РежимыРаботыФормыСотрудника.СотрудникОформленныйПоТрудовомуДоговору Тогда
		
		Запись.ИспользоватьНачислениеЗарплатыВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьНачислениеЗарплаты;
		Запись.ИспользоватьКадровыйУчетВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьКадровыйУчет;
		Запись.ИспользоватьНачислениеПоТрудовымДоговорамВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьНачислениеЗарплаты;
		
	ИначеЕсли Запись.РежимРаботы = Перечисления.РежимыРаботыФормыСотрудника.СотрудникОформленныйПоДоговоруГПХ Тогда
		
		Запись.ИспользоватьНачислениеЗарплатыВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьНачислениеЗарплаты;
		Запись.ИспользоватьКадровыйУчетВФормеСотрудника = Ложь;
		Запись.ИспользоватьНачислениеПоТрудовымДоговорамВФормеСотрудника = Ложь;
		
	ИначеЕсли Запись.РежимРаботы = Перечисления.РежимыРаботыФормыСотрудника.СотрудникОформленныйПоТрудовомуДоговоруИДоговоруГПХ Тогда
		
		Запись.ИспользоватьНачислениеЗарплатыВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьНачислениеЗарплаты;
		Запись.ИспользоватьКадровыйУчетВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьКадровыйУчет;
		Запись.ИспользоватьНачислениеПоТрудовымДоговорамВФормеСотрудника = ЗначенияФункциональныхОпций.ИспользоватьНачислениеЗарплаты;
		
	КонецЕсли; 
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли