#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает ключ действующей настройки на заданную дату
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация,
//                 для которой требуется получить настройки
//  Период      - Дата или Неопределено
// 
// Возвращаемые значения:
//  Неопределено         - когда не задана организация или нет записей в регистре
//  Ключ записи регистра - запись, соответствующая условию
//
Функция КлючЗаписиДействующейНастройки(Организация, Период = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ?(Период = Неопределено, ТекущаяДатаСеанса(), Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	НастройкиУчетаНалогаНаПрибыль.Период КАК Период
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаНалогаНаПрибыль";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗначенияКлюча = Новый Структура;
		ЗначенияКлюча.Вставить("Организация", Организация);
		ЗначенияКлюча.Вставить("Период", Выборка.Период);
		
		Возврат СоздатьКлючЗаписи(ЗначенияКлюча);
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

// Возвращает сведения о порядке уплаты авансовых платежей
//
// Параметры:
//   Организация - СправочникСсылка.Организации - организация, для которой необходимо получить данные.
//   Период      - Дата - период, на который необходимо получить данные.
// 
// Возвращаемые значения:
//  Неопределено                                             - когда нет записей в регистре
//  ПеречислениеСсылка.ПорядокУплатыАвансовПоНалогуНаПрибыль - значение ресурса ПорядокУплатыАвансов
//
Функция ПорядокУплатыАвансовДействующейНастройки(Организация, Период = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ?(Период = Неопределено, ТекущаяДатаСеанса(), Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиУчетаНалогаНаПрибыльСрезПоследних.ПорядокУплатыАвансов КАК ПорядокУплатыАвансов
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаНалогаНаПрибыльСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПорядокУплатыАвансовПоНалогуНаПрибыль = Выборка.ПорядокУплатыАвансов;
	Иначе
		ПорядокУплатыАвансовПоНалогуНаПрибыль = Перечисления.ПорядокУплатыАвансовПоНалогуНаПрибыль.Ежеквартально;
	КонецЕсли;
	
	Возврат ПорядокУплатыАвансовПоНалогуНаПрибыль;
	
КонецФункции

// Процедура устанавливает значения регистра по умолчанию
//
// Параметры:
//   Запись           - РегистрСведенийЗапись - запись регистра
//   ДанныеЗаполнения - Структура - где ключ - имя ресурса
//
Процедура УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Запись.Период) Тогда
		НастройкиУчета.УстановитьЗначениеПоУмолчанию(
			Запись,
			ДанныеЗаполнения,
			"Период",
			НачалоГода(ТекущаяДатаСеанса()));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		НастройкиУчета.УстановитьЗначениеПоУмолчанию(
			Запись,
			ДанныеЗаполнения,
			"Организация",
			БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	КонецЕсли;
	
	ЭтоФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Организация, "ЮридическоеФизическоеЛицо")
		= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
	Если ЭтоФизЛицо Тогда
			Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Возврат;
	КонецЕсли;
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"МетодНачисленияАмортизации",
		Перечисления.МетодыНачисленияАмортизации.Линейный);
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"СпособПогашенияСтоимостиСпецодежды",
		Перечисления.СпособыПогашенияСтоимостиНУ.ПриПередачеВЭксплуатацию);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"СтавкаФБ",
		ЗначениеПоУмолчаниюФедеральныйБюджет(Запись.Период));
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"СтавкаСубъектРФ",
		ЗначениеПоУмолчаниюРегиональныйБюджет(Запись.Период));
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПорядокУплатыАвансов",
		Перечисления.ПорядокУплатыАвансовПоНалогуНаПрибыль.Ежеквартально);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"БазаРаспределенияКосвенныхРасходовПоВидамДеятельности",
		Перечисления.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализации);
	
КонецПроцедуры

// Определяет ставку налога на прибыль, подлежащего зачислению в федеральный бюджет, указанную в п. 1 ст. 284 НК РФ
//
// Параметры:
//  Период - Дата - Дата, на которую выбирается значение по умолчанию
//
Функция ЗначениеПоУмолчаниюФедеральныйБюджет(Период) Экспорт
	
	Если ПрименяютсяВременныеСтавкиНалога(Период) Тогда
		Возврат 3;
	КонецЕсли;	
	
	Возврат 2;
	
КонецФункции

// Определяет ставку налога на прибыль, подлежащего зачислению в бюджеты субъектов Российской Федерации, указанную в п. 1 ст. 284 НК РФ
//
// Параметры:
//  Период - Дата - Дата, на которую выбирается значение по умолчанию
//
Функция ЗначениеПоУмолчаниюРегиональныйБюджет(Период) Экспорт
	
	Если ПрименяютсяВременныеСтавкиНалога(Период) Тогда
		Возврат 17;
	КонецЕсли;	
	
	Возврат 18;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Организация.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	| ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	| ЗначениеРазрешено(ЭтотСписок.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет, попадает ли указанный период в интервал,
// на который установлены особые ставки налога на прибыль (401-ФЗ)
Функция ПрименяютсяВременныеСтавкиНалога(Период)
	
	Возврат (НачалоГода(Период) >= '2017-01-01' 
		И НачалоГода(Период) <= '2020-01-01');
	
КонецФункции	

#КонецОбласти

#Область ОбработчикиОбновления

// Процедура - обработчик обновления
// Заполняет ставки налога на прибыль, введенные на период с 2017 по 2020 годы (401-ФЗ)
Процедура ЗаполнитьСтавкиНалогаНаПрибыльС2017По2020Годы(Параметры) Экспорт
								
	НачалоПериода 	= '2017-01-01';
	КонецПериода 	= КонецДня('2020-12-31');
		
	НачатьТранзакцию();
	
	// Заблокируем данные регистра сведений от чтения и записи
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиУчетаНалогаНаПрибыль");
		ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(НачалоПериода, КонецПериода));
		Блокировка.Заблокировать();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  		КонецПериода);
	
	// Выбираем настройки налога на прибыль с целью их дальнейшей перезаписи с измененными ставками налога
	// (1) Выбираем установленные настройки налога на прибыль за период с 2017 по 2020 годы
	// (2) Если на 2017 год настройка не устанавливалась,
	// то копируем настройки из действующих настроек на начало 2017 года
	// Настройки (1) поправляем, даже если организация более не является плательщиком налога
	// Добавлять настройки (2) имеет смысл только для организаций - плательщиков налога на прибыль
	
	// Поля регистра сведений добавляем в запрос через СхемаЗапроса ниже
	// Это необходимо для того, чтобы при добавлении новых ресурсов и реквизитов обработчик их не затер
	
	// Вторая таблица второго запроса выбирает записи в срез последних только в том случае,
	// если последняя запись по организации ранее 2017 года (см. условие "ГДЕ НастройкиСрезПоследних.Период < &НачалоПериода").
	// В этом случае первый запрос объединения заведомо не вернет запись за 2017 год (ее не будет в базе)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НастройкаНалогообложения.Организация КАК Организация
	|ПОМЕСТИТЬ ПлательщикиНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|			&НачалоПериода) КАК НастройкаНалогообложения
	|ГДЕ
	|	НастройкаНалогообложения.ПлательщикНалогаНаПрибыль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройки.Период КАК Период,
	|	Настройки.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК Настройки
	|ГДЕ
	|	Настройки.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НачалоПериода,
	|	НастройкиСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|			&НачалоПериода,
	|			Организация В
	|				(ВЫБРАТЬ
	|					ПлательщикиНалогаНаПрибыль.Организация
	|				ИЗ
	|					ПлательщикиНалогаНаПрибыль КАК ПлательщикиНалогаНаПрибыль)) КАК НастройкиСрезПоследних
	|ГДЕ
	|	НастройкиСрезПоследних.Период < &НачалоПериода";
		
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	// Заполняем поля 2-го запроса
	// Выбираем все ресурсы и реквизиты регистра сведений "НастройкиУчетаНалогаНаПрибыль"
	// Первые 2 поля (измерения регистра) уже указаны явно
	МассивПолейРегистра = Новый Массив;
	Для Каждого РесурсРегистра Из Метаданные.РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.Ресурсы Цикл
		МассивПолейРегистра.Добавить(РесурсРегистра.Имя);
	КонецЦикла;	
		
	Для Каждого РеквизитРегистра Из Метаданные.РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.Реквизиты Цикл
		МассивПолейРегистра.Добавить(РеквизитРегистра.Имя);
	КонецЦикла;	
	
	ЗапросПоРегистру 	= СхемаЗапроса.ПакетЗапросов[1];
	Подзапрос1			= ЗапросПоРегистру.Операторы[0];
	Подзапрос2			= ЗапросПоРегистру.Операторы[1];
	
	Для Каждого Поле Из МассивПолейРегистра Цикл
		
		// Добавляем поле в первый подзапрос
		ВыражениеЗапроса = Подзапрос1.ВыбираемыеПоля.Добавить("Настройки."+Поле);
		КолонкаЗапроса = ЗапросПоРегистру.Колонки.Найти(ВыражениеЗапроса);
		КолонкаЗапроса.Псевдоним = Поле;
		
		// Добавляем поле во второй подзапрос в ту же позицию,
		// чтобы совпали колонки объединяемых запросов
		ПозицияПоляЗапроса = Подзапрос1.ВыбираемыеПоля.Индекс(ВыражениеЗапроса);
		Подзапрос2.ВыбираемыеПоля.Добавить("НастройкиСрезПоследних."+Поле, ПозицияПоляЗапроса);
		
	КонецЦикла;	
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		ЗафиксироватьТранзакцию();
		Возврат;
	КонецЕсли;	
	
	ВыборкаНастройки = РезультатЗапроса.Выбрать();
	
	Набор = РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.СоздатьНаборЗаписей(); // Наборы записываются в цикле, каждый набор содержит одну запись
	
	Пока ВыборкаНастройки.Следующий() Цикл
		
		// Пропускаем "нестандартные" ставки
		Если ВыборкаНастройки.СтавкаФБ <> 2 ИЛИ ВыборкаНастройки.СтавкаСубъектРФ <> 18 Тогда
			Продолжить;
		КонецЕсли;
		
		Набор.Очистить();
		// В отборе набора записей всегда есть Период и Организация
		Набор.Отбор.Период.Установить(ВыборкаНастройки.Период);
		Набор.Отбор.Организация.Установить(ВыборкаНастройки.Организация);
				
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаНастройки);
		
		Запись.СтавкаФБ        = ЗначениеПоУмолчаниюФедеральныйБюджет(ВыборкаНастройки.Период);
		Запись.СтавкаСубъектРФ = ЗначениеПоУмолчаниюРегиональныйБюджет(ВыборкаНастройки.Период);
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор, Истина);
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(
		    	НСтр("ru = 'Процедуре ЗаполнитьСтавкиНалогаНаПрибыльС2017По2020Годы не удалось обновить настройки налога на прибыль по организации ""%1"" за %2 год:
		     	|%3'"),
			 	ВыборкаНастройки.Организация,
				Год(ВыборкаНастройки.Период),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли