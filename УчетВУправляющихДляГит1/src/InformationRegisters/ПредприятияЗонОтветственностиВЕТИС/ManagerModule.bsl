#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

//Используется для удаления предприятий из зон ответственности при:
// - удалении связи предприятия с хозяйствующим субъектом
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//
Процедура УдалитьПредприятияХозяйствующегоСубъектаИзЗонОтветственности(ХозяйствующийСубъект, Предприятие, Отказ) Экспорт
	
	Если Предприятие <> Неопределено Тогда
		Если ТипЗнч(Предприятие) = Тип("Массив") Тогда
			МассивПредприятий = Предприятие;
		Иначе
			МассивПредприятий = Новый Массив();
			МассивПредприятий.Добавить(Предприятие);
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПредприятияЗонОтветственности.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
	|	ПредприятияЗонОтветственности.ПользовательВЕТИС    КАК ПользовательВЕТИС,
	|	ПредприятияЗонОтветственности.Предприятие          КАК Предприятие
	|ИЗ
	|	РегистрСведений.ПредприятияЗонОтветственностиВЕТИС КАК ПредприятияЗонОтветственности
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ХозяйствующиеСубъектыПредприятия
	|		ПО ПредприятияЗонОтветственности.ХозяйствующийСубъект = ХозяйствующиеСубъектыПредприятия.Ссылка
	|		 И ПредприятияЗонОтветственности.Предприятие = ХозяйствующиеСубъектыПредприятия.Предприятие
	|ГДЕ
	|	ПредприятияЗонОтветственности.ХозяйствующийСубъект = &ХозяйствующийСубъект";
	
	Если Предприятие <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ПредприятияЗонОтветственности.Предприятие В (&Предприятия)";
		Запрос.УстановитьПараметр("Предприятия" , МассивПредприятий);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	И ХозяйствующиеСубъектыПредприятия.Предприятие ЕСТЬ NULL
	|";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор["ХозяйствующийСубъект"].Установить(Выборка.ХозяйствующийСубъект);
		НаборЗаписей.Отбор["ПользовательВЕТИС"].Установить(Выборка.ПользовательВЕТИС);
		НаборЗаписей.Отбор["Предприятие"].Установить(Выборка.Предприятие);
		
		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
			КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
			ЗаписьЖурналаРегистрации(НСтр("ru='Удаление предприятия из зоны ответственности.'", КодЯзыка),
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС,,
			                         ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//Используется для удаления предприятий из зон ответственности при:
// - изменении адреса зоны ответственности пользователя
// - изменении адреса предприятия
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//
Процедура УдалитьПредприятияИзЗонОтветственностиПоНаследованиюАдреса(ХозяйствующийСубъект, Предприятие, ПользовательВЕТИС, Отказ) Экспорт
	
	Если Предприятие <> Неопределено Тогда
		Если ТипЗнч(Предприятие) = Тип("Массив") Тогда
			МассивПредприятий = Предприятие;
		Иначе
			МассивПредприятий = Новый Массив();
			МассивПредприятий.Добавить(Предприятие);
		КонецЕсли;
	КонецЕсли;
	
	Если ПользовательВЕТИС <> Неопределено Тогда
		Если ТипЗнч(ПользовательВЕТИС) = Тип("Массив") Тогда
			МассивПользователей = ПользовательВЕТИС;
		Иначе
			МассивПользователей = Новый Массив();
			МассивПользователей.Добавить(ПользовательВЕТИС);
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("ПустойИдентификатор", "");
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПредприятияЗонОтветственности.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
	|	ПредприятияЗонОтветственности.ПользовательВЕТИС    КАК ПользовательВЕТИС,
	|	ПредприятияЗонОтветственности.Предприятие          КАК Предприятие
	|ИЗ
	|	РегистрСведений.ПредприятияЗонОтветственностиВЕТИС КАК ПредприятияЗонОтветственности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПредприятияВЕТИС КАК СправочникПредприятия
	|		ПО ПредприятияЗонОтветственности.Предприятие = СправочникПредприятия.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаЗонОтветственностиВЕТИС КАК АдресаЗонОтветственности
	|		ПО ПредприятияЗонОтветственности.ХозяйствующийСубъект = АдресаЗонОтветственности.ХозяйствующийСубъект
	|		 И ПредприятияЗонОтветственности.ПользовательВЕТИС = АдресаЗонОтветственности.ПользовательВЕТИС
	|		 И СправочникПредприятия.СтранаИдентификатор = АдресаЗонОтветственности.СтранаИдентификатор
	|		 И СправочникПредприятия.РегионИдентификатор = АдресаЗонОтветственности.РегионИдентификатор
	|		 И (СправочникПредприятия.РайонИдентификатор = АдресаЗонОтветственности.РайонИдентификатор
	|		    ИЛИ АдресаЗонОтветственности.РайонИдентификатор = &ПустойИдентификатор)
	|		 И (СправочникПредприятия.НаселенныйПунктИдентификатор = АдресаЗонОтветственности.НаселенныйПунктИдентификатор
	|		    ИЛИ АдресаЗонОтветственности.НаселенныйПунктИдентификатор = &ПустойИдентификатор)
	|ГДЕ
	|	ПредприятияЗонОтветственности.ХозяйствующийСубъект = &ХозяйствующийСубъект";
	
	Если Предприятие <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ПредприятияЗонОтветственности.Предприятие В (&Предприятия)";
		Запрос.УстановитьПараметр("Предприятия" , МассивПредприятий);
	КонецЕсли;
	
	Если ПользовательВЕТИС <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ПредприятияЗонОтветственности.ПользовательВЕТИС В (&ПользователиВЕТИС)";
		Запрос.УстановитьПараметр("ПользователиВЕТИС" , МассивПользователей);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	И ПредприятияЗонОтветственности.НаследуетсяИзАдреса
	|	И АдресаЗонОтветственности.ХозяйствующийСубъект ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ПредприятияЗонОтветственности.ХозяйствующийСубъект,
	|	ПредприятияЗонОтветственности.ПользовательВЕТИС,
	|	ПредприятияЗонОтветственности.Предприятие
	|";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор["ХозяйствующийСубъект"].Установить(Выборка.ХозяйствующийСубъект);
		НаборЗаписей.Отбор["ПользовательВЕТИС"].Установить(Выборка.ПользовательВЕТИС);
		НаборЗаписей.Отбор["Предприятие"].Установить(Выборка.Предприятие);
		
		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
			КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
			ЗаписьЖурналаРегистрации(НСтр("ru='Удаление предприятия из зоны ответственности.'", КодЯзыка),
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС,,
			                         ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//Используется для добавления предприятий в зоны ответственности при:
// - связи предприятия с хозяйствующим субъектом
// - изменении адреса зоны ответственности пользователя
// - изменении адреса предприятия
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                <продолжение описания параметра>
//
Процедура ДобавитьПредприятияВЗоныОтветственностиПоНаследованиюАдреса(ХозяйствующийСубъект, ПользовательВЕТИС, Отказ) Экспорт
	
	Если ПользовательВЕТИС <> Неопределено Тогда
		Если ТипЗнч(ПользовательВЕТИС) = Тип("Массив") Тогда
			МассивПользователей = ПользовательВЕТИС;
		Иначе
			МассивПользователей = Новый Массив();
			МассивПользователей.Добавить(ПользовательВЕТИС);
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("ПустойИдентификатор", "");
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АдресаЗонОтветственности.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
	|	АдресаЗонОтветственности.ПользовательВЕТИС    КАК ПользовательВЕТИС,
	|	ХозяйствующиеСубъектыПредприятия.Предприятие  КАК Предприятие,
	|	ИСТИНА                                        КАК НаследуетсяИзАдреса
	|ИЗ
	|	РегистрСведений.АдресаЗонОтветственностиВЕТИС КАК АдресаЗонОтветственности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ХозяйствующиеСубъектыПредприятия
	|		ПО АдресаЗонОтветственности.ХозяйствующийСубъект = ХозяйствующиеСубъектыПредприятия.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПредприятияВЕТИС КАК СправочникПредприятия
	|		ПО ХозяйствующиеСубъектыПредприятия.Предприятие = СправочникПредприятия.Ссылка
	|		 И АдресаЗонОтветственности.СтранаИдентификатор = СправочникПредприятия.СтранаИдентификатор
	|		 И АдресаЗонОтветственности.РегионИдентификатор = СправочникПредприятия.РегионИдентификатор
	|		 И (АдресаЗонОтветственности.РайонИдентификатор = СправочникПредприятия.РайонИдентификатор
	|		    ИЛИ АдресаЗонОтветственности.РайонИдентификатор = &ПустойИдентификатор)
	|		 И (АдресаЗонОтветственности.НаселенныйПунктИдентификатор = СправочникПредприятия.НаселенныйПунктИдентификатор
	|		    ИЛИ АдресаЗонОтветственности.НаселенныйПунктИдентификатор = &ПустойИдентификатор)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредприятияЗонОтветственностиВЕТИС КАК ПредприятияЗонОтветственности
	|		ПО АдресаЗонОтветственности.ХозяйствующийСубъект = ПредприятияЗонОтветственности.ХозяйствующийСубъект
	|		 И АдресаЗонОтветственности.ПользовательВЕТИС = ПредприятияЗонОтветственности.ПользовательВЕТИС
	|		 И ХозяйствующиеСубъектыПредприятия.Предприятие = ПредприятияЗонОтветственности.Предприятие
	|ГДЕ
	|	АдресаЗонОтветственности.ХозяйствующийСубъект = &ХозяйствующийСубъект";
	
	Если ПользовательВЕТИС <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И АдресаЗонОтветственности.ПользовательВЕТИС В (&ПользователиВЕТИС)";
		Запрос.УстановитьПараметр("ПользователиВЕТИС" , МассивПользователей);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	И ПредприятияЗонОтветственности.ХозяйствующийСубъект ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	АдресаЗонОтветственности.ХозяйствующийСубъект,
	|	АдресаЗонОтветственности.ПользовательВЕТИС,
	|	ХозяйствующиеСубъектыПредприятия.Предприятие
	|";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор["ХозяйствующийСубъект"].Установить(Выборка.ХозяйствующийСубъект);
		НаборЗаписей.Отбор["ПользовательВЕТИС"].Установить(Выборка.ПользовательВЕТИС);
		НаборЗаписей.Отбор["Предприятие"].Установить(Выборка.Предприятие);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
			КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
			ЗаписьЖурналаРегистрации(НСтр("ru='Добавление предприятия в зону ответственности.'", КодЯзыка),
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС,,
			                         ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли