
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВедущийОбъект", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	// Если объект еще не заблокирован для изменений и есть права на изменение набора
	// попытаемся установить блокировку.
	Если НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхФизическихЛицЗарплатаКадры") Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		СотрудникиКлиентСервер.УстановитьРежимТолькоПросмотрВФормеРедактированияИстории(ЭтотОбъект);
	КонецЕсли;
	
	МассивЗаписей = Неопределено;
	Если Не Параметры.Свойство("МассивЗаписей", МассивЗаписей) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ЗаписьНабора Из МассивЗаписей Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), ЗаписьНабора);
	КонецЦикла;
	
	НаборЗаписей.Сортировать("Период");
	
	ДатаОтсчетаПериодическихСведений = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	Если Не Набор.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Сообщения = ПолучитьСообщенияПользователю(Истина);
		Если Сообщения <> Неопределено Тогда
			Для каждого ПолученноеСообщение Из Сообщения Цикл
				ПолученноеСообщение.КлючДанных = Неопределено;
				ПолученноеСообщение.Сообщить();
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередНачаломИзменения(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если НоваяСтрока Тогда
			
			Элемент.ТекущиеДанные.ФизическоеЛицо = ОбъектВладелец;
			Элемент.ТекущиеДанные.Страна = ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			Если НаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = НаборЗаписей.Получить(НаборЗаписей.Количество() - 2).Период;
			Иначе
				ПоследнийПериод = '00010101000000';
			КонецЕсли; 
			
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = КонецДня(ПоследнийПериод) + 1;
			КонецЕсли; 
			
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			
		Иначе
			
			ПериодПередНачаломИзменения = Элемент.ТекущиеДанные.Период;
			Если Элемент.ТекущиеДанные.Период = ДатаОтсчетаПериодическихСведений Тогда
				Элемент.ТекущиеДанные.Период = '00010101000000';
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если ОтменаРедактирования Тогда
			Элемент.ТекущиеДанные.Период = ПериодПередНачаломИзменения;
		Иначе
		
			Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				Элемент.ТекущиеДанные.Период = ДатаОтсчетаПериодическихСведений;
			КонецЕсли; 
	
			НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
					СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , "НаборЗаписей.Период", , Отказ);
					Элемент.ТекущиеДанные.Период = '00010101000000';
					Прервать;
				КонецЕсли; 
			КонецЦикла;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПослеУдаления(Элемент)
	
	Если НаборЗаписей.Количество() = 0 Тогда
		ДобавитьЗаписьПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		РедактированиеПериодическихСведенийКлиент.ОповеститьОЗавершении(ЭтотОбъект, "ГражданствоФизическихЛиц", ОбъектВладелец);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьЗаписьПоУмолчанию()
	
	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, РегистрыСведений.ГражданствоФизическихЛиц.СоздатьМенеджерЗаписи());
	Запись.ФизическоеЛицо = ОбъектВладелец;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаблокироватьОбъектВФормеВладельце()
	
	Возврат СотрудникиКлиент.ЗаблокироватьОбъектВФормеВладельцеПриРедактированииИстории(ЭтотОбъект);
	
КонецФункции

#КонецОбласти
