
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПредметНастройки = Параметры.ПредметНастройки;
	
	ПараметрыДетальнойНастройки = ПолучитьИзВременногоХранилища(Параметры.АдресПараметрыДетальнойНастройки);
	ЗначенияДетальнойНастройки  = ПолучитьИзВременногоХранилища(Параметры.АдресЗначенияДетальнойНастройки);
	
	Если ПараметрыДетальнойНастройки = Неопределено 
		Или ЗначенияДетальнойНастройки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПараметрыНастройкиСервер = ПараметрыДетальнойНастройки[ПредметНастройки]; // Некоторые параметры нужны на клиенте, но все передать не можем
	ЗначенияНастройки        = ЗначенияДетальнойНастройки[ПредметНастройки];
	
	Если ПараметрыНастройкиСервер = Неопределено
		Или ПараметрыНастройкиСервер.Количество() = 0
		Или ЗначенияНастройки = Неопределено 
		Или ЗначенияНастройки.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Подготовим реквизиты формы, которые позволяют настраивать параметры
	
	Для Индекс = 0 По ПараметрыНастройкиСервер.ВГраница() Цикл
		
		ПараметрНастройки = ПараметрыНастройкиСервер[Индекс];
		
		Если ПараметрНастройки = "ПорядокУплатыНалоговНаМестах" Тогда
			
			// Прочитаем текущие значения параметров
			ПорядокУплаты = ЗначенияНастройки[Индекс];
			Период                  = ПорядокУплаты.Период;
			СрокУплатыНалогаМесяцев = ПорядокУплаты.СрокУплатыНалогаМесяцев;
			СрокУплатыНалогаДней    = ПорядокУплаты.СрокУплатыНалогаДней;
			УплачиваютсяАвансы      = ПорядокУплаты.УплачиваютсяАвансы;
			СрокУплатыАвансаМесяцев = ПорядокУплаты.СрокУплатыАвансаМесяцев;
			СрокУплатыАвансаДней    = ПорядокУплаты.СрокУплатыАвансаДней;
			
			// Настроим элементы формы
			
			Элементы.ПорядокУплатыНалогаНаМестах.Видимость = Истина;
			Элементы.Переместить(Элементы.ПорядокУплатыНалогаНаМестах, ЭтаФорма); // В конец - после текущего добавленного
			
			// Настроим список выбора - представления всех месяцев
			СписокВыбора = Элементы.СрокУплатыНалогаМесяцев.СписокВыбора;
			Для НомерМесяца = 0 По 11 Цикл
				УсловнаяДата = ДобавитьМесяц('20130101', НомерМесяца);
				ПредставлениеМесяца = СтрЗаменить(
					Формат(УсловнаяДата, "ДФ=dd@MMMM"),
					Формат(УсловнаяДата, "ДФ=dd@"),
					"");
				СписокВыбора.Добавить(НомерМесяца, ПредставлениеМесяца);
			КонецЦикла;
			
			НастроитьСрокУплатыНалогаМесяцев(ЭтаФорма);
			НастроитьСрокУплатыАвансов(ЭтаФорма);
			ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
			
			НоваяСтрока = ПараметрыНастройки.Добавить();
			НоваяСтрока.ИмяРеквизита = "";
			НоваяСтрока.ПорядокУплатыНалоговНаМестах = Истина;
			
		Иначе
			
			Если ТипЗнч(ПараметрНастройки.Варианты) <> Тип("ТаблицаЗначений") Тогда
				// Такие должны представляться флажком, а не перечислением.
				// А флажок эта форма не умеет рисовать.
				Продолжить;
			КонецЕсли;
			
			// См. РегистрыСведений.НалогиОтчеты.НовыйВариантыДетальнойНастройки()
			
			// Добавим реквизит формы
			ИмяРеквизита = "Параметр" + Индекс;
			Реквизит = Новый РеквизитФормы(
				ИмяРеквизита,
				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0, ДопустимыйЗнак.Неотрицательный)),
				,// Путь
				ПараметрНастройки.ЗаголовокВыбора,
				Истина); // "Сохраняемые данные"
				
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			// Присвоим реквизиту значение параметра
			ЭтаФорма[ИмяРеквизита] = ЗначенияНастройки[Индекс];
			
			// Нарисуем элемент диалога
			Переключатель = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"));
			
			Переключатель.ПутьКДанным       = ИмяРеквизита;
			Переключатель.Вид               = ВидПоляФормы.ПолеПереключателя;
			Переключатель.КоличествоКолонок = 1;
			
			Для Каждого Вариант Из ПараметрНастройки.Варианты Цикл
				
				ВыбираемоеЗначение = ПараметрНастройки.Варианты.Индекс(Вариант);
				
				Если Вариант.Устарел И ЭтаФорма[ИмяРеквизита] <> ВыбираемоеЗначение Тогда
					Продолжить;
				КонецЕсли;
				
				Переключатель.СписокВыбора.Добавить(ВыбираемоеЗначение, Вариант.ТекстВыбора);
				
			КонецЦикла;
			
			// Заполним параметр формы, который поможет вернуть результат выбора
			НоваяСтрока = ПараметрыНастройки.Добавить();
			НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
			НоваяСтрока.ПорядокУплатыНалоговНаМестах = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Заголовок = Справочники.ЗадачиБухгалтера.ПредставлениеЗадачи(Параметры.НалогОтчет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокУплатыНалогаДнейПриИзменении(Элемент)
	
	ПроверитьДопустимостьДаты();
	
	НастроитьСрокУплатыНалогаМесяцев(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыНалогаМесяцевПриИзменении(Элемент)
	
	ПроверитьДопустимостьДаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьДаты()
	
	Если СрокУплатыНалогаМесяцев > 0 И СрокУплатыНалогаДней <= 31 Тогда
		// Убедимся, что число не превышает количество дней в выбранном месяце.
		// Ориентируемся на високосный год.
		ДатаНачалаМесяца      = Дата(2000, СрокУплатыНалогаМесяцев + 1, 1);
		КоличествоДнейВМесяце = День(КонецМесяца(ДатаНачалаМесяца));
		Если СрокУплатыНалогаДней > КоличествоДнейВМесяце Тогда
			СрокУплатыНалогаДней = КоличествоДнейВМесяце;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УплачиваютсяАвансыПриИзменении(Элемент)
	НастроитьСрокУплатыАвансов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыАвансаМесяцевПриИзменении(Элемент)
	ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СрокУплатыАвансаДнейПриИзменении(Элемент)
	ОбновитьОписаниеСрокаУплаты(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Не Модифицированность Тогда
		Закрыть(Неопределено);
	КонецЕсли;
	
	ВыбранныеНастройки = Новый Массив;
	
	Для Каждого ОписаниеПараметра Из ПараметрыНастройки Цикл
		
		Если ОписаниеПараметра.ПорядокУплатыНалоговНаМестах Тогда
			
			ПорядокУплаты = Новый Структура;
			ПорядокУплаты.Вставить("Период",                  Период);
			ПорядокУплаты.Вставить("СрокУплатыНалогаМесяцев", Макс(0, СрокУплатыНалогаМесяцев)); // Избавимся от служебного значения "-1"
			ПорядокУплаты.Вставить("СрокУплатыНалогаДней",    СрокУплатыНалогаДней);
			ПорядокУплаты.Вставить("УплачиваютсяАвансы",      УплачиваютсяАвансы);
			ПорядокУплаты.Вставить("СрокУплатыАвансаМесяцев", СрокУплатыАвансаМесяцев);
			ПорядокУплаты.Вставить("СрокУплатыАвансаДней",    СрокУплатыАвансаДней);
			
			ВыбранныеНастройки.Добавить(ПорядокУплаты);
			
		Иначе
			ВыбранныеНастройки.Добавить(ЭтаФорма[ОписаниеПараметра.ИмяРеквизита]);
		КонецЕсли;
		
	КонецЦикла;

	Закрыть(ВыбранныеНастройки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСрокУплатыНалогаМесяцев(Форма)
	
	ВыбиратьМесяц = (Форма.СрокУплатыНалогаДней <= 31);
	
	Если ВыбиратьМесяц И Форма.СрокУплатыНалогаМесяцев = -1 Тогда
		Форма.СрокУплатыНалогаМесяцев = 0;
	ИначеЕсли Не ВыбиратьМесяц Тогда
		Форма.СрокУплатыНалогаМесяцев = -1;
	КонецЕсли;
	
	СписокВыбора = Форма.Элементы.СрокУплатыНалогаМесяцев.СписокВыбора;
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(-1);
	Если ЭлементСписка <> Неопределено Тогда
		СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли;
	
	Если Не ВыбиратьМесяц Тогда
		ТекстПолностью = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
			Форма.СрокУплатыНалогаДней,
			НСтр("ru = 'календарный день, календарных дня, календарных дней'"));
		ТолькоСлова = СокрЛП(Сред(ТекстПолностью, 1 + СтрДлина("" + Форма.СрокУплатыНалогаДней)));
		СписокВыбора.Вставить(0, -1, ТолькоСлова);
	КонецЕсли;
	
	Элемент = Форма.Элементы.СрокУплатыНалогаМесяцев;
	Элемент.ТолькоПросмотр = Не ВыбиратьМесяц;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСрокУплатыАвансов(Форма)
	
	Форма.Элементы.СрокУплатыАванса.Доступность = Форма.УплачиваютсяАвансы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОписаниеСрокаУплаты(Форма)
	
	УсловнаяДата = '20130101';
	
	Дней = 24 * 60 * 60;
	
	СрокиУплаты = Новый Массив;
	Для НомерКвартала = 1 По 3 Цикл
		Дата = ДобавитьМесяц(УсловнаяДата, 3 * НомерКвартала + Форма.СрокУплатыАвансаМесяцев) + Дней * Форма.СрокУплатыАвансаДней - 1;
		СрокиУплаты.Добавить(Формат(Дата, "ДФ='dd MMMM'"));
	КонецЦикла;
	
	ПереченьСроков = СтрСоединить(СрокиУплаты, ", ");
	Форма.ОписаниеСрокаУплатыАванса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '(%1)'"),
		ПереченьСроков);
	
КонецПроцедуры

#КонецОбласти
