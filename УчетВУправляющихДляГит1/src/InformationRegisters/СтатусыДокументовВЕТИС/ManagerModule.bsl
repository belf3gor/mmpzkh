
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Функция возвращает структуру значений по умолчанию для документа для движений.
//
// Возвращаемое значение:
//	Структура - значения по умолчанию
//
Функция ЗначенияПоУмолчанию(СсылкаНаОформляемыйДокумент) Экспорт
	
	СтруктураЗначенияПоУмолчанию = Новый Структура;
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СсылкаНаОформляемыйДокумент);
	
	СтруктураЗначенияПоУмолчанию.Вставить("Документ", СсылкаНаОформляемыйДокумент);
	СтруктураЗначенияПоУмолчанию.Вставить("Статус",   МенеджерОбъекта.СтатусПоУмолчанию());
	
	Если ТипЗнч(СсылкаНаОформляемыйДокумент) = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ПараметрыДляРасчетаСтатуса = МенеджерОбъекта.ПараметрыДляРасчетаСтатусаПоДаннымДокумента(СсылкаНаОформляемыйДокумент);
		СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие1",
			МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию(ПараметрыДляРасчетаСтатуса.ПроверятьНаРегионализацию));
			
	ИначеЕсли ТипЗнч(СсылкаНаОформляемыйДокумент) = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ПараметрыДляРасчетаСтатуса = МенеджерОбъекта.ПараметрыДляРасчетаСтатусаПоДаннымДокумента(СсылкаНаОформляемыйДокумент);
		СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие1",
			МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию(ПараметрыДляРасчетаСтатуса.ПроверятьНаРегионализацию,
			                                              ПараметрыДляРасчетаСтатуса.ЕстьОтклонения,
			                                              ПараметрыДляРасчетаСтатуса.НомерТранспортногоСредстваНеУказан,
			                                              ПараметрыДляРасчетаСтатуса.НомерТранспортногоСредстваВСДНеУказан));
	Иначе
		СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие1", МенеджерОбъекта.ДальнейшееДействиеПоУмолчанию());
	КонецЕсли;
	СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие2", Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется);
	СтруктураЗначенияПоУмолчанию.Вставить("ДальнейшееДействие3", Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется);
	
	Возврат СтруктураЗначенияПоУмолчанию;
	
КонецФункции

// Удаляет запись из регистра по переданному документу.
//
// Параметры:
//  Документ - документ, данные по которому необходимо удалить
//
Процедура УдалитьЗаписьРаспряженияНаОформление(Основание, ПустаяСсылкаНаОформляемыйДокумент) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.СтатусыДокументовВЕТИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Основание.Установить(Основание);
	НаборЗаписей.Отбор.Документ.Установить(ПустаяСсылкаНаОформляемыйДокумент);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Осуществляет запись в регистр по переданным данным.
//
// Параметры:
//  ДанныеЗаписи - данные для записи в регистр
//
Процедура ВыполнитьЗаписьВРегистр(ДанныеЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.СтатусыДокументовВЕТИС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеЗаписи);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Обработать набор записей регистра.
//
// Параметры:
//  НаборЗаписей - НаборЗаписей.СтатусыДокументовВЕТИС - Набор записей.
//  ПараметрыОбновления - Структура - см. функцию ВозвращаемоеЗначениеДальнейшиеДействияСтатус().
// 
// Возвращаемое значение:
//  Структра - Структура со свойствами:
//   * НовыйСтатус - ПеречислениеСсылка - Новый статус.
//   * СтарыйСтатус - ПеречислениеСсылка - Старый статус.
//   * ЗаписатьНабор - Булево - Признак необходимости записи набора.
//
Функция ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления, ЭтоНовый = Истина) Экспорт
	
	НовыйСтатус   = Неопределено;
	СтарыйСтатус  = Неопределено;
	ЗаписатьНабор = Неопределено;
	
	Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
		Если ЗаписьНабора.Статус <> ПараметрыОбновления.НовыйСтатус Или ЭтоНовый Тогда
			СтарыйСтатус = ЗаписьНабора.Статус;
			ЗаписьНабора.Статус = ПараметрыОбновления.НовыйСтатус;
			НовыйСтатус = ПараметрыОбновления.НовыйСтатус;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие1 <> ПараметрыОбновления.ДальнейшееДействие1 Тогда
			ЗаписьНабора.ДальнейшееДействие1 = ПараметрыОбновления.ДальнейшееДействие1;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие2 <> ПараметрыОбновления.ДальнейшееДействие2 Тогда
			ЗаписьНабора.ДальнейшееДействие2 = ПараметрыОбновления.ДальнейшееДействие2;
			ЗаписатьНабор = Истина;
		КонецЕсли;
		Если ЗаписьНабора.ДальнейшееДействие3 <> ПараметрыОбновления.ДальнейшееДействие3 Тогда
			ЗаписьНабора.ДальнейшееДействие3 = ПараметрыОбновления.ДальнейшееДействие3;
			ЗаписатьНабор = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НовыйСтатус",   НовыйСтатус);
	ВозвращаемоеЗначение.Вставить("СтарыйСтатус",  СтарыйСтатус);
	ВозвращаемоеЗначение.Вставить("ЗаписатьНабор", ЗаписатьНабор);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Дополнить параметры обновления статуса.
//
// Параметры:
//  ПараметрыОбновленияСтатуса - Структура - см. функцию ИнтеграцияВЕТИС.ПараметрыОбновленияСтатуса().
// 
// Возвращаемое значение:
//  Структура - см. функцию ИнтеграцияВЕТИС.ПараметрыОбновленияСтатуса().
//
Функция ДополнитьПараметрыОбновленияСтатуса(ПараметрыОбновленияСтатуса = Неопределено) Экспорт
	
	Если ПараметрыОбновленияСтатуса = Неопределено
		Или Не ПараметрыОбновленияСтатуса.Свойство("ОбновлятьДвижения") Тогда
		
		ПараметрыОбновленияСтатуса = ИнтеграцияВЕТИС.ПараметрыОбновленияСтатуса(ПараметрыОбновленияСтатуса);
		
	КонецЕсли;
	
	Возврат ПараметрыОбновленияСтатуса;
	
КонецФункции

// Изменяет и возвращает статус документа ВЕТИС.
//
// Параметры:
//  Документ - ДокументСсылка - Документ ВЕТИС.
//  ПараметрыОбновления - Структура со свойствами:
//   * НовыйСтатус - ПеречисленияСсылка.СтатусыИнформированияЕГАИС - Новый статус.
//   * ДальнейшееДействие1 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 1.
//   * ДальнейшееДействие2 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 2.
//   * ДальнейшееДействие3 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 3.
//  ОбновлятьДвижения - Булево - Признак принудительного обновления движений.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыИнформированияВЕТИС - новый статус документа ВЕТИС.
//
Функция ОбновитьСтатус(Документ, ПараметрыОбновления, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ПараметрыОбновления.НовыйСтатус = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка изменения статуса'");
	КонецЕсли;
	
	ЭтоНовый = Ложь;
	НаборЗаписей = НаборЗаписей(Документ, ЭтоНовый);
	ЗаписатьНабор = НаборЗаписей.Модифицированность();
	
	Результат = ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления, ЭтоНовый);
	Если Результат.ЗаписатьНабор <> Неопределено Тогда
		ЗаписатьНабор = Результат.ЗаписатьНабор;
	КонецЕсли;
	НовыйСтатус  = Результат.НовыйСтатус;
	СтарыйСтатус = Результат.СтарыйСтатус;
	
	Если ЗаписатьНабор Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		НаборЗаписей.Записать();
		
		Если СтарыйСтатус <> НовыйСтатус Тогда
			
			ПолноеИмя = Документ.Метаданные().ПолноеИмя();
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
			
			ПараметрыОбновленияСтатуса = ДополнитьПараметрыОбновленияСтатуса(ДополнительныеПараметры);
			
			МенеджерОбъекта.ПриИзмененииСтатусаДокумента(
				Документ,
				СтарыйСтатус, 
				НовыйСтатус,
				ПараметрыОбновленияСтатуса);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НовыйСтатус;
	
КонецФункции

Процедура ЗаписатьСтатус(Документ, ПараметрыОбновления, ДополнительныеПараметры = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.СтатусыДокументовВЕТИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	ЗначенияПоУмолчанию = РегистрыСведений.СтатусыДокументовВЕТИС.ЗначенияПоУмолчанию(Документ);
	ЗаписьНабора = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗначенияПоУмолчанию);
	РегистрыСведений.СтатусыДокументовВЕТИС.ОбработатьНаборЗаписей(НаборЗаписей, ПараметрыОбновления);
	НаборЗаписей.Записать(Истина);
	
	ПолноеИмя = Документ.Метаданные().ПолноеИмя();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	
	ПараметрыОбновленияСтатуса = ДополнитьПараметрыОбновленияСтатуса(ДополнительныеПараметры);
	
	МенеджерОбъекта.ПриИзмененииСтатусаДокумента(
		Документ,
		Неопределено, ПараметрыОбновления.НовыйСтатус,
		ПараметрыОбновленияСтатуса);
	
КонецПроцедуры

Функция ТекущееСостояние(Документ) Экспорт
	
	ВозвращаемоеЗначение = ЗначенияПоУмолчанию(Документ);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыДокументовВЕТИС.Документ,
	|	СтатусыДокументовВЕТИС.Статус,
	|	СтатусыДокументовВЕТИС.ДальнейшееДействие1,
	|	СтатусыДокументовВЕТИС.ДальнейшееДействие2,
	|	СтатусыДокументовВЕТИС.ДальнейшееДействие3
	|ИЗ
	|	РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|ГДЕ
	|	СтатусыДокументовВЕТИС.Документ = &Документ");
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РассчитатьСтатусы(ДокументСсылка, СтатусОбработки, Статусы) Экспорт
	
	Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОтклонена
		Или СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.ОшибкаПоиска
		Или СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.Ошибка Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Для Каждого Действие Из Статусы.ОшибкаДействия Цикл
			ДальнейшиеДействия.Добавить(Действие);
		КонецЦикла;
		
		Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Ошибка, ДальнейшиеДействия);
		
	ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаОбрабатывается Тогда
		
		Возврат Неопределено;
		
	ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаВыполнена
		Или СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийВЕТИС.ЗаявкаПринята Тогда
		
		ДальнейшиеДействия = Новый Массив;
		Для Каждого Действие Из Статусы.ПринятДействия Цикл
			ДальнейшиеДействия.Добавить(Действие);
		КонецЦикла;
		
		Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статусы.Принят, ДальнейшиеДействия);
		
	Иначе
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Неизвестный статус обработки: %1'"), СтатусОбработки);
		
	КонецЕсли;
	
КонецФункции

Функция РассчитатьСтатусыКПередаче(ДокументСсылка, НовыйСтатус) Экспорт
	
	ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ");
	
	ДальнейшиеДействия = Новый Массив;
	Если ИспользоватьАвтоматическийОбмен Тогда
		ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ОжидайтеПередачуДанныхРегламентнымЗаданием);
	Иначе
		ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ВыполнитеОбмен);
	КонецЕсли;
	
	ДальнейшиеДействия.Добавить(Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.ОтменитеПередачуДанных);
	
	Возврат ВозвращаемоеЗначениеДальнейшиеДействияСтатус(НовыйСтатус, ДальнейшиеДействия);
	
КонецФункции

Функция ДальнейшиеДействия(Статусы) Экспорт
	
	ВозвращаемоеЗначение = Новый Массив;
	
	Если Статусы.ДальнейшееДействие1 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие1);
	КонецЕсли;
	Если Статусы.ДальнейшееДействие2 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие2);
	КонецЕсли;
	Если Статусы.ДальнейшееДействие3 <> Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется Тогда
		ВозвращаемоеЗначение.Добавить(Статусы.ДальнейшееДействие3);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции

Функция НаборЗаписей(Документ, ЭтоНовый)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыДокументовВЕТИС.Документ КАК Документ
	|ИЗ
	|	РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|ГДЕ
	|	СтатусыДокументовВЕТИС.Документ = &Документ");
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭтоНовый = Запрос.Выполнить().Пустой();
	
	НаборЗаписей = РегистрыСведений.СтатусыДокументовВЕТИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ, Истина);
	
	Если ЭтоНовый Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗначенияПоУмолчанию(Документ));
		
	Иначе
		
		НаборЗаписей.Прочитать();
		
	КонецЕсли;
	
	Возврат НаборЗаписей;
	
КонецФункции

Функция СтруктураСтатусы() Экспорт
	
	Статусы = Новый Структура;
	Статусы.Вставить("Принят");
	Статусы.Вставить("Обрабатывается");
	Статусы.Вставить("Ошибка");
	Статусы.Вставить("ОшибкаПроведения");
	Статусы.Вставить("ОтменаПроведения");
	
	Статусы.Вставить("ОшибкаДействия", Новый Массив);
	Статусы.Вставить("ПринятДействия", Новый Массив);
	
	Возврат Статусы;
	
КонецФункции

Функция ВозвращаемоеЗначениеДальнейшиеДействияСтатус(Статус, ДальнейшиеДействия) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НовыйСтатус",         Статус);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие1", Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие2", Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется);
	ВозвращаемоеЗначение.Вставить("ДальнейшееДействие3", Перечисления.ДальнейшиеДействияПоВзаимодействиюВЕТИС.НеТребуется);
	
	Индекс = 1;
	Для Каждого ДальнейшееДействие Из ДальнейшиеДействия Цикл
		ВозвращаемоеЗначение["ДальнейшееДействие" + Индекс] = ДальнейшееДействие;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецЕсли