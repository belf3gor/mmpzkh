#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаголовокОрганизация = НСтр("ru = 'Организация:'");
	
	ПравоРедактированияНастроек = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоНалогам);
	ЭтаФорма.Элементы.ПоВсемОС.ТолькоПросмотр = НЕ ПравоРедактированияНастроек;
	ЭтаФорма.Элементы.ПоВсемОрганизациям.ТолькоПросмотр = НЕ ПравоРедактированияНастроек;
	
	ВыборНалогаДоступен = Истина;
	Если Параметры.Свойство("ВыборНалогаДоступен") Тогда
		ВыборНалогаДоступен = Параметры.ВыборНалогаДоступен;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустой() Тогда
	
		Если Параметры.ЗначенияЗаполнения.Свойство("ВидНалога")
			И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.ВидНалога) Тогда
			Запись.ВидНалога = Параметры.ЗначенияЗаполнения.ВидНалога;
			ВыборНалогаДоступен = Ложь;
		КонецЕсли;
		
		ПодготовитьФормуНаСервере();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");		
		Если ЗначениеЗаполнено(ТекущийОбъект.ОсновноеСредство) И НЕ ЗначениеЗаполнено(ТекущийОбъект.Организация) Тогда
			ТекущийОбъект.Организация = ОсновнаяОрганизация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ПериодПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНалогаПриИзменении(Элемент)
	
	ПерезаполнитьОтражениеВУСН = ?(ЗначениеЗаполнено(Запись.Организация),
								   ПрименяетсяУСНДоходыМинусРасходы,
								   ИспользуетсяУСН);
	
	Если ЗначениеЗаполнено(Запись.ВидНалога) И ПерезаполнитьОтражениеВУСН Тогда
		ВидНалогаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемОрганизациямПриИзменении(Элемент)
	
	Если ПоВсемОрганизациям = 1 Тогда
		Запись.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
		БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииОрганизации(
			ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемОСПриИзменении(Элемент)
	
	Если ПоВсемОС = 1 Тогда
		Запись.ОсновноеСредство = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	ПоВсемОрганизациям = 0;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетЗатратПриИзменении(Элемент)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
		ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(1);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(2);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(3);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
		ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	УправлениеЭлементамиУСН();
	
	ПоВсемОС		   = ?(ЗначениеЗаполнено(Запись.ОсновноеСредство), 0, 1);
	ПоВсемОрганизациям = ?(ЗначениеЗаполнено(Запись.Организация), 0, 1);
	
	УправлениеФормой(ЭтаФорма);
	
	ЭтаФорма.Элементы.ВидНалога.Видимость = ВыборНалогаДоступен;
	Если НЕ ВыборНалогаДоступен Тогда
		
		ЭтаФорма.АвтоЗаголовок = Ложь;
		Если Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Налог на имущество: способ отражения расходов'");
		ИначеЕсли Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Транспортный налог: способ отражения расходов'");
		ИначеЕсли Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Земельный налог: способ отражения расходов'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ИспользуетсяУСН			= ПолучитьФункциональнуюОпцию("ИспользуетсяУСН");
	ИспользуетсяЕНВД		= ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	ПлательщикЕНВД						= УчетнаяПолитика.ПлательщикЕНВД(Запись.Организация, Запись.Период);
	ПрименяетсяУСНДоходыМинусРасходы	= УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Запись.Организация, Запись.Период);

КонецПроцедуры

Процедура ПериодПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	УправлениеЭлементамиУСН();

КонецПроцедуры

&НаСервере
Процедура ВидНалогаПриИзмененииНаСервере()

	Если Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество
		И Запись.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Распределяются Тогда
		// расходы по налогу на имущество при УСН не бывают распределяемыми
		Запись.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;
	
	УправлениеЭлементамиУСН();

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииОрганизации(
		ЭтотОбъект, Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	УправлениеЭлементамиУСН();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	ПоВсемОС  = (Форма.ПоВсемОС = 1);
	УказаноОС = ЗначениеЗаполнено(Запись.ОсновноеСредство);
	
	ПоВсемОрганизациям = (Форма.ПоВсемОрганизациям = 1);
	
	Элементы.ПоВсемОрганизациям.Видимость = ПоВсемОС ИЛИ НЕ УказаноОС;
	Элементы.ПоОрганизации.Видимость = ПоВсемОС ИЛИ НЕ УказаноОС;
	Элементы.ЗаголовокОрганизация.Видимость = НЕ ПоВсемОС И УказаноОС;
	
	Элементы.ОсновноеСредство.Доступность = НЕ ПоВсемОС;
	
	Элементы.Организация.Доступность = НЕ ПоВсемОрганизациям ИЛИ (НЕ ПоВсемОС И УказаноОС);
	Элементы.Организация.АвтоотметкаНезаполненного = УказаноОС;
	Элементы.Организация.ОтметкаНезаполненного =
		УказаноОС
		И НЕ ПоВсемОрганизациям
		И НЕ ЗначениеЗаполнено(Запись.Организация);

КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиУСН()

	ПоказыватьОтражениеВУСН = ?(ЗначениеЗаполнено(Запись.Организация),
								ПрименяетсяУСНДоходыМинусРасходы,
								ИспользуетсяУСН);
						
	ДобавитьРаспределяемые = ?(ЗначениеЗаполнено(Запись.Организация), ПлательщикЕНВД, ИспользуетсяЕНВД)
							 И НЕ Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество;
	
	Элементы.ОтражениеВУСН.Доступность = ПоказыватьОтражениеВУСН;
	
	Список = Элементы.ОтражениеВУСН.СписокВыбора;
	Список.Очистить();
	Если ПоказыватьОтражениеВУСН Тогда
		Список.Добавить(Перечисления.ОтражениеВУСН.Принимаются, "Принимаются");
		Список.Добавить(Перечисления.ОтражениеВУСН.НеПринимаются, "Не принимаются");
		Если ДобавитьРаспределяемые Тогда
			Список.Добавить(Перечисления.ОтражениеВУСН.Распределяются, "Распределяются");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(Запись.ВидНалога) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Вид налога'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидНалога", "Запись", Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ОсновноеСредство) И НЕ ЗначениеЗаполнено(Запись.Организация)
		И Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Организация'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Запись", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСубконто(НомерСубконто)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		ЭтотОбъект, Запись, НомерСубконто, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Запись, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтотОбъект, Элемент, СтандартнаяОбработка, ДанныеОбъекта);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма)

	Результат = БухгалтерскийУчетКлиентСервер.ПараметрыУстановкиСвойствСубконтоПоШаблону(
		"Субконто", "Подразделение", "Субконто", "ПодразделениеЗатрат", "СчетЗатрат");
		
	Результат.ДопРеквизиты.Вставить("Организация", Форма.Запись.Организация);
	
	Возврат Результат;

КонецФункции

#КонецОбласти


