#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыйСтатусПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента, СтатусПодключения, ТекстПриглашения = Неопределено, ОписаниеОшибки = Неопределено) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИдентификаторКонтрагента = ИдентификаторКонтрагента;
	МенеджерЗаписи.ИдентификаторОрганизации = ИдентификаторОрганизации;
	МенеджерЗаписи.Статус                   = СтатусПодключения;
	Если ЗначениеЗаполнено(ТекстПриглашения) Тогда
		МенеджерЗаписи.ТекстПриглашения         = ТекстПриглашения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		МенеджерЗаписи.ОписаниеОшибки           = ОписаниеОшибки;
	КонецЕсли;
	
	МенеджерЗаписи.ДатаИзмененияСтатуса     = ТекущаяДатаСеанса();
	МенеджерЗаписи.Записать();
	
КонецФункции

Процедура СформироватьСписокПриглашений(ПараметрыКоманды, АдресРезультата) Экспорт
	
	Приглашения              = ПараметрыКоманды.Приглашения;
	Организация              = ПараметрыКоманды.Организация;
	УчетнаяЗаписьОрганизации = ПараметрыКоманды.УчетнаяЗаписьОрганизации;
	
	ИдентификаторыАбонентов  = Новый ТаблицаЗначений;
	ИдентификаторыАбонентов.Колонки.Добавить("Контрагент"       , Метаданные.ОпределяемыеТипы.КонтрагентБЭД.Тип);
	ИдентификаторыАбонентов.Колонки.Добавить("ИдентификаторЭДО" , Новый ОписаниеТипов("Строка"));
	ИдентификаторыАбонентов.Колонки.Добавить("КраткоеОписание"  , Новый ОписаниеТипов("Строка"));
	
	Для Каждого Приглашение Из Приглашения Цикл
		
		ИдентификаторыЭДО = ОбменСКонтрагентамиСлужебный.ДоступныеИдентификаторыЭДО(Организация, Приглашение.Контрагент);
		
		Если Не ПустаяСтрока(УчетнаяЗаписьОрганизации) Тогда
			Отбор = Новый Структура("ИдентификаторЭДО", УчетнаяЗаписьОрганизации);
			ИдентификаторыМоихУчетныхЗаписей = ИдентификаторыЭДО.ИдентификаторыОтправителя.Скопировать(Отбор);
		Иначе
			ИдентификаторыМоихУчетныхЗаписей = ИдентификаторыЭДО.ИдентификаторыОтправителяДляРейтинга;
		КонецЕсли;
		
		РейтингУчетныхЗаписей = ОбменСКонтрагентамиСлужебный.РейтингУчетныхЗаписей(ИдентификаторыМоихУчетныхЗаписей, ИдентификаторыЭДО.ИдентификаторыПолучателя);
		
		Если Не РейтингУчетныхЗаписей.ИдентификаторОтправителя = Неопределено Тогда
			Приглашение.УчетнаяЗаписьОрганизации                  = РейтингУчетныхЗаписей.ИдентификаторОтправителя.Значение;
			Приглашение.УчетнаяЗаписьОрганизацииДляПерезаполнения = РейтингУчетныхЗаписей.ИдентификаторОтправителя.Значение;
		КонецЕсли;
		
		Если Не РейтингУчетныхЗаписей.ИдентификаторПолучателя = Неопределено Тогда
			Приглашение.Представление                             = РейтингУчетныхЗаписей.ИдентификаторПолучателя.Представление;
			Приглашение.УчетнаяЗапись                             = РейтингУчетныхЗаписей.ИдентификаторПолучателя.Значение;
		КонецЕсли;
		
		Если ИдентификаторыЭДО.ИдентификаторыПолучателя.Количество() = 1 Тогда
			Приглашение.Отбор = 3;
			Приглашение.Выбран = Истина;
		ИначеЕсли ИдентификаторыЭДО.ИдентификаторыПолучателя.Количество() > 1 Тогда
			Приглашение.Отбор = 1;
			Приглашение.Выбран = Ложь;
		Иначе
			Приглашение.Отбор = 0;
			Приглашение.Выбран = Ложь;
		КонецЕсли;
		
		ДополнительныеДанные = Новый Структура;
		Если ОбменСКонтрагентамиСлужебный.ЕстьВозможностьРоумингаОператоровЭДО(Приглашение.УчетнаяЗаписьОрганизации,
				Приглашение.УчетнаяЗапись, ДополнительныеДанные) = Ложь Тогда
			Приглашение.Отбор = 0;
			Приглашение.Выбран = Ложь;
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ДополнительныеДанные)
			И ЗначениеЗаполнено(ДополнительныеДанные.ДанныеПриглашения)
			И ДополнительныеДанные.ДанныеПриглашения.Статус = Перечисления.СтатусыПриглашений.Принято Тогда
			Приглашение.Отбор = 2;
			Приглашение.Выбран = Ложь;
		КонецЕсли;
		
		Для Каждого ИдентификаторАбонента Из ИдентификаторыЭДО.ИдентификаторыПолучателя Цикл
			
			НоваяСтрока = ИдентификаторыАбонентов.Добавить();
			НоваяСтрока.Контрагент = Приглашение.Контрагент;
			НоваяСтрока.ИдентификаторЭДО = ИдентификаторАбонента.Значение;
			НоваяСтрока.КраткоеОписание = ИдентификаторАбонента.КраткоеОписание;
			
		КонецЦикла;
		
КонецЦикла;

	Результат = Новый Структура();
	Результат.Вставить("Приглашения"            , Приглашения);
	Результат.Вставить("ИдентификаторыАбонентов", ИдентификаторыАбонентов);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

Процедура ОтправитьСписокПриглашений(ПараметрыКоманды, АдресРезультата) Экспорт
	
	КоличествоОтправлено    = 0;
	ТекстПриглашения        = "";
	НеСоздаватьНастройкиАвтоматически = Неопределено;
	
	ШаблонТекстаПриглашения = ПараметрыКоманды.ШаблонПриглашения;
	Организация             = ПараметрыКоманды.Организация;
	СписокМаркеров          = ПараметрыКоманды.СписокМаркеров;
	Приглашения             = ПараметрыКоманды.Приглашения;

	ПараметрыКоманды.Свойство("ТекстПриглашения", ТекстПриглашения);
	ПараметрыКоманды.Свойство("НеСоздаватьНастройкиАвтоматически", НеСоздаватьНастройкиАвтоматически);
	Приглашения.Индексы.Добавить("УчетнаяЗаписьОрганизации");
	
	// Готовим таблицу с реквизитами контрагентов.
	ТаблицаПриглашений = Новый ТаблицаЗначений;
	ТаблицаПриглашений.Колонки.Добавить("Получатель");
	ТаблицаПриглашений.Колонки.Добавить("Идентификатор");
	ТаблицаПриглашений.Колонки.Добавить("Наименование");
	ТаблицаПриглашений.Колонки.Добавить("НаименованиеДляСообщенияПользователю");
	ТаблицаПриглашений.Колонки.Добавить("ИНН");
	ТаблицаПриглашений.Колонки.Добавить("КПП");
	ТаблицаПриглашений.Колонки.Добавить("АдресЭП");
	ТаблицаПриглашений.Колонки.Добавить("ТекстПриглашения");
	ТаблицаПриглашений.Колонки.Добавить("ВнешнийКод");
	ТаблицаПриглашений.Колонки.Добавить("ИдентификаторОрганизации");
	ТаблицаПриглашений.Колонки.Добавить("ИдентификаторКонтрагента");
	
	// Получаем имена необходимых реквизитов
	ИмяРеквизитаИННКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННКонтрагента");
	ИмяРеквизитаКППКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППКонтрагента");
	ИмяРеквизитаНаименованиеКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("НаименованиеКонтрагента");
	ИмяРеквизитаВнешнийКодКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ВнешнийКодКонтрагента");
	ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("НаименованиеКонтрагентаДляСообщенияПользователю");
	
	Для Каждого Маркер Из СписокМаркеров Цикл
		
		ТаблицаПриглашений.Очистить();
		
		Отбор = Новый Структура("УчетнаяЗаписьОрганизации", Маркер.Ключ);
		СтрокиПриглашений  = Приглашения.Скопировать(Отбор);
		СписокКонтрагентов = СтрокиПриглашений.ВыгрузитьКолонку("Контрагент");
		
		СтруктураПараметровКонтрагентов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокКонтрагентов,
				ИмяРеквизитаИННКонтрагента + ", " + ИмяРеквизитаКППКонтрагента + ", " + ИмяРеквизитаНаименованиеКонтрагента + ", "
				+ ИмяРеквизитаВнешнийКодКонтрагента + ", " + ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю);
		
				Для Каждого СтрокаТЧ Из СтрокиПриглашений Цикл
					
					ПараметрыКонтрагента = СтруктураПараметровКонтрагентов.Получить(СтрокаТЧ.Контрагент);
					
					Если Не ЗначениеЗаполнено(ПараметрыКонтрагента[ИмяРеквизитаИННКонтрагента]) Тогда
						ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'У контрагента ''%1'' не указан инн'"), СтрокаТЧ.Контрагент));
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока                                      = ТаблицаПриглашений.Добавить();
					НоваяСтрока.Получатель                           = СтрокаТЧ.Контрагент;
					НоваяСтрока.Идентификатор                        = СтрокаТЧ.УчетнаяЗапись;
					НоваяСтрока.Наименование                         = ПараметрыКонтрагента[ИмяРеквизитаНаименованиеКонтрагента];
					НоваяСтрока.НаименованиеДляСообщенияПользователю = ПараметрыКонтрагента[ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю];
					НоваяСтрока.ИНН                                  = ПараметрыКонтрагента[ИмяРеквизитаИННКонтрагента];
					НоваяСтрока.КПП                                  = ПараметрыКонтрагента[ИмяРеквизитаКППКонтрагента];
					НоваяСтрока.ВнешнийКод                           = ПараметрыКонтрагента[ИмяРеквизитаВнешнийКодКонтрагента];
					НоваяСтрока.АдресЭП                              = СтрокаТЧ.ЭлектроннаяПочта;
					
					НоваяСтрока.ТекстПриглашения                     = ?(ЗначениеЗаполнено(ТекстПриглашения), ТекстПриглашения,
						СтрШаблон(ШаблонТекстаПриглашения, СтрокаТЧ.Контрагент, Организация));
						
					НоваяСтрока.ИдентификаторОрганизации             = СтрокаТЧ.УчетнаяЗаписьОрганизации;
					НоваяСтрока.ИдентификаторКонтрагента             = СтрокаТЧ.УчетнаяЗапись;
					
				КонецЦикла;
				
		Если ТаблицаПриглашений.Количество() > 0 Тогда
			
			ДанныеУчетнойЗаписи = РегистрыСведений.УчетныеЗаписиЭДО.ДанныеУчетнойЗаписиЭДОПоИдентификатору(Маркер.Ключ);
			ПараметрыПроцедуры = Новый Структура;
			ПараметрыПроцедуры.Вставить("ТаблицаПриглашений", ТаблицаПриглашений);
			ПараметрыПроцедуры.Вставить("Маркер"            , Маркер.Значение.МаркерРасшифрованный);
			ПараметрыПроцедуры.Вставить("СпособОбменаЭД"    , ДанныеУчетнойЗаписи.СпособОбменаЭД);
			ПараметрыПроцедуры.Вставить("НеСоздаватьНастройкиАвтоматически"    , НеСоздаватьНастройкиАвтоматически = Истина);
			
			КоличествоОтправлено = КоличествоОтправлено
				+ ОбменСКонтрагентамиСлужебный.ОтправитьПриглашенияОператоруЭДО(ПараметрыПроцедуры);
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(КоличествоОтправлено, АдресРезультата);
	
КонецПроцедуры

Функция ДанныеПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента) Экспорт
	
	Данные = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Статус КАК Статус,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ТекстПриглашения КАК ТекстПриглашения,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Email КАК Email,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Контрагент КАК Контрагент,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИНН КАК ИНН,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.КПП КАК КПП,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИсходныйКонтрагент КАК ИсходныйКонтрагент
		|ИЗ
		|	РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК ПриглашенияКОбменуЭлектроннымиДокументами
		|ГДЕ
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации = &ИдентификаторОрганизации
		|	И ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторКонтрагента = &ИдентификаторКонтрагента";
	
	Запрос.УстановитьПараметр("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	Запрос.УстановитьПараметр("ИдентификаторОрганизации", ИдентификаторОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаРезультат.Количество() > 0 Тогда
		
		Данные = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультат[0]);
		
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти

#КонецЕсли
