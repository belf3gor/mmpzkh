
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТолькоПросмотр =  Не ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьПравоНастройкиОбмена();
	
	Параметры.Свойство("Отправитель", Отправитель);
	Параметры.Свойство("Получатель" , Получатель);
	
	Элементы.ГруппаОжиданиеУдаления.Видимость = Ложь;
	
	Создание = Неопределено;
	Параметры.Свойство("Создание" , Создание);
	
	Если Создание = Истина Тогда
		Элементы.Получатель.ТолькоПросмотр = Ложь;
		Элементы.Отправитель.ТолькоПросмотр = ЗначениеЗаполнено(Отправитель);
		Заголовок = СтрШаблон(НСтр("ru = '%1 (Создание)'"), Заголовок);
	КонецЕсли;
	
	ТаблицаДокументов = СформироватьТаблицуНастроек(ИсходящиеДокументы, Отправитель, Получатель);
	
	ИсходящиеДокументы.Загрузить(ТаблицаДокументов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	Модифицированность = НЕ НачатьСохраненияНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если НачатьСохраненияНастроек() Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	Описание = Новый ОписаниеОповещения("УдалитьНастройкиОтправкиИнтеркампани", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Сейчас будет удалена настройка обмена интеркампани.
                         |Продолжить?'");
	
	ПоказатьВопрос(Описание, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СформироватьТаблицуНастроек(Знач ИсходящиеДокументы, Знач Отправитель, Знач Получатель)
	
	ИсходящиеДокументы = ИсходящиеДокументы.Выгрузить();
	ИсходящиеДокументы.Очистить();
	
	АктуальныеВидыЭД = ОбменСКонтрагентамиПовтИсп.ПолучитьАктуальныеВидыЭД();
	Для Каждого КлючИЗначение Из АктуальныеВидыЭД Цикл
		ЗначениеПеречисления = КлючИЗначение.Ключ;
		Если ЗначениеПеречисления = Перечисления.ВидыЭД.ВозвратТоваровМеждуОрганизациями
			Или ЗначениеПеречисления = Перечисления.ВидыЭД.ПередачаТоваровМеждуОрганизациями Тогда
			
				НоваяСтрока = ИсходящиеДокументы.Добавить();
				НоваяСтрока.Отправитель              = Отправитель;
				НоваяСтрока.Получатель               = Получатель;
				НоваяСтрока.ВидДокумента             = ЗначениеПеречисления;
				НоваяСтрока.МаршрутПодписания        = Справочники.МаршрутыПодписания.ОднойДоступнойПодписью;
				НоваяСтрока.СпособОбменаЭД           = Перечисления.СпособыОбменаЭД.Интеркампани;
				НоваяСтрока.Формировать              = Истина;
			КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиЭДО.Отправитель КАК Отправитель,
		|	НастройкиЭДО.Получатель КАК Получатель,
		|	НастройкиЭДО.ВидДокумента КАК ВидДокумента,
		|	НастройкиЭДО.ИдентификаторОтправителя КАК ИдентификаторОтправителя,
		|	НастройкиЭДО.ИдентификаторПолучателя КАК ИдентификаторПолучателя,
		|	НастройкиЭДО.СпособОбменаЭД КАК СпособОбменаЭД,
		|	НастройкиЭДО.МаршрутПодписания КАК МаршрутПодписания,
		|	НастройкиЭДО.Формировать КАК Формировать
		|ПОМЕСТИТЬ НастройкиЭДО
		|ИЗ
		|	&НастройкиЭДО КАК НастройкиЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиЭДО.Отправитель КАК Отправитель,
		|	НастройкиЭДО.Получатель КАК Получатель,
		|	НастройкиЭДО.ВидДокумента КАК ВидДокумента,
		|	ЕСТЬNULL(НастройкиОтправкиЭлектронныхДокументовПоВидам.ИдентификаторОтправителя, НастройкиЭДО.ИдентификаторОтправителя) КАК ИдентификаторОтправителя,
		|	ЕСТЬNULL(НастройкиОтправкиЭлектронныхДокументовПоВидам.ИдентификаторПолучателя, НастройкиЭДО.ИдентификаторПолучателя) КАК ИдентификаторПолучателя,
		|	НастройкиЭДО.СпособОбменаЭД КАК СпособОбменаЭД,
		|	ЕСТЬNULL(НастройкиОтправкиЭлектронныхДокументовПоВидам.МаршрутПодписания, НастройкиЭДО.МаршрутПодписания) КАК МаршрутПодписания,
		|	ЕСТЬNULL(НастройкиОтправкиЭлектронныхДокументовПоВидам.Формировать, НастройкиЭДО.Формировать) КАК Формировать
		|ИЗ
		|	НастройкиЭДО КАК НастройкиЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам КАК НастройкиОтправкиЭлектронныхДокументовПоВидам
		|		ПО НастройкиЭДО.Отправитель = НастройкиОтправкиЭлектронныхДокументовПоВидам.Отправитель
		|			И НастройкиЭДО.Получатель = НастройкиОтправкиЭлектронныхДокументовПоВидам.Получатель
		|			И НастройкиЭДО.ВидДокумента = НастройкиОтправкиЭлектронныхДокументовПоВидам.ВидДокумента";
	
	Запрос.УстановитьПараметр("НастройкиЭДО", ИсходящиеДокументы);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаКлиенте
Функция НачатьСохраненияНастроек()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = ЗаписатьНастройки(Отправитель, Получатель, ИсходящиеДокументы);
	
	Если Результат Тогда
		Оповестить("ОбновитьСостояниеЭД");
		ТекстЗаголовка = НСтр("ru = 'Успех'");
		ТекстСообщения = НСтр("ru = 'Настройки обмена между нашими организациями сохранены успешно'");
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьНастройки(Знач Отправитель, Знач Получатель, Знач ИсходящиеДокументы)
	
	ИсходящиеДокументы = ИсходящиеДокументы.Выгрузить();
	
	ИсходящиеДокументы.ЗаполнитьЗначения(Отправитель, "Отправитель");
	ИсходящиеДокументы.ЗаполнитьЗначения(Получатель , "Получатель");
	
	ИмяРеквизитаИННОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННОрганизации");
	ИмяРеквизитаКППОрганизации = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППОрганизации");
	
	МассивОрганизаций = Новый Массив;
	МассивОрганизаций.Добавить(Отправитель);
	МассивОрганизаций.Добавить(Получатель);
	
	ПараметрыОрганизаций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивОрганизаций,
		ИмяРеквизитаИННОрганизации + ", " + ИмяРеквизитаКППОрганизации);
		
	ИдентификаторОрганизации = ОбменСКонтрагентамиСлужебный.ИдентификаторОрганизацииИнтеркампани(
		ПараметрыОрганизаций.Получить(Отправитель), ИмяРеквизитаИННОрганизации, ИмяРеквизитаКППОрганизации);
				
	ИдентификаторКонтрагента = ОбменСКонтрагентамиСлужебный.ИдентификаторОрганизацииИнтеркампани(
		ПараметрыОрганизаций.Получить(Получатель), ИмяРеквизитаИННОрганизации, ИмяРеквизитаКППОрганизации);
		
	ИсходящиеДокументы.ЗаполнитьЗначения(ИдентификаторОрганизации, "ИдентификаторОтправителя");
	ИсходящиеДокументы.ЗаполнитьЗначения(ИдентификаторКонтрагента , "ИдентификаторПолучателя");
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого СтрокаТЧ Из ИсходящиеДокументы Цикл
			
			МенеджерЗаписи = РегистрыСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТЧ);
			МенеджерЗаписи.Записать();
			
		КонецЦикла;
		
	ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ВидОперации = НСтр("ru = 'Сохранение настроек отправки между своими организациями ЭДО'");
		
		ЭлектронноеВзаимодействие.ОбработатьОшибку(ВидОперации, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке),
			НСтр("ru = 'Не удалось сохранить Настройки между своими организациями
                  |Подробнее см. в журнале регистрации.'"));
			
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура УдалитьНастройкиОтправкиИнтеркампани(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Отправитель"       , Отправитель);
	ПараметрыПроцедуры.Вставить("Получатель"        , Получатель);
	
	ДлительнаяОперация = НачатьУдалениеНастроекОтправкиНаСервере(УникальныйИдентификатор, ПараметрыПроцедуры);
	
	Если ДлительнаяОперация <> Неопределено Тогда
		
		ТолькоПросмотр = Истина;
		Элементы.ГруппаОжиданиеУдаления.Видимость = Истина;
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		Описание = Новый ОписаниеОповещения("ПриЗавершенииУдаленияНастроекОтправки", ЭтаФорма);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Описание, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НачатьУдалениеНастроекОтправкиНаСервере(Знач УникальныйИдентификатор, Знач ПараметрыПроцедуры)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Удаление настройки интеркампани'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("РегистрыСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.УдалитьНастройкиИнтеркампани",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииУдаленияНастроекОтправки(Результат, ДополнительныеПараметры) Экспорт
	
	ТолькоПросмотр = Ложь;
	Элементы.ГруппаОжиданиеУдаления.Видимость = Ложь;

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ТекстСообщения = НСтр("ru = 'Во время удаления настройки интеркампани произошла ошибка.'");
		
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(НСтр("ru = 'Удаление настройки интеркампани'"),
			Результат.ПодробноеПредставлениеОшибки, ТекстСообщения);
			
		Возврат;
	КонецЕсли;
	
	Если ПолучитьИзВременногоХранилища(Результат.АдресРезультата) = Истина Тогда
		
		Оповестить("ОбновитьСостояниеЭД");
		Закрыть();
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Во время удаления настройки интеркампани произошла ошибка.
                               |Подробнее см. в журнале регистрации.'");
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти