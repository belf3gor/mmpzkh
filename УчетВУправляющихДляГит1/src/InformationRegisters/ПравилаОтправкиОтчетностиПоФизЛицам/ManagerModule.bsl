#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
Функция ПолучитьНастройки(Организация, ОрганПФР, ВидОтчетности) Экспорт
	
	Настройки = Новый Структура;
	
	Если ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(Организация.УчетнаяЗаписьОбмена)
		И ЗначениеЗаполнено(ОрганПФР) Тогда
		
		Если Организация.УчетнаяЗаписьОбмена.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Такском Тогда
			ВызватьИсключение(НСтр("ru = 'Для абонентов оператора ""Такском"" в настоящее время не предусмотрена возможность отправки макетов пенсионных дел'"));
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УчетнаяЗапись", Организация.УчетнаяЗаписьОбмена);
		Запрос.УстановитьПараметр("ОрганПФР", ОрганПФР);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПравилаОтправкиОтчетностиПоФизЛицам.Данные КАК Данные
		|ИЗ
		|	РегистрСведений.ПравилаОтправкиОтчетностиПоФизЛицам КАК ПравилаОтправкиОтчетностиПоФизЛицам
		|ГДЕ
		|	ПравилаОтправкиОтчетностиПоФизЛицам.УчетнаяЗапись = &УчетнаяЗапись
		|	И ПравилаОтправкиОтчетностиПоФизЛицам.ОрганПФР = &ОрганПФР
		|	И ПравилаОтправкиОтчетностиПоФизЛицам.ВидОтчетности В (&ВидыОтчетности)";
		
		ВидыОтчетности = Новый Массив;
		ВидыОтчетности.Добавить(ВидОтчетности);
		Если ВидОтчетности = Перечисления.ВидыОтчетностиПоФизЛицам.МакетПенсионныхДел Тогда
			// Для ранее созданных записей не заполнено
			ВидыОтчетности.Добавить(Перечисления.ВидыОтчетностиПоФизЛицам.ПустаяСсылка());
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ВидыОтчетности", ВидыОтчетности);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СохраненныеНастройки = Выборка.Данные.Получить();
			Если ЗначениеЗаполнено(СохраненныеНастройки) Тогда
				Настройки = СохраненныеНастройки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Настройки.Свойство("Вложение") Тогда
		Размер2МБ = 2097152;
		Если Не ЗначениеЗаполнено(Настройки.Вложение.МаксимальныйРазмерВложения) Тогда
			Настройки.Вложение.Вставить("МаксимальныйРазмерВложения", Размер2МБ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Настройки.Вложение.МаксимальныйРазмерФайла) Тогда
			Настройки.Вложение.Вставить("МаксимальныйРазмерФайла", Размер2МБ);
		КонецЕсли;
	КонецЕсли;
		
	Возврат Настройки;
	
КонецФункции

Функция ЕстьПолучатели(Организация, ВидОтчетности) Экспорт
	
	Если ЗначениеЗаполнено(Организация.УчетнаяЗаписьОбмена) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПравилаОтправкиОтчетностиПоФизЛицам.ОрганПФР КАК ОрганПФР
		|ИЗ
		|	РегистрСведений.ПравилаОтправкиОтчетностиПоФизЛицам КАК ПравилаОтправкиОтчетностиПоФизЛицам
		|ГДЕ
		|	ПравилаОтправкиОтчетностиПоФизЛицам.УчетнаяЗапись = &УчетнаяЗапись
		|	И ПравилаОтправкиОтчетностиПоФизЛицам.ВидОтчетности В(&ВидыОтчетности)";
		
		ВидыОтчетности = Новый Массив;
		ВидыОтчетности.Добавить(ВидОтчетности);
		Если ВидОтчетности = Перечисления.ВидыОтчетностиПоФизЛицам.МакетПенсионныхДел Тогда
			// Для ранее созданных записей не заполнено
			ВидыОтчетности.Добавить(Перечисления.ВидыОтчетностиПоФизЛицам.ПустаяСсылка());
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ВидыОтчетности", ВидыОтчетности);
		Запрос.УстановитьПараметр("УчетнаяЗапись", Организация.УчетнаяЗаписьОбмена);
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат Ложь;
		КонецЕсли;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецЕсли