#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиУчетаФормаСписка.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ПравоРедактированияНастроек = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.УчетнаяПолитика);
	Элементы.ГруппаПечать.Видимость = ПравоРедактированияНастроек;
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтаФорма,
		"БП.РегистрСведений.УчетнаяПолитика",
		"ФормаСписка",
		НСтр("ru='Новости: Учетная политика'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	НастройкиУчетаФормаСпискаКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "Запись_УчетнаяПолитика" Тогда
		ОбновитьОтображениеДанных();
	КонецЕсли;
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	НастройкиУчетаФормаСпискаКлиент.СписокПередНачаломДобавления(ЭтотОбъект, Элемент, Отказ, Копирование, Родитель, Группа);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	НастройкиУчетаФормаСпискаКлиент.СписокПередУдалением(ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	
	НастройкиУчетаФормаСпискаКлиент.СписокПослеУдаления(ЭтотОбъект, "ИзменениеУчетнойПолитики");
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	НастройкиУчетаФормаСписка.СписокПередЗагрузкойПользовательскихНастроекНаСервере(ЭтотОбъект, Элемент, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПечатьПриказ(Команда)
	
	ВыполнитьКомандуПечати("Приказ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУчетнаяПолитикаБУ(Команда)
	
	ВыполнитьКомандуПечати("УчетнаяПолитикаБУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПланСчетов(Команда)
	
	ВыполнитьКомандуПечати("ПланСчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПервичныеДокументы(Команда)
	
	ВыполнитьКомандуПечати("ПервичныеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРегистрыБУ(Команда)
	
	ВыполнитьКомандуПечати("РегистрыБУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУчетнаяПолитикаНУ(Команда)
	
	ВыполнитьКомандуПечати("УчетнаяПолитикаНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРегистрыНУ(Команда)
	
	ВыполнитьКомандуПечати("РегистрыНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьКомандуПечати(ИмяМакета)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ИмяМакета",   ИмяМакета);
	ПараметрыПечати.Вставить("Организация", ТекущиеДанные.Организация);
	ПараметрыПечати.Вставить("Период",      ТекущиеДанные.Период);
	
	Если ИмяМакета = "РегистрыНУ"
		Или ИмяМакета = "РегистрыБУ" 
		Или ИмяМакета = "ПервичныеДокументы"
		Или ИмяМакета = "ПланСчетов" Тогда
		
		ОбъектыПечати = Новый Массив;
		ОбъектыПечати.Добавить(ТекущиеДанные.Организация);
		
		Если ИмяМакета = "РегистрыБУ" Тогда
			ТекстЗаголовка = НСтр("ru = 'Регистры БУ на %1 по %2'");
		ИначеЕсли ИмяМакета = "РегистрыНУ" Тогда
			ТекстЗаголовка = НСтр("ru = 'Регистры НУ на %1 по %2'");
		ИначеЕсли ИмяМакета = "ПервичныеДокументы" Тогда
			ТекстЗаголовка = НСтр("ru = 'Формы первичных документов на %1 по %2'");
		ИначеЕсли ИмяМакета = "ПланСчетов" Тогда
			ТекстЗаголовка = НСтр("ru = 'Рабочий план счетов на %1 по %2'");
		КонецЕсли;
		
		ПараметрыПечати.Вставить("ЗаголовокФормы", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстЗаголовка,
			Формат(ТекущиеДанные.Период, "ДЛФ=D"),
			ТекущиеДанные.Организация));
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("РегистрСведений.УчетнаяПолитика",
			ИмяМакета, ОбъектыПечати, ЭтотОбъект, ПараметрыПечати);
		
	Иначе
		
		ОткрытьФорму("РегистрСведений.УчетнаяПолитика.Форма.ФормаПечати", 
			ПараметрыПечати, ЭтотОбъект, ИмяМакета);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

#КонецОбласти