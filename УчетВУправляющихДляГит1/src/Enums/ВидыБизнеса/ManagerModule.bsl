#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция КоличествоДляВыбора() Экспорт
	
	Возврат Количество() - 1;
	
КонецФункции

Функция Картинка(ВидБизнеса) Экспорт
	
	ИмяКартинки = СтрШаблон("ВидБизнеса%1", ОбщегоНазначения.ИмяЗначенияПеречисления(ВидБизнеса));
	
	КартинкаВидаБизнеса = БиблиотекаКартинок[ИмяКартинки];
	
	Возврат КартинкаВидаБизнеса;
	
КонецФункции

Функция НеобходимаяФункциональность(ВидБизнеса) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидБизнеса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяВидаБизнеса = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидБизнеса);
	
	МакетНастроек = ПолучитьМакет("Функциональность");
	
	// Ищем в макете колонку, которая соответствует выбранному виду бизнеса.
	НомерКолонки = 1;
	Пока Истина Цикл
		НомерКолонки = НомерКолонки + 1;
		Если ПустаяСтрока(МакетНастроек.Область(1, НомерКолонки).Текст) Тогда
			Возврат Неопределено; // В макете нет настройки для выбранного вида бизнеса.
		ИначеЕсли МакетНастроек.Область(1, НомерКолонки).Текст = ИмяВидаБизнеса Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	КонстантыФункциональности = КонстантыФункциональныхОпций(МакетНастроек.ПолучитьОбласть("ФункциональностьПрограммы"), НомерКолонки);
	КонстантыФункциональныхОпций = КонстантыФункциональныхОпций(МакетНастроек.ПолучитьОбласть("ФункциональныеОпции"), НомерКолонки);
	
	Возврат Новый Структура("ФункциональностьПрограммы, ФункциональныеОпции", КонстантыФункциональности, КонстантыФункциональныхОпций);
	
КонецФункции

Функция ОписанияВидовБизнеса() Экспорт
	
	Описания = Новый Соответствие;
	
	КоллекцияМетаданных = Перечисления.ВидыБизнеса.Получить(0).Метаданные().ЗначенияПеречисления;
	Для Каждого МетаданныеЗначения Из КоллекцияМетаданных Цикл
		Описания.Вставить(Перечисления.ВидыБизнеса[МетаданныеЗначения.Имя], МетаданныеЗначения.Комментарий);
	КонецЦикла;
	
	Возврат Описания;
	
КонецФункции

Функция ИдентификаторыВидовБизнеса() Экспорт
	
	ИдентификаторыВидовБизнеса = Новый Соответствие;
	ИдентификаторыВидовБизнеса.Вставить("commission_agent_services", Перечисления.ВидыБизнеса.АгентскиеУслуги);
	ИдентификаторыВидовБизнеса.Вставить("wholesale", Перечисления.ВидыБизнеса.ОптоваяТорговля);
	ИдентификаторыВидовБизнеса.Вставить("b2b_services", Перечисления.ВидыБизнеса.УслугиОрганизациям);
	ИдентификаторыВидовБизнеса.Вставить("manufacturing", Перечисления.ВидыБизнеса.Производство);
	ИдентификаторыВидовБизнеса.Вставить("retail_store", Перечисления.ВидыБизнеса.РозничныйМагазин);
	ИдентификаторыВидовБизнеса.Вставить("b2c_services", Перечисления.ВидыБизнеса.УслугиНаселению);
	ИдентификаторыВидовБизнеса.Вставить("logistics_and_transportation", Перечисления.ВидыБизнеса.ТранспортЛогистика);
	ИдентификаторыВидовБизнеса.Вставить("online_store", Перечисления.ВидыБизнеса.ИнтернетМагазин);
	ИдентификаторыВидовБизнеса.Вставить("catering", Перечисления.ВидыБизнеса.РесторанКафеСтоловая);
	ИдентификаторыВидовБизнеса.Вставить("education", Перечисления.ВидыБизнеса.Обучение);
	ИдентификаторыВидовБизнеса.Вставить("agriculture", Перечисления.ВидыБизнеса.СельскоеХозяйство);
	ИдентификаторыВидовБизнеса.Вставить("default", Перечисления.ВидыБизнеса.Другое);
	Возврат ИдентификаторыВидовБизнеса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КонстантыФункциональныхОпций(ОбластьМакета, НомерКолонки)
	
	ИменаВключаемыхКонстант = Новый Массив;
	
	Для НомерСтроки = 1 По ОбластьМакета.ВысотаТаблицы  Цикл
		
		ИмяКонстанты = ОбластьМакета.Область(НомерСтроки, 1).Текст;
		Если ПустаяСтрока(ИмяКонстанты) Тогда
			Прервать;
		КонецЕсли;
		
		Если Не ПустаяСтрока(ОбластьМакета.Область(НомерСтроки, НомерКолонки).Текст) Тогда
			ИменаВключаемыхКонстант.Добавить(ИмяКонстанты);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИменаВключаемыхКонстант;
	
КонецФункции

#КонецОбласти

#КонецЕсли