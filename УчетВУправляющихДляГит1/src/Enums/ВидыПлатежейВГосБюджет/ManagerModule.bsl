#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора         = ПолучитьДоступныеЗначения(Параметры.Отбор, Параметры.СтрокаПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ВидыНалоговыхПлатежей() Экспорт
	
	ВидыПлатежей = Новый Массив;
	ВидыПлатежей.Добавить(Налог);
	ВидыПлатежей.Добавить(НалогАкт);
	ВидыПлатежей.Добавить(НалогСам);
	ВидыПлатежей.Добавить(ВзносыСвышеПредела);
	ВидыПлатежей.Добавить(ВзносыБезСпецоценки);
	ВидыПлатежей.Добавить(ГосрегистрацияОрганизацийЧерезМФЦ);
	
	Возврат ВидыПлатежей;
	
КонецФункции

// Формирует список выбора видов налоговых обязательств в зависимости от вида налога
//
// Параметры:
//   НалогСсылка - СправочникСсылка.ВидыНалоговИПлатежейВБюджет
//   Период - Дата
//
// Возвращаемое значение:
//  СписокЗначений - список видов налоговых обязательств (ПеречислениеСсылка.ВидыПлатежейВГосБюджет)
//
Функция СписокВидовНалоговыхОбязательств(НалогСсылка, Знач Период = Неопределено) Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	Если Период = Неопределено Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НалогСсылка) Тогда
		СвойстваНалога = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НалогСсылка, "ВидНалога, КодБК");
		ВидНалога = СвойстваНалога.ВидНалога;
		ВидГосударственногоОргана = ПлатежиВБюджетПереопределяемый.ВидГосударственногоОргана(СвойстваНалога.КодБК);
	Иначе
		ВидНалога = Перечисления.ВидыНалогов.ПустаяСсылка();
		ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	КонецЕсли;
	
	// Налог, Взносы
	НеактуальныеНалоги = ПлатежиВБюджетКлиентСерверПереопределяемый.НеактуальныеНалоги();
	Если ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть Тогда
		СписокВыбора.Добавить(
			Перечисления.ВидыПлатежейВГосБюджет.Налог,
			ПредставлениеВзносаИП(Перечисления.ВидыПлатежейВГосБюджет.Налог));
		СписокВыбора.Добавить(
			Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела,
			ПредставлениеВзносаИП(Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела));
	ИначеЕсли Период > УчетЗарплаты.ДатаНачалаАдминистрированияСтраховыхВзносовФНС()
			И (ВидНалога = Перечисления.ВидыНалогов.ДополнительныеВзносы_ПФР_ВредныеУсловия
			ИЛИ ВидНалога = Перечисления.ВидыНалогов.ДополнительныеВзносы_ПФР_ТяжелыеУсловия) Тогда
		// Доп.взносы за вредные и тяжелые условия труда различаются для аттестованных и неаттестованных рабочих мест
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог, НСтр("ru = 'Взносы (спецоценка)'"));
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки, НСтр("ru = 'Взносы (спецоценка отсутствует)'"));
	ИначеЕсли (НеактуальныеНалоги[ВидНалога] <> Неопределено И НЕ НеактуальныеНалоги[ВидНалога].Свойство("АктуальныйНалог"))
		ИЛИ ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганПФР
		ИЛИ ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС Тогда
		// Взносы, которые теперь администрируются ФНС, всё равно являются взносами.
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог, НСтр("ru = 'Взносы'"));
	ИначеЕсли ВидНалога = Перечисления.ВидыНалогов.Госпошлина_ГосрегистрацияОрганизаций Тогда
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог, НСтр("ru = 'Госпошлина'"));
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ГосрегистрацияОрганизацийЧерезМФЦ, НСтр("ru = 'Госпошлина при регистрации через МФЦ'"));
	Иначе
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог, НСтр("ru = 'Налог'"));
	КонецЕсли;
	
	// Пени, Проценты, Штраф
	
	Если ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганПФР Тогда
		ПениПроцентыРаздельно = ПлатежиВБюджетКлиентСервер.ДействуетПриказ90н(Период);
	ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС Тогда
		ПениПроцентыРаздельно = ПлатежиВБюджетКлиентСервер.ДействуетПриказ90н(Период)
			И ВидНалога <> Перечисления.ВидыНалогов.ФиксированныеВзносы_ФСС;
	Иначе // НалоговыйОрган, Прочее
		ПениПроцентыРаздельно = ПлатежиВБюджетКлиентСервер.ДействуетПриказ126н(Период);
	КонецЕсли;
	
	Если ПениПроцентыРаздельно Тогда
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам, НСтр("ru = 'Пени'"));
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Проценты, НСтр("ru = 'Проценты'"));
	Иначе
		СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам, НСтр("ru = 'Пени / Проценты'"));
	КонецЕсли;
	
	СписокВыбора.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Штраф, НСтр("ru = 'Штраф'"));
	
	Возврат СписокВыбора;
	
КонецФункции

// Возвращает представление налогового обязательства для генерации назначения платежа
//
// Параметры:
//   НалогСсылка - СправочникСсылка.ВидыНалоговИПлатежейВБюджет
//   ВидНалоговогоОбязательства - ПеречислениеСсылка.ВидыПлатежейВГосБюджет
//
// Возвращаемое значение:
//  Строка - представление налогового обязательства
//
Функция ПредставлениеНалоговогоОбязательства(НалогСсылка, ВидНалоговогоОбязательства) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидНалоговогоОбязательства) Тогда
		Возврат "";
	КонецЕсли;
	
	Представление = НСтр("ru = 'Платеж'");
	
	ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НалогСсылка, "ВидНалога");
	ВидГосударственногоОргана = Справочники.ВидыНалоговИПлатежейВБюджет.ВидГосударственногоОргана(НалогСсылка);
	Если ЗначениеЗаполнено(ВидГосударственногоОргана) Тогда
		
		Если ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган Тогда
			Если ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоВзносыНаПенсионноеСтрахование(ВидНалога) Тогда
				Если ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоФиксированныеВзносы(ВидНалога) Тогда
					Представление = ПредставлениеОбязательстваПоУплатеФиксированныхВзносов(ВидНалоговогоОбязательства);
				Иначе
					Представление = ПредставлениеОбязательстваПоУплатеВзносовПФР(ВидНалоговогоОбязательства);
				КонецЕсли;
			ИначеЕсли ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоВзносыНаСоциальноеСтрахование(ВидНалога) Тогда
				Представление = ПредставлениеОбязательстваПоУплатеВзносовФСС(ВидНалоговогоОбязательства);
			ИначеЕсли ВидНалога = Перечисления.ВидыНалогов.Госпошлина_ГосрегистрацияОрганизаций Тогда
				Представление = ПредставлениеОбязательстваПоУплатеГоспошлиныЗаРегистрациюОрганизации(ВидНалоговогоОбязательства);
			Иначе
				Представление = ПредставлениеОбязательстваПоУплатеНалогов(ВидНалоговогоОбязательства);
			КонецЕсли;
		ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганПФР Тогда
			Представление = ПредставлениеОбязательстваПоУплатеВзносовПФР(ВидНалоговогоОбязательства);
		ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС Тогда
			Представление = ПредставлениеОбязательстваПоУплатеВзносовФСС(ВидНалоговогоОбязательства);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ЭтоПени(ВидНалоговогоОбязательства) Экспорт
	
	Если ТипЗнч(ВидНалоговогоОбязательства) <> ТипЗнч(ПустаяСсылка()) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидНалоговогоОбязательства = ПениАкт
		Или ВидНалоговогоОбязательства = ПениСам;
	
КонецФункции

Функция ЭтоПроценты(ВидНалоговогоОбязательства) Экспорт
	
	Если ТипЗнч(ВидНалоговогоОбязательства) <> ТипЗнч(ПустаяСсылка()) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидНалоговогоОбязательства = Проценты;
	
КонецФункции

Функция ЭтоШтраф(ВидНалоговогоОбязательства) Экспорт
	
	Если ТипЗнч(ВидНалоговогоОбязательства) <> ТипЗнч(ПустаяСсылка()) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидНалоговогоОбязательства = Штраф;
	
КонецФункции

Функция ЭтоВзносыСвышеПредела(ВидНалоговогоОбязательства) Экспорт
	
	Если ТипЗнч(ВидНалоговогоОбязательства) <> ТипЗнч(ПустаяСсылка()) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидНалоговогоОбязательства = ВзносыСвышеПредела;
	
КонецФункции

Функция ВидПлатежа(ВидНалоговогоОбязательства) Экспорт
	
	ТипЗначения = ТипЗнч(ВидНалоговогоОбязательства);
	
	Если ТипЗнч(ВидНалоговогоОбязательства) = ТипЗнч(ПустаяСсылка()) Тогда
		Возврат ВидНалоговогоОбязательства;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеВзносаИП(ВидПлатежаВГосБюджет) Экспорт
	
	Если ВидПлатежаВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог Тогда
		Возврат НСтр("ru = 'Взносы, постоянная часть'");
	ИначеЕсли ВидПлатежаВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела Тогда
		Возврат НСтр("ru = 'Взносы с доходов свыше предела'");
	Иначе
		Возврат "";
	КонецЕсли
	
КонецФункции

// Возвращает ссылку на значение перечисления по переданному имени.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.ВидыПлатежейВГосБюджет - ссылка на найденное значение перечисление или ПустаяСсылка().
//
Функция ВидНалоговогоОбязательстваПоИмени(ИмяНалоговогоОбязательства) Экспорт
	
	Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыПлатежейВГосБюджет.ЗначенияПеречисления Цикл
		
		Если ВРег(ЗначениеПеречисления.Имя) = ВРег(ИмяНалоговогоОбязательства) Тогда
			Возврат Перечисления.ВидыПлатежейВГосБюджет[ЗначениеПеречисления.Имя];
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеОбязательстваПоУплатеНалогов(ВидНалоговогоОбязательства)
	
	Если ЭтоПени(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Пени по налогу'");
	ИначеЕсли ЭтоПроценты(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Проценты по налогу'");
	ИначеЕсли ЭтоШтраф(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Штраф по налогу'");
	Иначе
		Представление = НСтр("ru = 'Налог'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПредставлениеОбязательстваПоУплатеФиксированныхВзносов(ВидНалоговогоОбязательства)
	
	Если ЭтоВзносыСвышеПредела(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Страховые взносы, исчисленные с суммы дохода'");
	Иначе
		Представление = НСтр("ru = 'Страховые взносы в фиксированном размере'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПредставлениеОбязательстваПоУплатеВзносовПФР(ВидНалоговогоОбязательства)
	
	Если ЭтоПени(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Пени по страховым взносам'");
	ИначеЕсли ЭтоПроценты(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Проценты по страховым взносам'");
	ИначеЕсли ЭтоШтраф(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Штраф по страховым взносам'");
	Иначе
		Представление = НСтр("ru = 'Страховые взносы'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПредставлениеОбязательстваПоУплатеВзносовФСС(ВидНалоговогоОбязательства)
	
	Если ЭтоПени(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Пени по взносам'");
	ИначеЕсли ЭтоПроценты(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Проценты по взносам'");
	ИначеЕсли ЭтоШтраф(ВидНалоговогоОбязательства) Тогда
		Представление = НСтр("ru = 'Штраф по взносам'");
	Иначе
		Представление = НСтр("ru = 'Взносы'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПредставлениеОбязательстваПоУплатеГоспошлиныЗаРегистрациюОрганизации(ВидНалоговогоОбязательства)
	
	Если ВидНалоговогоОбязательства = ГосрегистрацияОрганизацийЧерезМФЦ Тогда
		Представление = НСтр("ru = 'Госпошлина при регистрации через МФЦ'");
	Иначе
		Представление = НСтр("ru = 'Госпошлина'");
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПолучитьДоступныеЗначения(Отбор, СтрокаПоиска)
	
	Исключения = Новый Массив;
	
	Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ2017_90н(ДобавитьМесяц(ОбщегоНазначения.ТекущаяДатаПользователя(),-3)) Тогда
		//Исключения.Добавить(Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию);
		Исключения.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПолученоИзФонда);
		Исключения.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НеПринято);
	КонецЕсли;
	
	СчетУчета = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	Если Отбор.Свойство("СчетУчета", СчетУчета) Тогда
		Если СчетУчета <> ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда
			И СчетУчета <> ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда Тогда
			Исключения.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
		КонецЕсли;
	КонецЕсли;
	
	ДоступныеЗначения = Новый СписокЗначений;
	
	Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыПлатежейВГосБюджет.ЗначенияПеречисления Цикл
		
		Если ТипЗнч(СтрокаПоиска) = Тип("Строка")
			И НЕ ПустаяСтрока(СтрокаПоиска)
			И СтрНайти(НРег(ЗначениеПеречисления.Синоним), НРег(СтрокаПоиска)) <> 1 Тогда
			Продолжить;
		КонецЕсли;
		Ссылка = Перечисления.ВидыПлатежейВГосБюджет[ЗначениеПеречисления.Имя];
		Если ТипЗнч(Отбор) = Тип("ПеречислениеСсылка.ВидыПлатежейВГосБюджет")
			И Отбор <> Ссылка Тогда
			Продолжить;
		ИначеЕсли ТипЗнч(Отбор) = Тип("ФиксированныйМассив")
			И Отбор.Найти(Ссылка) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Исключения.Найти(Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДоступныеЗначения.Добавить(Ссылка, ЗначениеПеречисления.Синоним);
		
	КонецЦикла;
	
	Возврат ДоступныеЗначения;
	
КонецФункции

#КонецОбласти

#КонецЕсли
